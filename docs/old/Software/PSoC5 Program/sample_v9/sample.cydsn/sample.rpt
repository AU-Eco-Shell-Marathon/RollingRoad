Loading plugins phase: Elapsed time ==> 0s.193ms
Initializing data phase: Elapsed time ==> 0s.000ms
<CYPRESSTAG name="CyDsfit arguments...">
cydsfit arguments: -.fdsnotice -.fdswarpdepfile=warp_dependencies.txt -.fdselabdepfile=elab_dependencies.txt -.fdsbldfile=generated_files.txt -p C:\Users\Ibrahim\Documents\Desktop\sample_v9\sample.cydsn\sample.cyprj -d CY8C5868AXI-LP035 -s C:\Users\Ibrahim\Documents\Desktop\sample_v9\sample.cydsn\Generated_Source\PSoC5 -- -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE</CYPRESSTAG>
<CYPRESSTAG name="Design elaboration results...">
ADD: sdb.M0065: information: Analog terminal "vdac_ref" on ADC_SAR_SEQ_v2_0 is unconnected.
 * C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Signal: vdac_ref)
 * C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Shape_798)
 * C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Shape_885)

ADD: pft.M0028: warning: Clock Warning: (Log_Clock's accuracy range '5  Hz -50% +100%, (2.5  Hz - 10  Hz)' is not within the specified tolerance range '5  Hz +/- 5%, (4.75  Hz - 5.25  Hz)'.).
 * C:\Users\Ibrahim\Documents\Desktop\sample_v9\sample.cydsn\sample.cydwr (Log_Clock)
 * C:\Users\Ibrahim\Documents\Desktop\sample_v9\sample.cydsn\TopDesign\TopDesign.cysch (Instance:Log_Clock)

ADD: pft.M0028: warning: Clock Warning: (PWM_Clock's accuracy range '6 MHz +/- 1%, (5.94 MHz - 6.06 MHz)' is not within the specified tolerance range '5.45 MHz +/- 5%, (5.178 MHz - 5.723 MHz)'.).
 * C:\Users\Ibrahim\Documents\Desktop\sample_v9\sample.cydsn\sample.cydwr (PWM_Clock)
 * C:\Users\Ibrahim\Documents\Desktop\sample_v9\sample.cydsn\TopDesign\TopDesign.cysch (Instance:PWM_Clock)

</CYPRESSTAG>
Elaboration phase: Elapsed time ==> 2s.198ms
<CYPRESSTAG name="HDL generation results...">
</CYPRESSTAG>
HDL generation phase: Elapsed time ==> 0s.110ms
<CYPRESSTAG name="Synthesis results...">

     | | | | | | |
   _________________
  -|               |-
  -|               |-
  -|               |-
  -|    CYPRESS    |-
  -|               |-
  -|               |-   Warp Verilog Synthesis Compiler: Version 6.3 IR 41
  -|               |-   Copyright (C) 1991-2001 Cypress Semiconductor
   |_______________|
     | | | | | | |

======================================================================
Compiling:  sample.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\bin/warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\Ibrahim\Documents\Desktop\sample_v9\sample.cydsn\sample.cyprj -dcpsoc3 sample.v -verilog
======================================================================

======================================================================
Compiling:  sample.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\bin/warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\Ibrahim\Documents\Desktop\sample_v9\sample.cydsn\sample.cyprj -dcpsoc3 sample.v -verilog
======================================================================

======================================================================
Compiling:  sample.v
Program  :   vlogfe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\Ibrahim\Documents\Desktop\sample_v9\sample.cydsn\sample.cyprj -dcpsoc3 -verilog sample.v
======================================================================

vlogfe V6.3 IR 41:  Verilog parser
Mon Jan 11 10:09:22 2016


======================================================================
Compiling:  sample.v
Program  :   vpp
Options  :    -yv2 -q10 sample.v
======================================================================

vpp V6.3 IR 41:  Verilog Pre-Processor
Mon Jan 11 10:09:22 2016

Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\ZeroTerminal\ZeroTerminal.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_vref_v1_60\cy_vref_v1_60.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\or_v1_0\or_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\OneTerminal\OneTerminal.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_Counter_v3_0\B_Counter_v3_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.v'

vpp:  No errors.

Library 'work' => directory 'lcpsoc3'
General_symbol_table
General_symbol_table
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Using control file 'sample.ctl'.
sample.v (line 672, col 82):  Note: Substituting module 'cmp_vv_vv' for '='.
C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1113, col 55):  Note: Substituting module 'add_vv_vv' for '+'.
C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1122, col 48):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1122, col 77):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1389, col 59):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1424, col 61):  Note: Substituting module 'cmp_vv_vv' for '/='.
C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1547, col 106):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1603, col 68):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1604, col 68):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v (line 947, col 46):  Note: Substituting module 'sub_vi_vv' for '-'.
C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v (line 977, col 46):  Note: Substituting module 'add_vi_vv' for '+'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.

vlogfe:  No errors.


======================================================================
Compiling:  sample.v
Program  :   tovif
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\Ibrahim\Documents\Desktop\sample_v9\sample.cydsn\sample.cyprj -dcpsoc3 -verilog sample.v
======================================================================

tovif V6.3 IR 41:  High-level synthesis
Mon Jan 11 10:09:23 2016

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'C:\Users\Ibrahim\Documents\Desktop\sample_v9\sample.cydsn\codegentemp\sample.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Users\Ibrahim\Documents\Desktop\sample_v9\sample.cydsn\codegentemp\sample.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_vref_v1_60\cy_vref_v1_60.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\OneTerminal\OneTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_Counter_v3_0\B_Counter_v3_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\lcpsoc3\stdlogic\mod_cnst.vif'.

tovif:  No errors.


======================================================================
Compiling:  sample.v
Program  :   topld
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\Ibrahim\Documents\Desktop\sample_v9\sample.cydsn\sample.cyprj -dcpsoc3 -verilog sample.v
======================================================================

topld V6.3 IR 41:  Synthesis and optimization
Mon Jan 11 10:09:24 2016

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'C:\Users\Ibrahim\Documents\Desktop\sample_v9\sample.cydsn\codegentemp\sample.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Users\Ibrahim\Documents\Desktop\sample_v9\sample.cydsn\codegentemp\sample.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_vref_v1_60\cy_vref_v1_60.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\OneTerminal\OneTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_Counter_v3_0\B_Counter_v3_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\lcpsoc3\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\lcpsoc3\stdlogic\cpsoc3.vif'.

----------------------------------------------------------
Detecting unused logic.
----------------------------------------------------------
    User names
	\AD_konverter:SAR:Net_221\
	\AD_konverter:SAR:Net_381\
	\AD_konverter:bSAR_SEQ:sw_soc\
	\AD_konverter:Net_3905\
	\AD_konverter:Net_3867\
	\AD_konverter:MODULE_1:g1:a0:gx:u0:albi_2\
	\AD_konverter:MODULE_1:g1:a0:gx:u0:agbi_2\
	\AD_konverter:MODULE_1:g1:a0:gx:u0:albi_1\
	\AD_konverter:MODULE_1:g1:a0:gx:u0:agbi_1\
	\AD_konverter:MODULE_1:g1:a0:gx:u0:albi_0\
	\AD_konverter:MODULE_1:g1:a0:gx:u0:agbi_0\
	\AD_konverter:MODULE_1:g1:a0:xneq\
	\AD_konverter:MODULE_1:g1:a0:xlt\
	\AD_konverter:MODULE_1:g1:a0:xlte\
	\AD_konverter:MODULE_1:g1:a0:xgt\
	\AD_konverter:MODULE_1:g1:a0:xgte\
	\AD_konverter:MODULE_1:lt\
	\AD_konverter:MODULE_1:gt\
	\AD_konverter:MODULE_1:gte\
	\AD_konverter:MODULE_1:lte\
	\AD_konverter:MODULE_1:neq\
	\UART:BUART:reset_sr\
	Net_1500
	\UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:b_1\
	\UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:b_0\
	\UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:gta_0\
	\UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_0\
	Net_1497
	\UART:BUART:sRX:MODULE_5:g2:a0:gta_0\
	\UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:albi_1\
	\UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:agbi_1\
	\UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:lt_0\
	\UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:gt_0\
	\UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:lti_0\
	\UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:gti_0\
	\UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:albi_0\
	\UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:agbi_0\
	\UART:BUART:sRX:MODULE_6:g1:a0:xeq\
	\UART:BUART:sRX:MODULE_6:g1:a0:xlt\
	\UART:BUART:sRX:MODULE_6:g1:a0:xlte\
	\UART:BUART:sRX:MODULE_6:g1:a0:xgt\
	\UART:BUART:sRX:MODULE_6:g1:a0:xgte\
	\UART:BUART:sRX:MODULE_6:lt\
	\UART:BUART:sRX:MODULE_6:eq\
	\UART:BUART:sRX:MODULE_6:gt\
	\UART:BUART:sRX:MODULE_6:gte\
	\UART:BUART:sRX:MODULE_6:lte\
	\PWM_Regulering:PWMUDB:km_run\
	\PWM_Regulering:PWMUDB:ctrl_cmpmode2_2\
	\PWM_Regulering:PWMUDB:ctrl_cmpmode2_1\
	\PWM_Regulering:PWMUDB:ctrl_cmpmode2_0\
	\PWM_Regulering:PWMUDB:ctrl_cmpmode1_2\
	\PWM_Regulering:PWMUDB:ctrl_cmpmode1_1\
	\PWM_Regulering:PWMUDB:ctrl_cmpmode1_0\
	\PWM_Regulering:PWMUDB:capt_rising\
	\PWM_Regulering:PWMUDB:capt_falling\
	\PWM_Regulering:PWMUDB:trig_rise\
	\PWM_Regulering:PWMUDB:trig_fall\
	\PWM_Regulering:PWMUDB:sc_kill\
	\PWM_Regulering:PWMUDB:min_kill\
	\PWM_Regulering:PWMUDB:km_tc\
	\PWM_Regulering:PWMUDB:db_tc\
	\PWM_Regulering:PWMUDB:dith_sel\
	\PWM_Regulering:PWMUDB:compare2\
	\PWM_Regulering:Net_101\
	Net_1341
	Net_1342
	\PWM_Regulering:PWMUDB:MODULE_7:b_31\
	\PWM_Regulering:PWMUDB:MODULE_7:b_30\
	\PWM_Regulering:PWMUDB:MODULE_7:b_29\
	\PWM_Regulering:PWMUDB:MODULE_7:b_28\
	\PWM_Regulering:PWMUDB:MODULE_7:b_27\
	\PWM_Regulering:PWMUDB:MODULE_7:b_26\
	\PWM_Regulering:PWMUDB:MODULE_7:b_25\
	\PWM_Regulering:PWMUDB:MODULE_7:b_24\
	\PWM_Regulering:PWMUDB:MODULE_7:b_23\
	\PWM_Regulering:PWMUDB:MODULE_7:b_22\
	\PWM_Regulering:PWMUDB:MODULE_7:b_21\
	\PWM_Regulering:PWMUDB:MODULE_7:b_20\
	\PWM_Regulering:PWMUDB:MODULE_7:b_19\
	\PWM_Regulering:PWMUDB:MODULE_7:b_18\
	\PWM_Regulering:PWMUDB:MODULE_7:b_17\
	\PWM_Regulering:PWMUDB:MODULE_7:b_16\
	\PWM_Regulering:PWMUDB:MODULE_7:b_15\
	\PWM_Regulering:PWMUDB:MODULE_7:b_14\
	\PWM_Regulering:PWMUDB:MODULE_7:b_13\
	\PWM_Regulering:PWMUDB:MODULE_7:b_12\
	\PWM_Regulering:PWMUDB:MODULE_7:b_11\
	\PWM_Regulering:PWMUDB:MODULE_7:b_10\
	\PWM_Regulering:PWMUDB:MODULE_7:b_9\
	\PWM_Regulering:PWMUDB:MODULE_7:b_8\
	\PWM_Regulering:PWMUDB:MODULE_7:b_7\
	\PWM_Regulering:PWMUDB:MODULE_7:b_6\
	\PWM_Regulering:PWMUDB:MODULE_7:b_5\
	\PWM_Regulering:PWMUDB:MODULE_7:b_4\
	\PWM_Regulering:PWMUDB:MODULE_7:b_3\
	\PWM_Regulering:PWMUDB:MODULE_7:b_2\
	\PWM_Regulering:PWMUDB:MODULE_7:b_1\
	\PWM_Regulering:PWMUDB:MODULE_7:b_0\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_31\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_30\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_29\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_28\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_27\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_26\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_25\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_24\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:b_31\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:b_30\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:b_29\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:b_28\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:b_27\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:b_26\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:b_25\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:b_24\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:b_23\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:b_22\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:b_21\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:b_20\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:b_19\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:b_18\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:b_17\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:b_16\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:b_15\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:b_14\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:b_13\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:b_12\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:b_11\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:b_10\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:b_9\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:b_8\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:b_7\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:b_6\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:b_5\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:b_4\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:b_3\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:b_2\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:b_1\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:b_0\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:s_31\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:s_30\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:s_29\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:s_28\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:s_27\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:s_26\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:s_25\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:s_24\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:s_23\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:s_22\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:s_21\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:s_20\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:s_19\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:s_18\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:s_17\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:s_16\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:s_15\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:s_14\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:s_13\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:s_12\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:s_11\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:s_10\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:s_9\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:s_8\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:s_7\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:s_6\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:s_5\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:s_4\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:s_3\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:s_2\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_31\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_30\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_29\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_28\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_27\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_26\
	\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_25\
	Net_1343
	Net_1340
	\PWM_Regulering:Net_113\
	\PWM_Regulering:Net_107\
	\PWM_Regulering:Net_114\
	Net_1918
	Net_1916
	\Counter_Speed:Net_49\
	\Counter_Speed:Net_82\
	\Counter_Speed:Net_95\
	\Counter_Speed:Net_91\
	\Counter_Speed:Net_102\
	Net_1917
	\Counter_Speed:CounterUDB:reload_tc\
	\PWM_Speed:PWMUDB:km_run\
	\PWM_Speed:PWMUDB:ctrl_cmpmode2_2\
	\PWM_Speed:PWMUDB:ctrl_cmpmode2_1\
	\PWM_Speed:PWMUDB:ctrl_cmpmode2_0\
	\PWM_Speed:PWMUDB:ctrl_cmpmode1_2\
	\PWM_Speed:PWMUDB:ctrl_cmpmode1_1\
	\PWM_Speed:PWMUDB:ctrl_cmpmode1_0\
	\PWM_Speed:PWMUDB:capt_rising\
	\PWM_Speed:PWMUDB:capt_falling\
	\PWM_Speed:PWMUDB:trig_rise\
	\PWM_Speed:PWMUDB:trig_fall\
	\PWM_Speed:PWMUDB:sc_kill\
	\PWM_Speed:PWMUDB:min_kill\
	\PWM_Speed:PWMUDB:km_tc\
	\PWM_Speed:PWMUDB:db_tc\
	\PWM_Speed:PWMUDB:dith_sel\
	\PWM_Speed:PWMUDB:compare2\
	\PWM_Speed:Net_101\
	Net_2156
	Net_2157
	\PWM_Speed:PWMUDB:MODULE_8:b_31\
	\PWM_Speed:PWMUDB:MODULE_8:b_30\
	\PWM_Speed:PWMUDB:MODULE_8:b_29\
	\PWM_Speed:PWMUDB:MODULE_8:b_28\
	\PWM_Speed:PWMUDB:MODULE_8:b_27\
	\PWM_Speed:PWMUDB:MODULE_8:b_26\
	\PWM_Speed:PWMUDB:MODULE_8:b_25\
	\PWM_Speed:PWMUDB:MODULE_8:b_24\
	\PWM_Speed:PWMUDB:MODULE_8:b_23\
	\PWM_Speed:PWMUDB:MODULE_8:b_22\
	\PWM_Speed:PWMUDB:MODULE_8:b_21\
	\PWM_Speed:PWMUDB:MODULE_8:b_20\
	\PWM_Speed:PWMUDB:MODULE_8:b_19\
	\PWM_Speed:PWMUDB:MODULE_8:b_18\
	\PWM_Speed:PWMUDB:MODULE_8:b_17\
	\PWM_Speed:PWMUDB:MODULE_8:b_16\
	\PWM_Speed:PWMUDB:MODULE_8:b_15\
	\PWM_Speed:PWMUDB:MODULE_8:b_14\
	\PWM_Speed:PWMUDB:MODULE_8:b_13\
	\PWM_Speed:PWMUDB:MODULE_8:b_12\
	\PWM_Speed:PWMUDB:MODULE_8:b_11\
	\PWM_Speed:PWMUDB:MODULE_8:b_10\
	\PWM_Speed:PWMUDB:MODULE_8:b_9\
	\PWM_Speed:PWMUDB:MODULE_8:b_8\
	\PWM_Speed:PWMUDB:MODULE_8:b_7\
	\PWM_Speed:PWMUDB:MODULE_8:b_6\
	\PWM_Speed:PWMUDB:MODULE_8:b_5\
	\PWM_Speed:PWMUDB:MODULE_8:b_4\
	\PWM_Speed:PWMUDB:MODULE_8:b_3\
	\PWM_Speed:PWMUDB:MODULE_8:b_2\
	\PWM_Speed:PWMUDB:MODULE_8:b_1\
	\PWM_Speed:PWMUDB:MODULE_8:b_0\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_31\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_30\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_29\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_28\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_27\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_26\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_25\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_24\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:b_31\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:b_30\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:b_29\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:b_28\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:b_27\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:b_26\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:b_25\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:b_24\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:b_23\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:b_22\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:b_21\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:b_20\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:b_19\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:b_18\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:b_17\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:b_16\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:b_15\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:b_14\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:b_13\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:b_12\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:b_11\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:b_10\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:b_9\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:b_8\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:b_7\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:b_6\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:b_5\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:b_4\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:b_3\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:b_2\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:b_1\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:b_0\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:s_31\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:s_30\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:s_29\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:s_28\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:s_27\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:s_26\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:s_25\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:s_24\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:s_23\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:s_22\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:s_21\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:s_20\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:s_19\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:s_18\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:s_17\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:s_16\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:s_15\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:s_14\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:s_13\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:s_12\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:s_11\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:s_10\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:s_9\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:s_8\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:s_7\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:s_6\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:s_5\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:s_4\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:s_3\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:s_2\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_31\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_30\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_29\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_28\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_27\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_26\
	\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_25\
	Net_2155
	\PWM_Speed:Net_113\
	\PWM_Speed:Net_107\
	\PWM_Speed:Net_114\

    Synthesized names
	\PWM_Regulering:PWMUDB:add_vi_vv_MODGEN_7_31\
	\PWM_Regulering:PWMUDB:add_vi_vv_MODGEN_7_30\
	\PWM_Regulering:PWMUDB:add_vi_vv_MODGEN_7_29\
	\PWM_Regulering:PWMUDB:add_vi_vv_MODGEN_7_28\
	\PWM_Regulering:PWMUDB:add_vi_vv_MODGEN_7_27\
	\PWM_Regulering:PWMUDB:add_vi_vv_MODGEN_7_26\
	\PWM_Regulering:PWMUDB:add_vi_vv_MODGEN_7_25\
	\PWM_Regulering:PWMUDB:add_vi_vv_MODGEN_7_24\
	\PWM_Regulering:PWMUDB:add_vi_vv_MODGEN_7_23\
	\PWM_Regulering:PWMUDB:add_vi_vv_MODGEN_7_22\
	\PWM_Regulering:PWMUDB:add_vi_vv_MODGEN_7_21\
	\PWM_Regulering:PWMUDB:add_vi_vv_MODGEN_7_20\
	\PWM_Regulering:PWMUDB:add_vi_vv_MODGEN_7_19\
	\PWM_Regulering:PWMUDB:add_vi_vv_MODGEN_7_18\
	\PWM_Regulering:PWMUDB:add_vi_vv_MODGEN_7_17\
	\PWM_Regulering:PWMUDB:add_vi_vv_MODGEN_7_16\
	\PWM_Regulering:PWMUDB:add_vi_vv_MODGEN_7_15\
	\PWM_Regulering:PWMUDB:add_vi_vv_MODGEN_7_14\
	\PWM_Regulering:PWMUDB:add_vi_vv_MODGEN_7_13\
	\PWM_Regulering:PWMUDB:add_vi_vv_MODGEN_7_12\
	\PWM_Regulering:PWMUDB:add_vi_vv_MODGEN_7_11\
	\PWM_Regulering:PWMUDB:add_vi_vv_MODGEN_7_10\
	\PWM_Regulering:PWMUDB:add_vi_vv_MODGEN_7_9\
	\PWM_Regulering:PWMUDB:add_vi_vv_MODGEN_7_8\
	\PWM_Regulering:PWMUDB:add_vi_vv_MODGEN_7_7\
	\PWM_Regulering:PWMUDB:add_vi_vv_MODGEN_7_6\
	\PWM_Regulering:PWMUDB:add_vi_vv_MODGEN_7_5\
	\PWM_Regulering:PWMUDB:add_vi_vv_MODGEN_7_4\
	\PWM_Regulering:PWMUDB:add_vi_vv_MODGEN_7_3\
	\PWM_Regulering:PWMUDB:add_vi_vv_MODGEN_7_2\
	\PWM_Speed:PWMUDB:add_vi_vv_MODGEN_8_31\
	\PWM_Speed:PWMUDB:add_vi_vv_MODGEN_8_30\
	\PWM_Speed:PWMUDB:add_vi_vv_MODGEN_8_29\
	\PWM_Speed:PWMUDB:add_vi_vv_MODGEN_8_28\
	\PWM_Speed:PWMUDB:add_vi_vv_MODGEN_8_27\
	\PWM_Speed:PWMUDB:add_vi_vv_MODGEN_8_26\
	\PWM_Speed:PWMUDB:add_vi_vv_MODGEN_8_25\
	\PWM_Speed:PWMUDB:add_vi_vv_MODGEN_8_24\
	\PWM_Speed:PWMUDB:add_vi_vv_MODGEN_8_23\
	\PWM_Speed:PWMUDB:add_vi_vv_MODGEN_8_22\
	\PWM_Speed:PWMUDB:add_vi_vv_MODGEN_8_21\
	\PWM_Speed:PWMUDB:add_vi_vv_MODGEN_8_20\
	\PWM_Speed:PWMUDB:add_vi_vv_MODGEN_8_19\
	\PWM_Speed:PWMUDB:add_vi_vv_MODGEN_8_18\
	\PWM_Speed:PWMUDB:add_vi_vv_MODGEN_8_17\
	\PWM_Speed:PWMUDB:add_vi_vv_MODGEN_8_16\
	\PWM_Speed:PWMUDB:add_vi_vv_MODGEN_8_15\
	\PWM_Speed:PWMUDB:add_vi_vv_MODGEN_8_14\
	\PWM_Speed:PWMUDB:add_vi_vv_MODGEN_8_13\
	\PWM_Speed:PWMUDB:add_vi_vv_MODGEN_8_12\
	\PWM_Speed:PWMUDB:add_vi_vv_MODGEN_8_11\
	\PWM_Speed:PWMUDB:add_vi_vv_MODGEN_8_10\
	\PWM_Speed:PWMUDB:add_vi_vv_MODGEN_8_9\
	\PWM_Speed:PWMUDB:add_vi_vv_MODGEN_8_8\
	\PWM_Speed:PWMUDB:add_vi_vv_MODGEN_8_7\
	\PWM_Speed:PWMUDB:add_vi_vv_MODGEN_8_6\
	\PWM_Speed:PWMUDB:add_vi_vv_MODGEN_8_5\
	\PWM_Speed:PWMUDB:add_vi_vv_MODGEN_8_4\
	\PWM_Speed:PWMUDB:add_vi_vv_MODGEN_8_3\
	\PWM_Speed:PWMUDB:add_vi_vv_MODGEN_8_2\

Deleted 323 User equations/components.
Deleted 60 Synthesized equations/components.

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing \AD_konverter:SAR:vp_ctl_2\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \AD_konverter:SAR:vn_ctl_1\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \AD_konverter:SAR:vn_ctl_3\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \AD_konverter:SAR:vp_ctl_1\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \AD_konverter:SAR:vp_ctl_3\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \AD_konverter:SAR:vn_ctl_0\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \AD_konverter:SAR:vn_ctl_2\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing zero to \AD_konverter:SAR:vp_ctl_0\
Aliasing one to \AD_konverter:AMuxHw_2_Decoder_enable\
Aliasing \AD_konverter:bSAR_SEQ:status_7\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \AD_konverter:bSAR_SEQ:status_6\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \AD_konverter:bSAR_SEQ:status_5\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \AD_konverter:bSAR_SEQ:status_4\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \AD_konverter:bSAR_SEQ:status_3\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \AD_konverter:bSAR_SEQ:status_2\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \AD_konverter:bSAR_SEQ:status_1\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing Net_688 to \AD_konverter:bSAR_SEQ:status_0\
Aliasing \AD_konverter:MODULE_1:g1:a0:gx:u0:aeqb_0\ to \AD_konverter:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__Rx_net_0 to \AD_konverter:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__Pin_Voltage_net_0 to \AD_konverter:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__Pin_Current_net_0 to \AD_konverter:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__Pin_Load_Current_net_0 to \AD_konverter:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__Pin_Torque_net_0 to \AD_konverter:AMuxHw_2_Decoder_enable\
Aliasing Net_1493 to \AD_konverter:SAR:vp_ctl_0\
Aliasing \UART:BUART:tx_hd_send_break\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \UART:BUART:HalfDuplexSend\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \UART:BUART:FinalParityType_1\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \UART:BUART:FinalParityType_0\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \UART:BUART:FinalAddrMode_2\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \UART:BUART:FinalAddrMode_1\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \UART:BUART:FinalAddrMode_0\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \UART:BUART:tx_ctrl_mark\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \UART:BUART:tx_status_6\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \UART:BUART:tx_status_5\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \UART:BUART:tx_status_4\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \UART:BUART:rx_count7_bit8_wire\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\ to \AD_konverter:AMuxHw_2_Decoder_enable\
Aliasing \UART:BUART:sRX:s23Poll:MODIN4_1\ to \UART:BUART:sRX:s23Poll:MODIN3_1\
Aliasing \UART:BUART:sRX:s23Poll:MODIN4_0\ to \UART:BUART:sRX:s23Poll:MODIN3_0\
Aliasing \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_1\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_0\ to \AD_konverter:AMuxHw_2_Decoder_enable\
Aliasing \UART:BUART:sRX:s23Poll:MODIN5_1\ to \UART:BUART:sRX:s23Poll:MODIN3_1\
Aliasing \UART:BUART:sRX:s23Poll:MODIN5_0\ to \UART:BUART:sRX:s23Poll:MODIN3_0\
Aliasing \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_1\ to \AD_konverter:AMuxHw_2_Decoder_enable\
Aliasing \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_0\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \UART:BUART:rx_status_1\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \UART:BUART:sRX:MODULE_5:g2:a0:newa_6\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \UART:BUART:sRX:MODULE_5:g2:a0:newa_5\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \UART:BUART:sRX:MODULE_5:g2:a0:newa_4\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \UART:BUART:sRX:MODULE_5:g2:a0:newb_6\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \UART:BUART:sRX:MODULE_5:g2:a0:newb_5\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \UART:BUART:sRX:MODULE_5:g2:a0:newb_4\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \UART:BUART:sRX:MODULE_5:g2:a0:newb_3\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \UART:BUART:sRX:MODULE_5:g2:a0:newb_2\ to \AD_konverter:AMuxHw_2_Decoder_enable\
Aliasing \UART:BUART:sRX:MODULE_5:g2:a0:newb_1\ to \AD_konverter:AMuxHw_2_Decoder_enable\
Aliasing \UART:BUART:sRX:MODULE_5:g2:a0:newb_0\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:aeqb_0\ to \AD_konverter:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__Tx_net_0 to \AD_konverter:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__Pin_Speed_net_0 to \AD_konverter:AMuxHw_2_Decoder_enable\
Aliasing \PWM_Regulering:PWMUDB:hwCapture\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Regulering:PWMUDB:trig_out\ to \AD_konverter:AMuxHw_2_Decoder_enable\
Aliasing Net_1118 to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Regulering:PWMUDB:runmode_enable\\S\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Regulering:PWMUDB:ltch_kill_reg\\R\ to \PWM_Regulering:PWMUDB:runmode_enable\\R\
Aliasing \PWM_Regulering:PWMUDB:ltch_kill_reg\\S\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Regulering:PWMUDB:min_kill_reg\\R\ to \PWM_Regulering:PWMUDB:runmode_enable\\R\
Aliasing \PWM_Regulering:PWMUDB:min_kill_reg\\S\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Regulering:PWMUDB:final_kill\ to \AD_konverter:AMuxHw_2_Decoder_enable\
Aliasing \PWM_Regulering:PWMUDB:dith_count_1\\R\ to \PWM_Regulering:PWMUDB:runmode_enable\\R\
Aliasing \PWM_Regulering:PWMUDB:dith_count_1\\S\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Regulering:PWMUDB:dith_count_0\\R\ to \PWM_Regulering:PWMUDB:runmode_enable\\R\
Aliasing \PWM_Regulering:PWMUDB:dith_count_0\\S\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Regulering:PWMUDB:status_6\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Regulering:PWMUDB:status_4\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Regulering:PWMUDB:cmp2\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Regulering:PWMUDB:cmp1_status_reg\\R\ to \PWM_Regulering:PWMUDB:runmode_enable\\R\
Aliasing \PWM_Regulering:PWMUDB:cmp1_status_reg\\S\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Regulering:PWMUDB:cmp2_status_reg\\R\ to \PWM_Regulering:PWMUDB:runmode_enable\\R\
Aliasing \PWM_Regulering:PWMUDB:cmp2_status_reg\\S\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Regulering:PWMUDB:final_kill_reg\\R\ to \PWM_Regulering:PWMUDB:runmode_enable\\R\
Aliasing \PWM_Regulering:PWMUDB:final_kill_reg\\S\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Regulering:PWMUDB:cs_addr_0\ to \PWM_Regulering:PWMUDB:runmode_enable\\R\
Aliasing \PWM_Regulering:PWMUDB:pwm1_i\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Regulering:PWMUDB:pwm2_i\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_23\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_22\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_21\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_20\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_19\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_18\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_17\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_16\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_15\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_14\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_13\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_12\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_11\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_10\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_9\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_8\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_7\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_6\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_5\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_4\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_3\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_2\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:b_0\ to \AD_konverter:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__PWM_Out_net_0 to \AD_konverter:AMuxHw_2_Decoder_enable\
Aliasing \Counter_Speed:Net_89\ to \AD_konverter:AMuxHw_2_Decoder_enable\
Aliasing \Counter_Speed:CounterUDB:ctrl_capmode_1\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \Counter_Speed:CounterUDB:ctrl_capmode_0\ to \AD_konverter:AMuxHw_2_Decoder_enable\
Aliasing Net_1 to \AD_konverter:SAR:vp_ctl_0\
Aliasing Net_308 to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Speed:PWMUDB:hwCapture\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Speed:PWMUDB:trig_out\ to \AD_konverter:AMuxHw_2_Decoder_enable\
Aliasing \PWM_Speed:PWMUDB:runmode_enable\\S\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Speed:PWMUDB:ltch_kill_reg\\R\ to \PWM_Speed:PWMUDB:runmode_enable\\R\
Aliasing \PWM_Speed:PWMUDB:ltch_kill_reg\\S\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Speed:PWMUDB:min_kill_reg\\R\ to \PWM_Speed:PWMUDB:runmode_enable\\R\
Aliasing \PWM_Speed:PWMUDB:min_kill_reg\\S\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Speed:PWMUDB:final_kill\ to \AD_konverter:AMuxHw_2_Decoder_enable\
Aliasing \PWM_Speed:PWMUDB:dith_count_1\\R\ to \PWM_Speed:PWMUDB:runmode_enable\\R\
Aliasing \PWM_Speed:PWMUDB:dith_count_1\\S\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Speed:PWMUDB:dith_count_0\\R\ to \PWM_Speed:PWMUDB:runmode_enable\\R\
Aliasing \PWM_Speed:PWMUDB:dith_count_0\\S\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Speed:PWMUDB:status_6\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Speed:PWMUDB:status_4\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Speed:PWMUDB:cmp2\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Speed:PWMUDB:cmp1_status_reg\\R\ to \PWM_Speed:PWMUDB:runmode_enable\\R\
Aliasing \PWM_Speed:PWMUDB:cmp1_status_reg\\S\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Speed:PWMUDB:cmp2_status_reg\\R\ to \PWM_Speed:PWMUDB:runmode_enable\\R\
Aliasing \PWM_Speed:PWMUDB:cmp2_status_reg\\S\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Speed:PWMUDB:final_kill_reg\\R\ to \PWM_Speed:PWMUDB:runmode_enable\\R\
Aliasing \PWM_Speed:PWMUDB:final_kill_reg\\S\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Speed:PWMUDB:cs_addr_0\ to \PWM_Speed:PWMUDB:runmode_enable\\R\
Aliasing \PWM_Speed:PWMUDB:pwm1_i\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Speed:PWMUDB:pwm2_i\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_23\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_22\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_21\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_20\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_19\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_18\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_17\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_16\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_15\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_14\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_13\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_12\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_11\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_10\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_9\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_8\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_7\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_6\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_5\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_4\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_3\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_2\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:b_0\ to \AD_konverter:AMuxHw_2_Decoder_enable\
Aliasing \AD_konverter:AMuxHw_2_Decoder_old_id_5\\D\ to \AD_konverter:MODIN1_5\
Aliasing \AD_konverter:AMuxHw_2_Decoder_old_id_4\\D\ to \AD_konverter:MODIN1_4\
Aliasing \AD_konverter:AMuxHw_2_Decoder_old_id_3\\D\ to \AD_konverter:MODIN1_3\
Aliasing \AD_konverter:AMuxHw_2_Decoder_old_id_2\\D\ to \AD_konverter:MODIN1_2\
Aliasing \AD_konverter:AMuxHw_2_Decoder_old_id_1\\D\ to \AD_konverter:MODIN1_1\
Aliasing \AD_konverter:AMuxHw_2_Decoder_old_id_0\\D\ to \AD_konverter:MODIN1_0\
Aliasing \AD_konverter:bSAR_SEQ:state_2\\D\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \UART:BUART:rx_break_status\\D\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Regulering:PWMUDB:min_kill_reg\\D\ to \AD_konverter:AMuxHw_2_Decoder_enable\
Aliasing \PWM_Regulering:PWMUDB:prevCapture\\D\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Regulering:PWMUDB:trig_last\\D\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Regulering:PWMUDB:ltch_kill_reg\\D\ to \AD_konverter:AMuxHw_2_Decoder_enable\
Aliasing \PWM_Regulering:PWMUDB:prevCompare1\\D\ to \PWM_Regulering:PWMUDB:pwm_temp\
Aliasing \PWM_Regulering:PWMUDB:tc_i_reg\\D\ to \PWM_Regulering:PWMUDB:status_2\
Aliasing \Counter_Speed:CounterUDB:cmp_out_reg_i\\D\ to \Counter_Speed:CounterUDB:prevCompare\\D\
Aliasing \PWM_Speed:PWMUDB:min_kill_reg\\D\ to \AD_konverter:AMuxHw_2_Decoder_enable\
Aliasing \PWM_Speed:PWMUDB:prevCapture\\D\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Speed:PWMUDB:trig_last\\D\ to \AD_konverter:SAR:vp_ctl_0\
Aliasing \PWM_Speed:PWMUDB:ltch_kill_reg\\D\ to \AD_konverter:AMuxHw_2_Decoder_enable\
Aliasing \PWM_Speed:PWMUDB:prevCompare1\\D\ to \PWM_Speed:PWMUDB:pwm_temp\
Aliasing \PWM_Speed:PWMUDB:tc_i_reg\\D\ to \PWM_Speed:PWMUDB:status_2\
Removing Lhs of wire \AD_konverter:cmp_vv_vv_MODGEN_1\[2] = \AD_konverter:MODULE_1:g1:a0:xeq\[346]
Removing Rhs of wire \AD_konverter:clock\[3] = \AD_konverter:Net_3874\[246]
Removing Rhs of wire \AD_konverter:ch_addr_5\[5] = \AD_konverter:bSAR_SEQ:count_5\[206]
Removing Rhs of wire \AD_konverter:ch_addr_4\[7] = \AD_konverter:bSAR_SEQ:count_4\[207]
Removing Rhs of wire \AD_konverter:ch_addr_3\[9] = \AD_konverter:bSAR_SEQ:count_3\[208]
Removing Rhs of wire \AD_konverter:ch_addr_2\[11] = \AD_konverter:bSAR_SEQ:count_2\[209]
Removing Rhs of wire \AD_konverter:ch_addr_1\[13] = \AD_konverter:bSAR_SEQ:count_1\[210]
Removing Rhs of wire \AD_konverter:ch_addr_0\[15] = \AD_konverter:bSAR_SEQ:count_0\[211]
Removing Lhs of wire \AD_konverter:SAR:vp_ctl_2\[150] = \AD_konverter:SAR:vp_ctl_0\[149]
Removing Lhs of wire \AD_konverter:SAR:vn_ctl_1\[151] = \AD_konverter:SAR:vp_ctl_0\[149]
Removing Lhs of wire \AD_konverter:SAR:vn_ctl_3\[152] = \AD_konverter:SAR:vp_ctl_0\[149]
Removing Lhs of wire \AD_konverter:SAR:vp_ctl_1\[153] = \AD_konverter:SAR:vp_ctl_0\[149]
Removing Lhs of wire \AD_konverter:SAR:vp_ctl_3\[154] = \AD_konverter:SAR:vp_ctl_0\[149]
Removing Lhs of wire \AD_konverter:SAR:vn_ctl_0\[155] = \AD_konverter:SAR:vp_ctl_0\[149]
Removing Lhs of wire \AD_konverter:SAR:vn_ctl_2\[156] = \AD_konverter:SAR:vp_ctl_0\[149]
Removing Lhs of wire \AD_konverter:SAR:Net_188\[157] = \AD_konverter:clock\[3]
Removing Rhs of wire \AD_konverter:soc_out\[163] = \AD_konverter:bSAR_SEQ:state_0\[230]
Removing Rhs of wire zero[164] = \AD_konverter:SAR:vp_ctl_0\[149]
Removing Rhs of wire \AD_konverter:bSAR_SEQ:enable\[195] = \AD_konverter:bSAR_SEQ:control_0\[196]
Removing Rhs of wire \AD_konverter:bSAR_SEQ:load_period\[197] = \AD_konverter:bSAR_SEQ:control_1\[198]
Removing Rhs of wire one[204] = \AD_konverter:AMuxHw_2_Decoder_enable\[0]
Removing Lhs of wire \AD_konverter:bSAR_SEQ:status_7\[212] = zero[164]
Removing Lhs of wire \AD_konverter:bSAR_SEQ:status_6\[213] = zero[164]
Removing Lhs of wire \AD_konverter:bSAR_SEQ:status_5\[214] = zero[164]
Removing Lhs of wire \AD_konverter:bSAR_SEQ:status_4\[215] = zero[164]
Removing Lhs of wire \AD_konverter:bSAR_SEQ:status_3\[216] = zero[164]
Removing Lhs of wire \AD_konverter:bSAR_SEQ:status_2\[217] = zero[164]
Removing Lhs of wire \AD_konverter:bSAR_SEQ:status_1\[218] = zero[164]
Removing Rhs of wire \AD_konverter:bSAR_SEQ:status_0\[219] = \AD_konverter:bSAR_SEQ:nrq_edge_detect_reg\[220]
Removing Rhs of wire Net_688[227] = \AD_konverter:bSAR_SEQ:status_0\[219]
Removing Rhs of wire \AD_konverter:bSAR_SEQ:soc_in\[228] = \AD_konverter:bSAR_SEQ:soc_edge_detect_reg\[229]
Removing Lhs of wire \AD_konverter:MODULE_1:g1:a0:newa_5\[257] = \AD_konverter:MODIN1_5\[258]
Removing Lhs of wire \AD_konverter:MODIN1_5\[258] = \AD_konverter:ch_addr_5\[5]
Removing Lhs of wire \AD_konverter:MODULE_1:g1:a0:newa_4\[259] = \AD_konverter:MODIN1_4\[260]
Removing Lhs of wire \AD_konverter:MODIN1_4\[260] = \AD_konverter:ch_addr_4\[7]
Removing Lhs of wire \AD_konverter:MODULE_1:g1:a0:newa_3\[261] = \AD_konverter:MODIN1_3\[262]
Removing Lhs of wire \AD_konverter:MODIN1_3\[262] = \AD_konverter:ch_addr_3\[9]
Removing Lhs of wire \AD_konverter:MODULE_1:g1:a0:newa_2\[263] = \AD_konverter:MODIN1_2\[264]
Removing Lhs of wire \AD_konverter:MODIN1_2\[264] = \AD_konverter:ch_addr_2\[11]
Removing Lhs of wire \AD_konverter:MODULE_1:g1:a0:newa_1\[265] = \AD_konverter:MODIN1_1\[266]
Removing Lhs of wire \AD_konverter:MODIN1_1\[266] = \AD_konverter:ch_addr_1\[13]
Removing Lhs of wire \AD_konverter:MODULE_1:g1:a0:newa_0\[267] = \AD_konverter:MODIN1_0\[268]
Removing Lhs of wire \AD_konverter:MODIN1_0\[268] = \AD_konverter:ch_addr_0\[15]
Removing Lhs of wire \AD_konverter:MODULE_1:g1:a0:newb_5\[269] = \AD_konverter:MODIN2_5\[270]
Removing Lhs of wire \AD_konverter:MODIN2_5\[270] = \AD_konverter:AMuxHw_2_Decoder_old_id_5\[4]
Removing Lhs of wire \AD_konverter:MODULE_1:g1:a0:newb_4\[271] = \AD_konverter:MODIN2_4\[272]
Removing Lhs of wire \AD_konverter:MODIN2_4\[272] = \AD_konverter:AMuxHw_2_Decoder_old_id_4\[6]
Removing Lhs of wire \AD_konverter:MODULE_1:g1:a0:newb_3\[273] = \AD_konverter:MODIN2_3\[274]
Removing Lhs of wire \AD_konverter:MODIN2_3\[274] = \AD_konverter:AMuxHw_2_Decoder_old_id_3\[8]
Removing Lhs of wire \AD_konverter:MODULE_1:g1:a0:newb_2\[275] = \AD_konverter:MODIN2_2\[276]
Removing Lhs of wire \AD_konverter:MODIN2_2\[276] = \AD_konverter:AMuxHw_2_Decoder_old_id_2\[10]
Removing Lhs of wire \AD_konverter:MODULE_1:g1:a0:newb_1\[277] = \AD_konverter:MODIN2_1\[278]
Removing Lhs of wire \AD_konverter:MODIN2_1\[278] = \AD_konverter:AMuxHw_2_Decoder_old_id_1\[12]
Removing Lhs of wire \AD_konverter:MODULE_1:g1:a0:newb_0\[279] = \AD_konverter:MODIN2_0\[280]
Removing Lhs of wire \AD_konverter:MODIN2_0\[280] = \AD_konverter:AMuxHw_2_Decoder_old_id_0\[14]
Removing Lhs of wire \AD_konverter:MODULE_1:g1:a0:dataa_5\[281] = \AD_konverter:ch_addr_5\[5]
Removing Lhs of wire \AD_konverter:MODULE_1:g1:a0:dataa_4\[282] = \AD_konverter:ch_addr_4\[7]
Removing Lhs of wire \AD_konverter:MODULE_1:g1:a0:dataa_3\[283] = \AD_konverter:ch_addr_3\[9]
Removing Lhs of wire \AD_konverter:MODULE_1:g1:a0:dataa_2\[284] = \AD_konverter:ch_addr_2\[11]
Removing Lhs of wire \AD_konverter:MODULE_1:g1:a0:dataa_1\[285] = \AD_konverter:ch_addr_1\[13]
Removing Lhs of wire \AD_konverter:MODULE_1:g1:a0:dataa_0\[286] = \AD_konverter:ch_addr_0\[15]
Removing Lhs of wire \AD_konverter:MODULE_1:g1:a0:datab_5\[287] = \AD_konverter:AMuxHw_2_Decoder_old_id_5\[4]
Removing Lhs of wire \AD_konverter:MODULE_1:g1:a0:datab_4\[288] = \AD_konverter:AMuxHw_2_Decoder_old_id_4\[6]
Removing Lhs of wire \AD_konverter:MODULE_1:g1:a0:datab_3\[289] = \AD_konverter:AMuxHw_2_Decoder_old_id_3\[8]
Removing Lhs of wire \AD_konverter:MODULE_1:g1:a0:datab_2\[290] = \AD_konverter:AMuxHw_2_Decoder_old_id_2\[10]
Removing Lhs of wire \AD_konverter:MODULE_1:g1:a0:datab_1\[291] = \AD_konverter:AMuxHw_2_Decoder_old_id_1\[12]
Removing Lhs of wire \AD_konverter:MODULE_1:g1:a0:datab_0\[292] = \AD_konverter:AMuxHw_2_Decoder_old_id_0\[14]
Removing Lhs of wire \AD_konverter:MODULE_1:g1:a0:gx:u0:a_5\[293] = \AD_konverter:ch_addr_5\[5]
Removing Lhs of wire \AD_konverter:MODULE_1:g1:a0:gx:u0:a_4\[294] = \AD_konverter:ch_addr_4\[7]
Removing Lhs of wire \AD_konverter:MODULE_1:g1:a0:gx:u0:a_3\[295] = \AD_konverter:ch_addr_3\[9]
Removing Lhs of wire \AD_konverter:MODULE_1:g1:a0:gx:u0:a_2\[296] = \AD_konverter:ch_addr_2\[11]
Removing Lhs of wire \AD_konverter:MODULE_1:g1:a0:gx:u0:a_1\[297] = \AD_konverter:ch_addr_1\[13]
Removing Lhs of wire \AD_konverter:MODULE_1:g1:a0:gx:u0:a_0\[298] = \AD_konverter:ch_addr_0\[15]
Removing Lhs of wire \AD_konverter:MODULE_1:g1:a0:gx:u0:b_5\[299] = \AD_konverter:AMuxHw_2_Decoder_old_id_5\[4]
Removing Lhs of wire \AD_konverter:MODULE_1:g1:a0:gx:u0:b_4\[300] = \AD_konverter:AMuxHw_2_Decoder_old_id_4\[6]
Removing Lhs of wire \AD_konverter:MODULE_1:g1:a0:gx:u0:b_3\[301] = \AD_konverter:AMuxHw_2_Decoder_old_id_3\[8]
Removing Lhs of wire \AD_konverter:MODULE_1:g1:a0:gx:u0:b_2\[302] = \AD_konverter:AMuxHw_2_Decoder_old_id_2\[10]
Removing Lhs of wire \AD_konverter:MODULE_1:g1:a0:gx:u0:b_1\[303] = \AD_konverter:AMuxHw_2_Decoder_old_id_1\[12]
Removing Lhs of wire \AD_konverter:MODULE_1:g1:a0:gx:u0:b_0\[304] = \AD_konverter:AMuxHw_2_Decoder_old_id_0\[14]
Removing Lhs of wire \AD_konverter:MODULE_1:g1:a0:gx:u0:aeqb_0\[311] = one[204]
Removing Lhs of wire \AD_konverter:MODULE_1:g1:a0:gx:u0:eq_0\[312] = \AD_konverter:MODULE_1:g1:a0:gx:u0:xnor_array_0\[310]
Removing Lhs of wire \AD_konverter:MODULE_1:g1:a0:gx:u0:eqi_0\[318] = \AD_konverter:MODULE_1:g1:a0:gx:u0:eq_5\[317]
Removing Rhs of wire \AD_konverter:MODULE_1:g1:a0:xeq\[346] = \AD_konverter:MODULE_1:g1:a0:gx:u0:aeqb_1\[319]
Removing Lhs of wire tmpOE__Rx_net_0[358] = one[204]
Removing Lhs of wire tmpOE__Pin_Voltage_net_0[364] = one[204]
Removing Lhs of wire tmpOE__Pin_Current_net_0[372] = one[204]
Removing Lhs of wire tmpOE__Pin_Load_Current_net_0[378] = one[204]
Removing Lhs of wire tmpOE__Pin_Torque_net_0[384] = one[204]
Removing Lhs of wire \UART:Net_61\[391] = \UART:Net_9\[390]
Removing Lhs of wire Net_1493[395] = zero[164]
Removing Lhs of wire \UART:BUART:tx_hd_send_break\[396] = zero[164]
Removing Lhs of wire \UART:BUART:HalfDuplexSend\[397] = zero[164]
Removing Lhs of wire \UART:BUART:FinalParityType_1\[398] = zero[164]
Removing Lhs of wire \UART:BUART:FinalParityType_0\[399] = zero[164]
Removing Lhs of wire \UART:BUART:FinalAddrMode_2\[400] = zero[164]
Removing Lhs of wire \UART:BUART:FinalAddrMode_1\[401] = zero[164]
Removing Lhs of wire \UART:BUART:FinalAddrMode_0\[402] = zero[164]
Removing Lhs of wire \UART:BUART:tx_ctrl_mark\[403] = zero[164]
Removing Rhs of wire Net_641[410] = \UART:BUART:rx_interrupt_out\[411]
Removing Rhs of wire \UART:BUART:tx_bitclk_enable_pre\[415] = \UART:BUART:tx_bitclk_dp\[451]
Removing Lhs of wire \UART:BUART:tx_counter_tc\[461] = \UART:BUART:tx_counter_dp\[452]
Removing Lhs of wire \UART:BUART:tx_status_6\[462] = zero[164]
Removing Lhs of wire \UART:BUART:tx_status_5\[463] = zero[164]
Removing Lhs of wire \UART:BUART:tx_status_4\[464] = zero[164]
Removing Lhs of wire \UART:BUART:tx_status_1\[466] = \UART:BUART:tx_fifo_empty\[429]
Removing Lhs of wire \UART:BUART:tx_status_3\[468] = \UART:BUART:tx_fifo_notfull\[428]
Removing Lhs of wire \UART:BUART:rx_count7_bit8_wire\[528] = zero[164]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:add_vv_vv_MODGEN_2_1\[535] = \UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_1\[546]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:add_vv_vv_MODGEN_2_0\[537] = \UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_0\[547]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:cmp_vv_vv_MODGEN_3\[538] = \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_0\[563]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:cmp_vv_vv_MODGEN_4\[539] = \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\[577]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:a_1\[540] = \UART:BUART:sRX:s23Poll:MODIN3_1\[541]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODIN3_1\[541] = \UART:BUART:pollcount_1\[534]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:a_0\[542] = \UART:BUART:sRX:s23Poll:MODIN3_0\[543]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODIN3_0\[543] = \UART:BUART:pollcount_0\[536]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_0\[549] = one[204]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\[550] = one[204]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:newa_1\[551] = \UART:BUART:pollcount_1\[534]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODIN4_1\[552] = \UART:BUART:pollcount_1\[534]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:newa_0\[553] = \UART:BUART:pollcount_0\[536]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODIN4_0\[554] = \UART:BUART:pollcount_0\[536]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_1\[555] = zero[164]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_0\[556] = one[204]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:dataa_1\[557] = \UART:BUART:pollcount_1\[534]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:dataa_0\[558] = \UART:BUART:pollcount_0\[536]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:datab_1\[559] = zero[164]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:datab_0\[560] = one[204]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newa_1\[565] = \UART:BUART:pollcount_1\[534]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODIN5_1\[566] = \UART:BUART:pollcount_1\[534]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newa_0\[567] = \UART:BUART:pollcount_0\[536]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODIN5_0\[568] = \UART:BUART:pollcount_0\[536]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_1\[569] = one[204]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_0\[570] = zero[164]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:dataa_1\[571] = \UART:BUART:pollcount_1\[534]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:dataa_0\[572] = \UART:BUART:pollcount_0\[536]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:datab_1\[573] = one[204]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:datab_0\[574] = zero[164]
Removing Lhs of wire \UART:BUART:rx_status_1\[581] = zero[164]
Removing Rhs of wire \UART:BUART:rx_status_2\[582] = \UART:BUART:rx_parity_error_status\[583]
Removing Rhs of wire \UART:BUART:rx_status_3\[584] = \UART:BUART:rx_stop_bit_error\[585]
Removing Lhs of wire \UART:BUART:sRX:cmp_vv_vv_MODGEN_5\[595] = \UART:BUART:sRX:MODULE_5:g2:a0:lta_0\[644]
Removing Lhs of wire \UART:BUART:sRX:cmp_vv_vv_MODGEN_6\[599] = \UART:BUART:sRX:MODULE_6:g1:a0:xneq\[666]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newa_6\[600] = zero[164]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newa_5\[601] = zero[164]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newa_4\[602] = zero[164]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newa_3\[603] = \UART:BUART:sRX:MODIN6_6\[604]
Removing Lhs of wire \UART:BUART:sRX:MODIN6_6\[604] = \UART:BUART:rx_count_6\[523]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newa_2\[605] = \UART:BUART:sRX:MODIN6_5\[606]
Removing Lhs of wire \UART:BUART:sRX:MODIN6_5\[606] = \UART:BUART:rx_count_5\[524]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newa_1\[607] = \UART:BUART:sRX:MODIN6_4\[608]
Removing Lhs of wire \UART:BUART:sRX:MODIN6_4\[608] = \UART:BUART:rx_count_4\[525]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newa_0\[609] = \UART:BUART:sRX:MODIN6_3\[610]
Removing Lhs of wire \UART:BUART:sRX:MODIN6_3\[610] = \UART:BUART:rx_count_3\[526]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newb_6\[611] = zero[164]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newb_5\[612] = zero[164]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newb_4\[613] = zero[164]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newb_3\[614] = zero[164]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newb_2\[615] = one[204]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newb_1\[616] = one[204]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newb_0\[617] = zero[164]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:dataa_6\[618] = zero[164]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:dataa_5\[619] = zero[164]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:dataa_4\[620] = zero[164]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:dataa_3\[621] = \UART:BUART:rx_count_6\[523]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:dataa_2\[622] = \UART:BUART:rx_count_5\[524]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:dataa_1\[623] = \UART:BUART:rx_count_4\[525]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:dataa_0\[624] = \UART:BUART:rx_count_3\[526]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:datab_6\[625] = zero[164]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:datab_5\[626] = zero[164]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:datab_4\[627] = zero[164]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:datab_3\[628] = zero[164]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:datab_2\[629] = one[204]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:datab_1\[630] = one[204]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:datab_0\[631] = zero[164]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g1:a0:newa_0\[646] = \UART:BUART:rx_postpoll\[482]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g1:a0:newb_0\[647] = \UART:BUART:rx_parity_bit\[598]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g1:a0:dataa_0\[648] = \UART:BUART:rx_postpoll\[482]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g1:a0:datab_0\[649] = \UART:BUART:rx_parity_bit\[598]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:a_0\[650] = \UART:BUART:rx_postpoll\[482]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:b_0\[651] = \UART:BUART:rx_parity_bit\[598]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:aeqb_0\[653] = one[204]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:eq_0\[654] = \UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:xnor_array_0\[652]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:eqi_0\[655] = \UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:xnor_array_0\[652]
Removing Lhs of wire tmpOE__Tx_net_0[677] = one[204]
Removing Rhs of wire Net_554[683] = \PWM_Speed:Net_55\[1347]
Removing Lhs of wire tmpOE__Pin_Speed_net_0[686] = one[204]
Removing Lhs of wire \PWM_Regulering:PWMUDB:ctrl_enable\[711] = \PWM_Regulering:PWMUDB:control_7\[703]
Removing Lhs of wire \PWM_Regulering:PWMUDB:hwCapture\[721] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:hwEnable\[722] = \PWM_Regulering:PWMUDB:control_7\[703]
Removing Lhs of wire \PWM_Regulering:PWMUDB:trig_out\[726] = one[204]
Removing Lhs of wire \PWM_Regulering:PWMUDB:runmode_enable\\R\[728] = zero[164]
Removing Lhs of wire Net_1118[729] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:runmode_enable\\S\[730] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:final_enable\[731] = \PWM_Regulering:PWMUDB:runmode_enable\[727]
Removing Lhs of wire \PWM_Regulering:PWMUDB:ltch_kill_reg\\R\[735] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:ltch_kill_reg\\S\[736] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:min_kill_reg\\R\[737] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:min_kill_reg\\S\[738] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:final_kill\[741] = one[204]
Removing Lhs of wire \PWM_Regulering:PWMUDB:add_vi_vv_MODGEN_7_1\[745] = \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:s_1\[984]
Removing Lhs of wire \PWM_Regulering:PWMUDB:add_vi_vv_MODGEN_7_0\[747] = \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:s_0\[985]
Removing Lhs of wire \PWM_Regulering:PWMUDB:dith_count_1\\R\[748] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:dith_count_1\\S\[749] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:dith_count_0\\R\[750] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:dith_count_0\\S\[751] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:status_6\[754] = zero[164]
Removing Rhs of wire \PWM_Regulering:PWMUDB:status_5\[755] = \PWM_Regulering:PWMUDB:final_kill_reg\[769]
Removing Lhs of wire \PWM_Regulering:PWMUDB:status_4\[756] = zero[164]
Removing Rhs of wire \PWM_Regulering:PWMUDB:status_3\[757] = \PWM_Regulering:PWMUDB:fifo_full\[776]
Removing Rhs of wire \PWM_Regulering:PWMUDB:status_1\[759] = \PWM_Regulering:PWMUDB:cmp2_status_reg\[768]
Removing Rhs of wire \PWM_Regulering:PWMUDB:status_0\[760] = \PWM_Regulering:PWMUDB:cmp1_status_reg\[767]
Removing Lhs of wire \PWM_Regulering:PWMUDB:cmp2_status\[765] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:cmp2\[766] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:cmp1_status_reg\\R\[770] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:cmp1_status_reg\\S\[771] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:cmp2_status_reg\\R\[772] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:cmp2_status_reg\\S\[773] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:final_kill_reg\\R\[774] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:final_kill_reg\\S\[775] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:cs_addr_2\[777] = \PWM_Regulering:PWMUDB:tc_i\[733]
Removing Lhs of wire \PWM_Regulering:PWMUDB:cs_addr_1\[778] = \PWM_Regulering:PWMUDB:runmode_enable\[727]
Removing Lhs of wire \PWM_Regulering:PWMUDB:cs_addr_0\[779] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:compare1\[812] = \PWM_Regulering:PWMUDB:cmp1_less\[783]
Removing Lhs of wire \PWM_Regulering:PWMUDB:pwm1_i\[817] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:pwm2_i\[819] = zero[164]
Removing Rhs of wire \PWM_Regulering:Net_96\[822] = \PWM_Regulering:PWMUDB:pwm_i_reg\[814]
Removing Lhs of wire \PWM_Regulering:PWMUDB:pwm_temp\[825] = \PWM_Regulering:PWMUDB:cmp1\[763]
Removing Lhs of wire \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_23\[866] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_22\[867] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_21\[868] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_20\[869] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_19\[870] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_18\[871] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_17\[872] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_16\[873] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_15\[874] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_14\[875] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_13\[876] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_12\[877] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_11\[878] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_10\[879] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_9\[880] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_8\[881] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_7\[882] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_6\[883] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_5\[884] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_4\[885] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_3\[886] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_2\[887] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_1\[888] = \PWM_Regulering:PWMUDB:MODIN7_1\[889]
Removing Lhs of wire \PWM_Regulering:PWMUDB:MODIN7_1\[889] = \PWM_Regulering:PWMUDB:dith_count_1\[744]
Removing Lhs of wire \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:a_0\[890] = \PWM_Regulering:PWMUDB:MODIN7_0\[891]
Removing Lhs of wire \PWM_Regulering:PWMUDB:MODIN7_0\[891] = \PWM_Regulering:PWMUDB:dith_count_0\[746]
Removing Lhs of wire \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_0\[1023] = one[204]
Removing Lhs of wire \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:b_0\[1024] = one[204]
Removing Rhs of wire Net_1095[1025] = \PWM_Regulering:Net_96\[822]
Removing Lhs of wire tmpOE__PWM_Out_net_0[1033] = one[204]
Removing Lhs of wire \Counter_Speed:Net_89\[1043] = one[204]
Removing Rhs of wire \Counter_Speed:CounterUDB:ctrl_cmod_2\[1050] = \Counter_Speed:CounterUDB:control_2\[1051]
Removing Rhs of wire \Counter_Speed:CounterUDB:ctrl_cmod_1\[1052] = \Counter_Speed:CounterUDB:control_1\[1053]
Removing Rhs of wire \Counter_Speed:CounterUDB:ctrl_cmod_0\[1054] = \Counter_Speed:CounterUDB:control_0\[1055]
Removing Lhs of wire \Counter_Speed:CounterUDB:ctrl_capmode_1\[1056] = zero[164]
Removing Lhs of wire \Counter_Speed:CounterUDB:ctrl_capmode_0\[1057] = one[204]
Removing Lhs of wire \Counter_Speed:CounterUDB:ctrl_enable\[1066] = \Counter_Speed:CounterUDB:control_7\[1061]
Removing Rhs of wire Net_1630[1068] = \PWM_Speed:Net_96\[1456]
Removing Rhs of wire Net_1630[1068] = \PWM_Speed:PWMUDB:pwm_i_reg\[1448]
Removing Lhs of wire Net_1[1074] = zero[164]
Removing Lhs of wire \Counter_Speed:CounterUDB:final_enable\[1075] = \Counter_Speed:CounterUDB:control_7\[1061]
Removing Lhs of wire \Counter_Speed:CounterUDB:counter_enable\[1076] = \Counter_Speed:CounterUDB:control_7\[1061]
Removing Rhs of wire \Counter_Speed:CounterUDB:status_0\[1077] = \Counter_Speed:CounterUDB:cmp_out_status\[1078]
Removing Rhs of wire \Counter_Speed:CounterUDB:status_1\[1079] = \Counter_Speed:CounterUDB:per_zero\[1080]
Removing Rhs of wire \Counter_Speed:CounterUDB:status_2\[1081] = \Counter_Speed:CounterUDB:overflow_status\[1082]
Removing Rhs of wire \Counter_Speed:CounterUDB:status_3\[1083] = \Counter_Speed:CounterUDB:underflow_status\[1084]
Removing Lhs of wire \Counter_Speed:CounterUDB:status_4\[1085] = \Counter_Speed:CounterUDB:hwCapture\[1072]
Removing Rhs of wire \Counter_Speed:CounterUDB:status_5\[1086] = \Counter_Speed:CounterUDB:fifo_full\[1087]
Removing Rhs of wire \Counter_Speed:CounterUDB:status_6\[1088] = \Counter_Speed:CounterUDB:fifo_nempty\[1089]
Removing Lhs of wire \Counter_Speed:CounterUDB:dp_dir\[1092] = one[204]
Removing Lhs of wire \Counter_Speed:CounterUDB:cs_addr_2\[1108] = one[204]
Removing Lhs of wire \Counter_Speed:CounterUDB:cs_addr_1\[1109] = \Counter_Speed:CounterUDB:count_enable\[1106]
Removing Lhs of wire \Counter_Speed:CounterUDB:cs_addr_0\[1110] = \Counter_Speed:CounterUDB:reload\[1073]
Removing Lhs of wire Net_308[1282] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:ctrl_enable\[1298] = \PWM_Speed:PWMUDB:control_7\[1290]
Removing Lhs of wire \PWM_Speed:PWMUDB:hwCapture\[1308] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:hwEnable\[1309] = \PWM_Speed:PWMUDB:control_7\[1290]
Removing Lhs of wire \PWM_Speed:PWMUDB:trig_out\[1313] = one[204]
Removing Lhs of wire \PWM_Speed:PWMUDB:runmode_enable\\R\[1315] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:runmode_enable\\S\[1316] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:final_enable\[1317] = \PWM_Speed:PWMUDB:runmode_enable\[1314]
Removing Lhs of wire \PWM_Speed:PWMUDB:ltch_kill_reg\\R\[1321] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:ltch_kill_reg\\S\[1322] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:min_kill_reg\\R\[1323] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:min_kill_reg\\S\[1324] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:final_kill\[1327] = one[204]
Removing Lhs of wire \PWM_Speed:PWMUDB:add_vi_vv_MODGEN_8_1\[1331] = \PWM_Speed:PWMUDB:MODULE_8:g2:a0:s_1\[1618]
Removing Lhs of wire \PWM_Speed:PWMUDB:add_vi_vv_MODGEN_8_0\[1333] = \PWM_Speed:PWMUDB:MODULE_8:g2:a0:s_0\[1619]
Removing Lhs of wire \PWM_Speed:PWMUDB:dith_count_1\\R\[1334] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:dith_count_1\\S\[1335] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:dith_count_0\\R\[1336] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:dith_count_0\\S\[1337] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:status_6\[1340] = zero[164]
Removing Rhs of wire \PWM_Speed:PWMUDB:status_5\[1341] = \PWM_Speed:PWMUDB:final_kill_reg\[1355]
Removing Lhs of wire \PWM_Speed:PWMUDB:status_4\[1342] = zero[164]
Removing Rhs of wire \PWM_Speed:PWMUDB:status_3\[1343] = \PWM_Speed:PWMUDB:fifo_full\[1362]
Removing Rhs of wire \PWM_Speed:PWMUDB:status_1\[1345] = \PWM_Speed:PWMUDB:cmp2_status_reg\[1354]
Removing Rhs of wire \PWM_Speed:PWMUDB:status_0\[1346] = \PWM_Speed:PWMUDB:cmp1_status_reg\[1353]
Removing Lhs of wire \PWM_Speed:PWMUDB:cmp2_status\[1351] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:cmp2\[1352] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:cmp1_status_reg\\R\[1356] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:cmp1_status_reg\\S\[1357] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:cmp2_status_reg\\R\[1358] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:cmp2_status_reg\\S\[1359] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:final_kill_reg\\R\[1360] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:final_kill_reg\\S\[1361] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:cs_addr_2\[1363] = \PWM_Speed:PWMUDB:tc_i\[1319]
Removing Lhs of wire \PWM_Speed:PWMUDB:cs_addr_1\[1364] = \PWM_Speed:PWMUDB:runmode_enable\[1314]
Removing Lhs of wire \PWM_Speed:PWMUDB:cs_addr_0\[1365] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:pwm1_i\[1451] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:pwm2_i\[1453] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:pwm_temp\[1459] = \PWM_Speed:PWMUDB:cmp1\[1349]
Removing Lhs of wire \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_23\[1500] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_22\[1501] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_21\[1502] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_20\[1503] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_19\[1504] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_18\[1505] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_17\[1506] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_16\[1507] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_15\[1508] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_14\[1509] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_13\[1510] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_12\[1511] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_11\[1512] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_10\[1513] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_9\[1514] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_8\[1515] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_7\[1516] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_6\[1517] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_5\[1518] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_4\[1519] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_3\[1520] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_2\[1521] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_1\[1522] = \PWM_Speed:PWMUDB:MODIN8_1\[1523]
Removing Lhs of wire \PWM_Speed:PWMUDB:MODIN8_1\[1523] = \PWM_Speed:PWMUDB:dith_count_1\[1330]
Removing Lhs of wire \PWM_Speed:PWMUDB:MODULE_8:g2:a0:a_0\[1524] = \PWM_Speed:PWMUDB:MODIN8_0\[1525]
Removing Lhs of wire \PWM_Speed:PWMUDB:MODIN8_0\[1525] = \PWM_Speed:PWMUDB:dith_count_0\[1332]
Removing Lhs of wire \PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_0\[1657] = one[204]
Removing Lhs of wire \PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:b_0\[1658] = one[204]
Removing Lhs of wire \AD_konverter:AMuxHw_2_Decoder_old_id_5\\D\[1664] = \AD_konverter:ch_addr_5\[5]
Removing Lhs of wire \AD_konverter:AMuxHw_2_Decoder_old_id_4\\D\[1665] = \AD_konverter:ch_addr_4\[7]
Removing Lhs of wire \AD_konverter:AMuxHw_2_Decoder_old_id_3\\D\[1666] = \AD_konverter:ch_addr_3\[9]
Removing Lhs of wire \AD_konverter:AMuxHw_2_Decoder_old_id_2\\D\[1667] = \AD_konverter:ch_addr_2\[11]
Removing Lhs of wire \AD_konverter:AMuxHw_2_Decoder_old_id_1\\D\[1668] = \AD_konverter:ch_addr_1\[13]
Removing Lhs of wire \AD_konverter:AMuxHw_2_Decoder_old_id_0\\D\[1669] = \AD_konverter:ch_addr_0\[15]
Removing Lhs of wire \AD_konverter:bSAR_SEQ:nrq_edge_detect_reg\\D\[1734] = \AD_konverter:bSAR_SEQ:nrq_edge_detect\[226]
Removing Lhs of wire \AD_konverter:bSAR_SEQ:nrq_reg\\D\[1736] = \AD_konverter:bSAR_SEQ:bus_clk_nrq_reg\[223]
Removing Lhs of wire \AD_konverter:bSAR_SEQ:soc_edge_detect_reg\\D\[1737] = \AD_konverter:bSAR_SEQ:soc_edge_detect\[233]
Removing Lhs of wire \AD_konverter:bSAR_SEQ:soc_reg\\D\[1739] = Net_1417[232]
Removing Lhs of wire \AD_konverter:bSAR_SEQ:state_2\\D\[1740] = zero[164]
Removing Lhs of wire \UART:BUART:reset_reg\\D\[1742] = zero[164]
Removing Lhs of wire \UART:BUART:rx_bitclk\\D\[1757] = \UART:BUART:rx_bitclk_pre\[517]
Removing Lhs of wire \UART:BUART:rx_parity_error_pre\\D\[1766] = \UART:BUART:rx_parity_error_pre\[593]
Removing Lhs of wire \UART:BUART:rx_break_status\\D\[1767] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:min_kill_reg\\D\[1771] = one[204]
Removing Lhs of wire \PWM_Regulering:PWMUDB:prevCapture\\D\[1772] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:trig_last\\D\[1773] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:ltch_kill_reg\\D\[1776] = one[204]
Removing Lhs of wire \PWM_Regulering:PWMUDB:prevCompare1\\D\[1779] = \PWM_Regulering:PWMUDB:cmp1\[763]
Removing Lhs of wire \PWM_Regulering:PWMUDB:cmp1_status_reg\\D\[1780] = \PWM_Regulering:PWMUDB:cmp1_status\[764]
Removing Lhs of wire \PWM_Regulering:PWMUDB:cmp2_status_reg\\D\[1781] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:pwm_i_reg\\D\[1783] = \PWM_Regulering:PWMUDB:pwm_i\[815]
Removing Lhs of wire \PWM_Regulering:PWMUDB:pwm1_i_reg\\D\[1784] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:pwm2_i_reg\\D\[1785] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:tc_i_reg\\D\[1786] = \PWM_Regulering:PWMUDB:status_2\[758]
Removing Lhs of wire \Counter_Speed:CounterUDB:prevCapture\\D\[1787] = Net_1630[1068]
Removing Lhs of wire \Counter_Speed:CounterUDB:overflow_reg_i\\D\[1788] = \Counter_Speed:CounterUDB:overflow\[1091]
Removing Lhs of wire \Counter_Speed:CounterUDB:underflow_reg_i\\D\[1789] = \Counter_Speed:CounterUDB:underflow\[1094]
Removing Lhs of wire \Counter_Speed:CounterUDB:tc_reg_i\\D\[1790] = \Counter_Speed:CounterUDB:tc_i\[1097]
Removing Lhs of wire \Counter_Speed:CounterUDB:prevCompare\\D\[1791] = \Counter_Speed:CounterUDB:cmp_out_i\[1099]
Removing Lhs of wire \Counter_Speed:CounterUDB:cmp_out_reg_i\\D\[1792] = \Counter_Speed:CounterUDB:cmp_out_i\[1099]
Removing Lhs of wire \Counter_Speed:CounterUDB:count_stored_i\\D\[1793] = Net_1511[687]
Removing Lhs of wire \PWM_Speed:PWMUDB:min_kill_reg\\D\[1794] = one[204]
Removing Lhs of wire \PWM_Speed:PWMUDB:prevCapture\\D\[1795] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:trig_last\\D\[1796] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:ltch_kill_reg\\D\[1799] = one[204]
Removing Lhs of wire \PWM_Speed:PWMUDB:prevCompare1\\D\[1802] = \PWM_Speed:PWMUDB:cmp1\[1349]
Removing Lhs of wire \PWM_Speed:PWMUDB:cmp1_status_reg\\D\[1803] = \PWM_Speed:PWMUDB:cmp1_status\[1350]
Removing Lhs of wire \PWM_Speed:PWMUDB:cmp2_status_reg\\D\[1804] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:pwm_i_reg\\D\[1806] = \PWM_Speed:PWMUDB:pwm_i\[1449]
Removing Lhs of wire \PWM_Speed:PWMUDB:pwm1_i_reg\\D\[1807] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:pwm2_i_reg\\D\[1808] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:tc_i_reg\\D\[1809] = \PWM_Speed:PWMUDB:status_2\[1344]

------------------------------------------------------
Aliased 0 equations, 391 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Substituting virtuals - pass 1:

Note:  Expanding virtual equation for 'one' (cost = 0):
one <=  ('1') ;

Note:  Expanding virtual equation for 'zero' (cost = 0):
zero <=  ('0') ;

Note:  Expanding virtual equation for '\AD_konverter:MODULE_1:g1:a0:gx:u0:xnor_array_5\' (cost = 6):
\AD_konverter:MODULE_1:g1:a0:gx:u0:xnor_array_5\ <= ((not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\)
	OR (\AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\));

Note:  Expanding virtual equation for '\AD_konverter:MODULE_1:g1:a0:gx:u0:xnor_array_4\' (cost = 6):
\AD_konverter:MODULE_1:g1:a0:gx:u0:xnor_array_4\ <= ((not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\)
	OR (\AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\));

Note:  Expanding virtual equation for '\AD_konverter:MODULE_1:g1:a0:gx:u0:xnor_array_3\' (cost = 2):
\AD_konverter:MODULE_1:g1:a0:gx:u0:xnor_array_3\ <= ((not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\)
	OR (\AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\));

Note:  Expanding virtual equation for '\AD_konverter:MODULE_1:g1:a0:gx:u0:xnor_array_2\' (cost = 6):
\AD_konverter:MODULE_1:g1:a0:gx:u0:xnor_array_2\ <= ((not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\)
	OR (\AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\));

Note:  Expanding virtual equation for '\AD_konverter:MODULE_1:g1:a0:gx:u0:xnor_array_1\' (cost = 6):
\AD_konverter:MODULE_1:g1:a0:gx:u0:xnor_array_1\ <= ((not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\)
	OR (\AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\));

Note:  Expanding virtual equation for '\AD_konverter:MODULE_1:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\AD_konverter:MODULE_1:g1:a0:gx:u0:xnor_array_0\ <= ((not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\)
	OR (\AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\));

Note:  Expanding virtual equation for '\AD_konverter:MODULE_1:g1:a0:gx:u0:eq_1\' (cost = 8):
\AD_konverter:MODULE_1:g1:a0:gx:u0:eq_1\ <= ((not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (\AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\));

Note:  Expanding virtual equation for '\AD_konverter:MODULE_1:g1:a0:gx:u0:eq_2\' (cost = 16):
\AD_konverter:MODULE_1:g1:a0:gx:u0:eq_2\ <= ((not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (\AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\));

Note:  Expanding virtual equation for '\AD_konverter:MODULE_1:g1:a0:gx:u0:eq_3\' (cost = 32):
\AD_konverter:MODULE_1:g1:a0:gx:u0:eq_3\ <= ((not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (\AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\));

Note:  Expanding virtual equation for '\AD_konverter:MODULE_1:g1:a0:gx:u0:eq_4\' (cost = 64):
\AD_konverter:MODULE_1:g1:a0:gx:u0:eq_4\ <= ((not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (\AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\));

Note:  Expanding virtual equation for '\AD_konverter:MODULE_1:g1:a0:gx:u0:eq_5\' (cost = 64):
\AD_konverter:MODULE_1:g1:a0:gx:u0:eq_5\ <= ((not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (\AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\));

Note:  Expanding virtual equation for '\AD_konverter:MODULE_1:g1:a0:gx:u0:lt_3\' (cost = 2):
\AD_konverter:MODULE_1:g1:a0:gx:u0:lt_3\ <= ((not \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\));

Note:  Expanding virtual equation for '\AD_konverter:MODULE_1:g1:a0:gx:u0:gt_3\' (cost = 2):
\AD_konverter:MODULE_1:g1:a0:gx:u0:gt_3\ <= ((not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\));

Note:  Expanding virtual equation for '\AD_konverter:MODULE_1:g1:a0:gx:u0:lt_4\' (cost = 6):
\AD_konverter:MODULE_1:g1:a0:gx:u0:lt_4\ <= ((not \AD_konverter:ch_addr_4\ and not \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\)
	OR (not \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\)
	OR (not \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\));

Note:  Expanding virtual equation for '\AD_konverter:MODULE_1:g1:a0:gx:u0:gt_4\' (cost = 6):
\AD_konverter:MODULE_1:g1:a0:gx:u0:gt_4\ <= ((not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_4\ and \AD_konverter:ch_addr_3\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\));

Note:  Expanding virtual equation for '\AD_konverter:MODULE_1:g1:a0:gx:u0:lt_0\' (cost = 2):
\AD_konverter:MODULE_1:g1:a0:gx:u0:lt_0\ <= ((not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\));

Note:  Expanding virtual equation for '\AD_konverter:MODULE_1:g1:a0:gx:u0:gt_0\' (cost = 2):
\AD_konverter:MODULE_1:g1:a0:gx:u0:gt_0\ <= ((not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\));

Note:  Expanding virtual equation for '\AD_konverter:MODULE_1:g1:a0:gx:u0:lt_1\' (cost = 6):
\AD_konverter:MODULE_1:g1:a0:gx:u0:lt_1\ <= ((not \AD_konverter:ch_addr_1\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\)
	OR (not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\)
	OR (not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\));

Note:  Expanding virtual equation for '\AD_konverter:MODULE_1:g1:a0:gx:u0:gt_1\' (cost = 6):
\AD_konverter:MODULE_1:g1:a0:gx:u0:gt_1\ <= ((not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_1\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\));

Note:  Expanding virtual equation for '\UART:BUART:rx_addressmatch\' (cost = 0):
\UART:BUART:rx_addressmatch\ <= (\UART:BUART:rx_addressmatch2\
	OR \UART:BUART:rx_addressmatch1\);

Note:  Expanding virtual equation for '\UART:BUART:rx_bitclk_pre\' (cost = 1):
\UART:BUART:rx_bitclk_pre\ <= ((not \UART:BUART:rx_count_2\ and not \UART:BUART:rx_count_1\ and not \UART:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\UART:BUART:rx_bitclk_pre16x\' (cost = 0):
\UART:BUART:rx_bitclk_pre16x\ <= ((not \UART:BUART:rx_count_2\ and \UART:BUART:rx_count_1\ and \UART:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\UART:BUART:rx_poll_bit1\' (cost = 1):
\UART:BUART:rx_poll_bit1\ <= ((not \UART:BUART:rx_count_2\ and not \UART:BUART:rx_count_1\ and \UART:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\UART:BUART:rx_poll_bit2\' (cost = 1):
\UART:BUART:rx_poll_bit2\ <= ((not \UART:BUART:rx_count_2\ and not \UART:BUART:rx_count_1\ and not \UART:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\UART:BUART:pollingrange\' (cost = 4):
\UART:BUART:pollingrange\ <= ((not \UART:BUART:rx_count_2\ and not \UART:BUART:rx_count_1\));

Note:  Expanding virtual equation for '\UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\UART:BUART:pollcount_0\);

Note:  Expanding virtual equation for '\UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_0\' (cost = 0):
\UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_0\ <= (not \UART:BUART:pollcount_0\);

Note:  Expanding virtual equation for '\UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_1\' (cost = 0):
\UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:gta_1\' (cost = 0):
\UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:gta_1\ <= (\UART:BUART:pollcount_1\);

Note:  Expanding virtual equation for '\UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_1\' (cost = 0):
\UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_1\ <= (not \UART:BUART:pollcount_1\);

Note:  Expanding virtual equation for '\UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_1\' (cost = 0):
\UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_5:g2:a0:lta_6\' (cost = 0):
\UART:BUART:sRX:MODULE_5:g2:a0:lta_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_5:g2:a0:gta_6\' (cost = 0):
\UART:BUART:sRX:MODULE_5:g2:a0:gta_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_5:g2:a0:lta_5\' (cost = 0):
\UART:BUART:sRX:MODULE_5:g2:a0:lta_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_5:g2:a0:gta_5\' (cost = 0):
\UART:BUART:sRX:MODULE_5:g2:a0:gta_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_5:g2:a0:lta_4\' (cost = 0):
\UART:BUART:sRX:MODULE_5:g2:a0:lta_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_5:g2:a0:gta_4\' (cost = 0):
\UART:BUART:sRX:MODULE_5:g2:a0:gta_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_5:g2:a0:lta_3\' (cost = 0):
\UART:BUART:sRX:MODULE_5:g2:a0:lta_3\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_5:g2:a0:gta_3\' (cost = 0):
\UART:BUART:sRX:MODULE_5:g2:a0:gta_3\ <= (\UART:BUART:rx_count_6\);

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_5:g2:a0:lta_2\' (cost = 1):
\UART:BUART:sRX:MODULE_5:g2:a0:lta_2\ <= ((not \UART:BUART:rx_count_6\ and not \UART:BUART:rx_count_5\));

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_5:g2:a0:gta_2\' (cost = 0):
\UART:BUART:sRX:MODULE_5:g2:a0:gta_2\ <= (\UART:BUART:rx_count_6\);

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_5:g2:a0:lta_1\' (cost = 2):
\UART:BUART:sRX:MODULE_5:g2:a0:lta_1\ <= ((not \UART:BUART:rx_count_6\ and not \UART:BUART:rx_count_4\)
	OR (not \UART:BUART:rx_count_6\ and not \UART:BUART:rx_count_5\));

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_5:g2:a0:gta_1\' (cost = 0):
\UART:BUART:sRX:MODULE_5:g2:a0:gta_1\ <= (\UART:BUART:rx_count_6\);

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_5:g2:a0:lta_0\' (cost = 8):
\UART:BUART:sRX:MODULE_5:g2:a0:lta_0\ <= ((not \UART:BUART:rx_count_6\ and not \UART:BUART:rx_count_4\)
	OR (not \UART:BUART:rx_count_6\ and not \UART:BUART:rx_count_5\));

Note:  Expanding virtual equation for '\PWM_Regulering:PWMUDB:cmp1\' (cost = 0):
\PWM_Regulering:PWMUDB:cmp1\ <= (\PWM_Regulering:PWMUDB:cmp1_less\);

Note:  Expanding virtual equation for '\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\PWM_Regulering:PWMUDB:dith_count_0\);

Note:  Expanding virtual equation for '\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:s_0\' (cost = 0):
\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:s_0\ <= (not \PWM_Regulering:PWMUDB:dith_count_0\);

Note:  Expanding virtual equation for '\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_17\' (cost = 0):
\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_17\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_9\' (cost = 0):
\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_9\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_2\' (cost = 0):
\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_2\ <= ((\PWM_Regulering:PWMUDB:dith_count_1\ and \PWM_Regulering:PWMUDB:dith_count_0\));

Note:  Expanding virtual equation for '\Counter_Speed:CounterUDB:capt_rising\' (cost = 2):
\Counter_Speed:CounterUDB:capt_rising\ <= ((not \Counter_Speed:CounterUDB:prevCapture\ and Net_1630));

Note:  Expanding virtual equation for '\Counter_Speed:CounterUDB:capt_falling\' (cost = 1):
\Counter_Speed:CounterUDB:capt_falling\ <= ((not Net_1630 and \Counter_Speed:CounterUDB:prevCapture\));

Note:  Expanding virtual equation for '\Counter_Speed:CounterUDB:capt_either_edge\' (cost = 0):
\Counter_Speed:CounterUDB:capt_either_edge\ <= ((not Net_1630 and \Counter_Speed:CounterUDB:prevCapture\)
	OR (not \Counter_Speed:CounterUDB:prevCapture\ and Net_1630));

Note:  Expanding virtual equation for '\Counter_Speed:CounterUDB:hwCapture\' (cost = 1):
\Counter_Speed:CounterUDB:hwCapture\ <= ((not \Counter_Speed:CounterUDB:prevCapture\ and Net_1630));

Note:  Expanding virtual equation for '\Counter_Speed:CounterUDB:cmp_out_i\' (cost = 5):
\Counter_Speed:CounterUDB:cmp_out_i\ <= ((not \Counter_Speed:CounterUDB:ctrl_cmod_2\ and not \Counter_Speed:CounterUDB:ctrl_cmod_0\ and \Counter_Speed:CounterUDB:cmp_equal\)
	OR (not \Counter_Speed:CounterUDB:cmp_less\ and not \Counter_Speed:CounterUDB:cmp_equal\ and \Counter_Speed:CounterUDB:ctrl_cmod_1\ and \Counter_Speed:CounterUDB:ctrl_cmod_0\)
	OR (not \Counter_Speed:CounterUDB:ctrl_cmod_2\ and not \Counter_Speed:CounterUDB:ctrl_cmod_1\ and \Counter_Speed:CounterUDB:ctrl_cmod_0\ and \Counter_Speed:CounterUDB:cmp_less\)
	OR (not \Counter_Speed:CounterUDB:ctrl_cmod_2\ and not \Counter_Speed:CounterUDB:ctrl_cmod_0\ and \Counter_Speed:CounterUDB:ctrl_cmod_1\ and \Counter_Speed:CounterUDB:cmp_less\)
	OR (not \Counter_Speed:CounterUDB:cmp_less\ and \Counter_Speed:CounterUDB:ctrl_cmod_2\));

Note:  Expanding virtual equation for '\Counter_Speed:CounterUDB:overflow\' (cost = 0):
\Counter_Speed:CounterUDB:overflow\ <= (\Counter_Speed:CounterUDB:per_equal\);

Note:  Expanding virtual equation for '\Counter_Speed:CounterUDB:underflow\' (cost = 0):
\Counter_Speed:CounterUDB:underflow\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_Speed:PWMUDB:compare1\' (cost = 2):
\PWM_Speed:PWMUDB:compare1\ <= (\PWM_Speed:PWMUDB:cmp1_less\
	OR \PWM_Speed:PWMUDB:cmp1_eq\);

Note:  Expanding virtual equation for '\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\PWM_Speed:PWMUDB:dith_count_0\);

Note:  Expanding virtual equation for '\PWM_Speed:PWMUDB:MODULE_8:g2:a0:s_0\' (cost = 0):
\PWM_Speed:PWMUDB:MODULE_8:g2:a0:s_0\ <= (not \PWM_Speed:PWMUDB:dith_count_0\);

Note:  Expanding virtual equation for '\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_17\' (cost = 0):
\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_17\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_9\' (cost = 0):
\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_9\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_2\' (cost = 0):
\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_2\ <= ((\PWM_Speed:PWMUDB:dith_count_1\ and \PWM_Speed:PWMUDB:dith_count_0\));


Substituting virtuals - pass 2:

Note:  Expanding virtual equation for '\AD_konverter:MODULE_1:g1:a0:xeq\' (cost = 64):
\AD_konverter:MODULE_1:g1:a0:xeq\ <= ((not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (\AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\));

Note:  Expanding virtual equation for '\UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_0\' (cost = 4):
\UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_0\ <= ((not \UART:BUART:pollcount_1\ and not \UART:BUART:pollcount_0\));

Note:  Expanding virtual equation for '\UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\' (cost = 0):
\UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\ <= (not \UART:BUART:pollcount_1\);

Note:  Expanding virtual equation for '\UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_1\' (cost = 2):
\UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_1\ <= ((not \UART:BUART:pollcount_0\ and \UART:BUART:pollcount_1\)
	OR (not \UART:BUART:pollcount_1\ and \UART:BUART:pollcount_0\));

Note:  Expanding virtual equation for '\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:s_1\' (cost = 2):
\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:s_1\ <= ((not \PWM_Regulering:PWMUDB:dith_count_0\ and \PWM_Regulering:PWMUDB:dith_count_1\)
	OR (not \PWM_Regulering:PWMUDB:dith_count_1\ and \PWM_Regulering:PWMUDB:dith_count_0\));

Note:  Expanding virtual equation for '\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_18\' (cost = 0):
\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_18\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_10\' (cost = 0):
\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_10\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_3\' (cost = 0):
\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_3\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_Speed:PWMUDB:cmp1\' (cost = 4):
\PWM_Speed:PWMUDB:cmp1\ <= (\PWM_Speed:PWMUDB:cmp1_less\
	OR \PWM_Speed:PWMUDB:cmp1_eq\);

Note:  Expanding virtual equation for '\PWM_Speed:PWMUDB:MODULE_8:g2:a0:s_1\' (cost = 2):
\PWM_Speed:PWMUDB:MODULE_8:g2:a0:s_1\ <= ((not \PWM_Speed:PWMUDB:dith_count_0\ and \PWM_Speed:PWMUDB:dith_count_1\)
	OR (not \PWM_Speed:PWMUDB:dith_count_1\ and \PWM_Speed:PWMUDB:dith_count_0\));

Note:  Expanding virtual equation for '\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_18\' (cost = 0):
\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_18\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_10\' (cost = 0):
\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_10\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_3\' (cost = 0):
\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_3\ <=  ('0') ;


Substituting virtuals - pass 3:

Note:  Virtual signal \AD_konverter:AMuxHw_2_Decoder_is_active\ with ( cost: 128 or cost_inv: -1)  > 90 or with size: 64 > 102 has been made a (soft) node.
\AD_konverter:AMuxHw_2_Decoder_is_active\ <= ((not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and not \AD_konverter:ch_addr_0\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and not \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and not \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and not \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and not \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (not \AD_konverter:AMuxHw_2_Decoder_old_id_5\ and not \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\)
	OR (\AD_konverter:AMuxHw_2_Decoder_old_id_5\ and \AD_konverter:ch_addr_5\ and \AD_konverter:AMuxHw_2_Decoder_old_id_4\ and \AD_konverter:ch_addr_4\ and \AD_konverter:AMuxHw_2_Decoder_old_id_3\ and \AD_konverter:ch_addr_3\ and \AD_konverter:AMuxHw_2_Decoder_old_id_2\ and \AD_konverter:ch_addr_2\ and \AD_konverter:AMuxHw_2_Decoder_old_id_1\ and \AD_konverter:ch_addr_1\ and \AD_konverter:AMuxHw_2_Decoder_old_id_0\ and \AD_konverter:ch_addr_0\));

Note:  Expanding virtual equation for '\UART:BUART:rx_postpoll\' (cost = 72):
\UART:BUART:rx_postpoll\ <= (\UART:BUART:pollcount_1\
	OR (Net_1495 and \UART:BUART:pollcount_0\));

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:xnor_array_0\ <= ((not Net_1495 and not \UART:BUART:pollcount_1\ and not \UART:BUART:rx_parity_bit\)
	OR (not \UART:BUART:pollcount_1\ and not \UART:BUART:pollcount_0\ and not \UART:BUART:rx_parity_bit\)
	OR (\UART:BUART:pollcount_1\ and \UART:BUART:rx_parity_bit\)
	OR (Net_1495 and \UART:BUART:pollcount_0\ and \UART:BUART:rx_parity_bit\));

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:aeqb_1\' (cost = 4):
\UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:aeqb_1\ <= ((not Net_1495 and not \UART:BUART:pollcount_1\ and not \UART:BUART:rx_parity_bit\)
	OR (not \UART:BUART:pollcount_1\ and not \UART:BUART:pollcount_0\ and not \UART:BUART:rx_parity_bit\)
	OR (\UART:BUART:pollcount_1\ and \UART:BUART:rx_parity_bit\)
	OR (Net_1495 and \UART:BUART:pollcount_0\ and \UART:BUART:rx_parity_bit\));

Note:  Expanding virtual equation for '\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_19\' (cost = 0):
\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_19\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_11\' (cost = 0):
\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_11\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_4\' (cost = 0):
\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_19\' (cost = 0):
\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_19\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_11\' (cost = 0):
\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_11\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_4\' (cost = 0):
\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_4\ <=  ('0') ;


Substituting virtuals - pass 4:

Note:  Expanding virtual equation for '\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_20\' (cost = 0):
\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_20\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_12\' (cost = 0):
\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_12\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_5\' (cost = 0):
\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_20\' (cost = 0):
\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_20\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_12\' (cost = 0):
\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_12\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_5\' (cost = 0):
\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_5\ <=  ('0') ;


Substituting virtuals - pass 5:

Note:  Expanding virtual equation for '\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_21\' (cost = 0):
\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_21\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_13\' (cost = 0):
\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_13\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_6\' (cost = 0):
\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_21\' (cost = 0):
\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_21\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_13\' (cost = 0):
\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_13\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_6\' (cost = 0):
\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_6\ <=  ('0') ;


Substituting virtuals - pass 6:

Note:  Expanding virtual equation for '\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_22\' (cost = 0):
\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_22\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_14\' (cost = 0):
\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_14\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_7\' (cost = 0):
\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_7\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_22\' (cost = 0):
\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_22\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_14\' (cost = 0):
\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_14\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_7\' (cost = 0):
\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_7\ <=  ('0') ;


Substituting virtuals - pass 7:

Note:  Expanding virtual equation for '\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_23\' (cost = 0):
\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_23\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_15\' (cost = 0):
\PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_15\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_23\' (cost = 0):
\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_23\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_15\' (cost = 0):
\PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_15\ <=  ('0') ;


Substituting virtuals - pass 8:


----------------------------------------------------------
Circuit simplification results:

	Expanded 109 signals.
	Turned 1 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing \UART:BUART:rx_status_0\ to zero
Aliasing \UART:BUART:rx_status_6\ to zero
Aliasing \PWM_Regulering:PWMUDB:final_capture\ to zero
Aliasing \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:b_24\ to zero
Aliasing \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:b_16\ to zero
Aliasing \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:b_8\ to zero
Aliasing \Counter_Speed:CounterUDB:reload\ to \Counter_Speed:CounterUDB:hwCapture\
Aliasing \Counter_Speed:CounterUDB:status_3\ to zero
Aliasing \Counter_Speed:CounterUDB:underflow\ to zero
Aliasing \PWM_Speed:PWMUDB:final_capture\ to zero
Aliasing \PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:b_24\ to zero
Aliasing \PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:b_16\ to zero
Aliasing \PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:b_8\ to zero
Aliasing \UART:BUART:rx_markspace_status\\D\ to zero
Aliasing \UART:BUART:rx_parity_error_status\\D\ to zero
Aliasing \UART:BUART:rx_addr_match_status\\D\ to zero
Aliasing \PWM_Regulering:PWMUDB:final_kill_reg\\D\ to zero
Aliasing \PWM_Speed:PWMUDB:final_kill_reg\\D\ to zero
Removing Rhs of wire \UART:BUART:rx_bitclk_enable\[481] = \UART:BUART:rx_bitclk\[529]
Removing Lhs of wire \UART:BUART:rx_status_0\[579] = zero[164]
Removing Lhs of wire \UART:BUART:rx_status_6\[588] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:final_capture\[781] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:b_24\[994] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:b_16\[1004] = zero[164]
Removing Lhs of wire \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:b_8\[1014] = zero[164]
Removing Lhs of wire \Counter_Speed:CounterUDB:reload\[1073] = \Counter_Speed:CounterUDB:hwCapture\[1072]
Removing Lhs of wire \Counter_Speed:CounterUDB:status_3\[1083] = zero[164]
Removing Lhs of wire \Counter_Speed:CounterUDB:underflow\[1094] = zero[164]
Removing Lhs of wire \Counter_Speed:CounterUDB:tc_i\[1097] = \Counter_Speed:CounterUDB:per_equal\[1093]
Removing Lhs of wire \PWM_Speed:PWMUDB:final_capture\[1367] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:b_24\[1628] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:b_16\[1638] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:b_8\[1648] = zero[164]
Removing Lhs of wire \UART:BUART:tx_ctrl_mark_last\\D\[1749] = \UART:BUART:tx_ctrl_mark_last\[472]
Removing Lhs of wire \UART:BUART:rx_markspace_status\\D\[1761] = zero[164]
Removing Lhs of wire \UART:BUART:rx_parity_error_status\\D\[1762] = zero[164]
Removing Lhs of wire \UART:BUART:rx_addr_match_status\\D\[1764] = zero[164]
Removing Lhs of wire \UART:BUART:rx_markspace_pre\\D\[1765] = \UART:BUART:rx_markspace_pre\[592]
Removing Lhs of wire \UART:BUART:rx_parity_bit\\D\[1770] = \UART:BUART:rx_parity_bit\[598]
Removing Lhs of wire \PWM_Regulering:PWMUDB:runmode_enable\\D\[1774] = \PWM_Regulering:PWMUDB:control_7\[703]
Removing Lhs of wire \PWM_Regulering:PWMUDB:final_kill_reg\\D\[1782] = zero[164]
Removing Lhs of wire \PWM_Speed:PWMUDB:runmode_enable\\D\[1797] = \PWM_Speed:PWMUDB:control_7\[1290]
Removing Lhs of wire \PWM_Speed:PWMUDB:final_kill_reg\\D\[1805] = zero[164]

------------------------------------------------------
Aliased 0 equations, 25 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Eliminating unused logic - pass 1:

Note:  Deleted unused equation:
\UART:BUART:sRX:MODULE_6:g1:a0:xneq\ <= ((not \UART:BUART:rx_parity_bit\ and Net_1495 and \UART:BUART:pollcount_0\)
	OR (not \UART:BUART:pollcount_1\ and not \UART:BUART:pollcount_0\ and \UART:BUART:rx_parity_bit\)
	OR (not Net_1495 and not \UART:BUART:pollcount_1\ and \UART:BUART:rx_parity_bit\)
	OR (not \UART:BUART:rx_parity_bit\ and \UART:BUART:pollcount_1\));


Eliminating unused logic - pass 2:


Substituting virtuals - pass 1:


----------------------------------------------------------
Circuit simplification results:

	Expanded 0 signals.
	Turned 0 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

topld:  No errors.

CYPRESS_DIR    : C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp
Warp Program   : C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\bin/warp.exe
Warp Arguments : -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\Ibrahim\Documents\Desktop\sample_v9\sample.cydsn\sample.cyprj -dcpsoc3 sample.v -verilog
</CYPRESSTAG>
Warp synthesis phase: Elapsed time ==> 3s.668ms
<CYPRESSTAG name="Fitter results...">
<CYPRESSTAG name="Fitter startup details...">
cyp3fit: V3.3.0.410, Family: PSoC3, Started at: Monday, 11 January 2016 10:09:25
Options: -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\Ibrahim\Documents\Desktop\sample_v9\sample.cydsn\sample.cyprj -d CY8C5868AXI-LP035 sample.v -verilog
</CYPRESSTAG>
<CYPRESSTAG name="Design parsing">
Design parsing phase: Elapsed time ==> 0s.039ms
</CYPRESSTAG>
<CYPRESSTAG name="Tech mapping">
<CYPRESSTAG name="Initial Mapping" icon="FILE_RPT_TECHM">
    Removed wire end \AD_konverter:MODULE_1:g1:a0:gx:u0:lti_1\ kept \AD_konverter:MODULE_1:g1:a0:gx:u0:lt_5\
    Removed wire end \AD_konverter:MODULE_1:g1:a0:gx:u0:gti_1\ kept \AD_konverter:MODULE_1:g1:a0:gx:u0:gt_5\
    Removed wire end \AD_konverter:MODULE_1:g1:a0:gx:u0:lti_0\ kept \AD_konverter:MODULE_1:g1:a0:gx:u0:lt_2\
    Removed wire end \AD_konverter:MODULE_1:g1:a0:gx:u0:gti_0\ kept \AD_konverter:MODULE_1:g1:a0:gx:u0:gt_2\
    Removed wire end \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_24\ kept zero
    Removed wire end \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_16\ kept zero
    Removed wire end \PWM_Regulering:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_8\ kept zero
    Removed wire end \PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_24\ kept zero
    Removed wire end \PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_16\ kept zero
    Removed wire end \PWM_Speed:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_8\ kept zero
    Converted constant MacroCell: \AD_konverter:bSAR_SEQ:state_2\ from registered to combinatorial
    Converted constant MacroCell: \UART:BUART:reset_reg\ from registered to combinatorial
    Converted constant MacroCell: \UART:BUART:rx_markspace_status\ from registered to combinatorial
    Converted constant MacroCell: \UART:BUART:rx_status_2\ from registered to combinatorial
    Converted constant MacroCell: \UART:BUART:rx_addr_match_status\ from registered to combinatorial
    Converted constant MacroCell: \UART:BUART:rx_break_status\ from registered to combinatorial
    Converted constant MacroCell: \PWM_Regulering:PWMUDB:prevCapture\ from registered to combinatorial
    Converted constant MacroCell: \PWM_Regulering:PWMUDB:trig_last\ from registered to combinatorial
    Converted constant MacroCell: \PWM_Regulering:PWMUDB:status_1\ from registered to combinatorial
    Converted constant MacroCell: \PWM_Regulering:PWMUDB:status_5\ from registered to combinatorial
    Converted constant MacroCell: \PWM_Regulering:PWMUDB:pwm1_i_reg\ from registered to combinatorial
    Converted constant MacroCell: \PWM_Regulering:PWMUDB:pwm2_i_reg\ from registered to combinatorial
    Converted constant MacroCell: \Counter_Speed:CounterUDB:underflow_reg_i\ from registered to combinatorial
    Converted constant MacroCell: \PWM_Speed:PWMUDB:prevCapture\ from registered to combinatorial
    Converted constant MacroCell: \PWM_Speed:PWMUDB:trig_last\ from registered to combinatorial
    Converted constant MacroCell: \PWM_Speed:PWMUDB:status_1\ from registered to combinatorial
    Converted constant MacroCell: \PWM_Speed:PWMUDB:status_5\ from registered to combinatorial
    Converted constant MacroCell: \PWM_Speed:PWMUDB:pwm1_i_reg\ from registered to combinatorial
    Converted constant MacroCell: \PWM_Speed:PWMUDB:pwm2_i_reg\ from registered to combinatorial
Assigning clock AD_konverter_BusClock to clock BUS_CLK because it is a pass-through
<CYPRESSTAG name="Global Clock Selection" icon="FILE_RPT_TECHM">
    Digital Clock 0: Automatic-assigning  clock 'Counter_Clock'. Fanout=2, Signal=Net_4
    Digital Clock 1: Automatic-assigning  clock 'PWM_Clock'. Fanout=1, Signal=Net_908
    Digital Clock 2: Automatic-assigning  clock 'AD_konverter_IntClock'. Fanout=73, Signal=\AD_konverter:clock\
    Digital Clock 3: Automatic-assigning  clock 'UART_IntClock'. Fanout=1, Signal=\UART:Net_9\
    Digital Clock 4: Automatic-assigning  clock 'Speed_Clock'. Fanout=1, Signal=Net_284
    Digital Clock 5: Automatic-assigning  clock 'Sample_Clock'. Fanout=2, Signal=Net_1417
    Digital Clock 6: Automatic-assigning  clock 'Regulation_Clock'. Fanout=1, Signal=Net_648
    Digital Clock 7: Automatic-assigning  clock 'Log_Clock'. Fanout=1, Signal=Net_671
</CYPRESSTAG>

Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="UDB Clock/Enable Remapping Results">
    UDB Clk/Enable \AD_konverter:bSAR_SEQ:ClkEn\: with output requested to be synchronous
        ClockIn: AD_konverter_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: \AD_konverter:bSAR_SEQ:CtrlReg\:controlcell.control_0 was determined to be synchronous to ClockIn
        ClockOut: AD_konverter_IntClock, EnableOut: \AD_konverter:bSAR_SEQ:CtrlReg\:controlcell.control_0
    UDB Clk/Enable \AD_konverter:bSAR_SEQ:ClkCtrl\: with output requested to be synchronous
        ClockIn: AD_konverter_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: AD_konverter_IntClock, EnableOut: Constant 1
    UDB Clk/Enable \UART:BUART:ClkSync\: with output requested to be synchronous
        ClockIn: UART_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: UART_IntClock, EnableOut: Constant 1
    UDB Clk/Enable \PWM_Regulering:PWMUDB:clock_enable_block\: with output requested to be synchronous
        ClockIn: PWM_Clock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: PWM_Clock, EnableOut: Constant 1
    UDB Clk/Enable \Counter_Speed:CounterUDB:clock_enable_block\: with output requested to be synchronous
        ClockIn: Counter_Clock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: Counter_Clock, EnableOut: Constant 1
    UDB Clk/Enable \Counter_Speed:CounterUDB:sCTRLReg:cy_psoc3_udb_Ctl_Clk_Sync\: with output requested to be synchronous
        ClockIn: Counter_Clock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: Counter_Clock, EnableOut: Constant 1
    UDB Clk/Enable \PWM_Speed:PWMUDB:clock_enable_block\: with output requested to be synchronous
        ClockIn: Speed_Clock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: Speed_Clock, EnableOut: Constant 1
</CYPRESSTAG>

Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="Duplicate Macrocell detection">
</CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Duplicate Macrocell detection">

Removing duplicate macrocells
    Removing \UART:BUART:rx_parity_bit\, Duplicate of \UART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART:BUART:rx_parity_bit\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART:BUART:rx_parity_bit\ (fanout=0)

    Removing \UART:BUART:rx_address_detected\, Duplicate of \UART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART:BUART:rx_address_detected\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART:BUART:rx_address_detected\ (fanout=0)

    Removing \UART:BUART:rx_parity_error_pre\, Duplicate of \UART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART:BUART:rx_parity_error_pre\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART:BUART:rx_parity_error_pre\ (fanout=0)

    Removing \UART:BUART:rx_markspace_pre\, Duplicate of \UART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART:BUART:rx_markspace_pre\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART:BUART:rx_markspace_pre\ (fanout=0)

    Removing \UART:BUART:rx_state_1\, Duplicate of \UART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART:BUART:rx_state_1\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART:BUART:rx_state_1\ (fanout=8)

    Removing \UART:BUART:tx_parity_bit\, Duplicate of \UART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART:BUART:tx_parity_bit\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART:BUART:tx_parity_bit\ (fanout=0)

    Removing \UART:BUART:tx_mark\, Duplicate of \UART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART:BUART:tx_mark\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART:BUART:tx_mark\ (fanout=0)


Removing unused cells resulting from optimization
Done removing unused cells.
End removing duplicate macrocells: used 1 pass
</CYPRESSTAG>
<CYPRESSTAG name="Design Equations" icon="FILE_RPT_EQUATION">

------------------------------------------------------------
Design Equations
------------------------------------------------------------
    <CYPRESSTAG name="Pin listing">

    ------------------------------------------------------------
    Pin listing
    ------------------------------------------------------------

    Pin : Name = Rx(0)
        Attributes:
            In Group/Port: True
            In Sync Option: SYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_DIGITAL
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: True
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Rx(0)__PA ,
            fb => Net_1495 ,
            pad => Rx(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Pin_Voltage(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Pin_Voltage(0)__PA ,
            analog_term => Net_848 ,
            pad => Pin_Voltage(0)_PAD ,
            input => \AD_konverter:AMuxHw_2_Decoder_one_hot_0\ );
        Properties:
        {
        }

    Pin : Name = Pin_Current(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Pin_Current(0)__PA ,
            analog_term => Net_847 ,
            pad => Pin_Current(0)_PAD ,
            input => \AD_konverter:AMuxHw_2_Decoder_one_hot_1\ );
        Properties:
        {
        }

    Pin : Name = Pin_Load_Current(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Pin_Load_Current(0)__PA ,
            analog_term => Net_846 ,
            pad => Pin_Load_Current(0)_PAD ,
            input => \AD_konverter:AMuxHw_2_Decoder_one_hot_3\ );
        Properties:
        {
        }

    Pin : Name = Pin_Torque(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Pin_Torque(0)__PA ,
            analog_term => Net_479 ,
            pad => Pin_Torque(0)_PAD ,
            input => \AD_konverter:AMuxHw_2_Decoder_one_hot_2\ );
        Properties:
        {
        }

    Pin : Name = Tx(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => Tx(0)__PA ,
            input => Net_1494 ,
            pad => Tx(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Pin_Speed(0)
        Attributes:
            In Group/Port: True
            In Sync Option: SYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_DIGITAL
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: True
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Pin_Speed(0)__PA ,
            fb => Net_1511 ,
            pad => Pin_Speed(0)_PAD );
        Properties:
        {
        }

    Pin : Name = PWM_Out(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => PWM_Out(0)__PA ,
            input => Net_1095 ,
            pad => PWM_Out(0)_PAD );
        Properties:
        {
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Macrocell listing" icon="FILE_RPT_EQUATION">

    ------------------------------------------------------------
    Macrocell listing
    ------------------------------------------------------------

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:ch_addr_5\
            + \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:ch_addr_4\
            + \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:ch_addr_3\
            + \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:ch_addr_2\
            + !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:ch_addr_1\
            + \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:ch_addr_1\
            + !\AD_konverter:AMuxHw_2_Decoder_old_id_0\ * 
              \AD_konverter:ch_addr_0\
            + \AD_konverter:AMuxHw_2_Decoder_old_id_0\ * 
              !\AD_konverter:ch_addr_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_is_active_split\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial)
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:ch_addr_5\
            + !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:ch_addr_4\
            + !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:ch_addr_3\
            + !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:ch_addr_2\
            + \AD_konverter:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    MacroCell: Name=\AD_konverter:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_352 * !\AD_konverter:bSAR_SEQ:load_period\
        );
        Output = \AD_konverter:bSAR_SEQ:cnt_enable\ (fanout=1)

    MacroCell: Name=Net_1494, Mode=(Combinatorial)
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:txn\
        );
        Output = Net_1494 (fanout=1)

    MacroCell: Name=\UART:BUART:counter_load_not\, Mode=(Combinatorial)
        Total # of inputs        : 4
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\
            + !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_state_2\
        );
        Output = \UART:BUART:counter_load_not\ (fanout=1)

    MacroCell: Name=\UART:BUART:tx_status_0\, Mode=(Combinatorial)
        Total # of inputs        : 5
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_fifo_empty\ * 
              \UART:BUART:tx_state_2\
        );
        Output = \UART:BUART:tx_status_0\ (fanout=1)

    MacroCell: Name=\UART:BUART:tx_status_2\, Mode=(Combinatorial)
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:tx_fifo_notfull\
        );
        Output = \UART:BUART:tx_status_2\ (fanout=1)

    MacroCell: Name=\UART:BUART:rx_counter_load\, Mode=(Combinatorial)
        Total # of inputs        : 4
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\
        );
        Output = \UART:BUART:rx_counter_load\ (fanout=1)

    MacroCell: Name=\UART:BUART:rx_postpoll\, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              Net_1495 * \UART:BUART:pollcount_0\
            + \UART:BUART:pollcount_1\
        );
        Output = \UART:BUART:rx_postpoll\ (fanout=1)

    MacroCell: Name=\UART:BUART:rx_status_4\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART:BUART:rx_load_fifo\ * \UART:BUART:rx_fifofull\
        );
        Output = \UART:BUART:rx_status_4\ (fanout=1)

    MacroCell: Name=\UART:BUART:rx_status_5\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART:BUART:rx_fifonotempty\ * \UART:BUART:rx_state_stop1_reg\
        );
        Output = \UART:BUART:rx_status_5\ (fanout=1)

    MacroCell: Name=\PWM_Regulering:PWMUDB:status_2\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_Regulering:PWMUDB:runmode_enable\ * 
              \PWM_Regulering:PWMUDB:tc_i\
        );
        Output = \PWM_Regulering:PWMUDB:status_2\ (fanout=1)

    MacroCell: Name=\Counter_Speed:CounterUDB:hwCapture\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\Counter_Speed:CounterUDB:prevCapture\ * Net_1630
        );
        Output = \Counter_Speed:CounterUDB:hwCapture\ (fanout=9)

    MacroCell: Name=\Counter_Speed:CounterUDB:status_0\, Mode=(Combinatorial)
        Total # of inputs        : 6
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\Counter_Speed:CounterUDB:ctrl_cmod_2\ * 
              !\Counter_Speed:CounterUDB:ctrl_cmod_1\ * 
              \Counter_Speed:CounterUDB:ctrl_cmod_0\ * 
              \Counter_Speed:CounterUDB:cmp_less\ * 
              !\Counter_Speed:CounterUDB:prevCompare\
            + !\Counter_Speed:CounterUDB:ctrl_cmod_2\ * 
              \Counter_Speed:CounterUDB:ctrl_cmod_1\ * 
              !\Counter_Speed:CounterUDB:ctrl_cmod_0\ * 
              \Counter_Speed:CounterUDB:cmp_less\ * 
              !\Counter_Speed:CounterUDB:prevCompare\
            + !\Counter_Speed:CounterUDB:ctrl_cmod_2\ * 
              !\Counter_Speed:CounterUDB:ctrl_cmod_0\ * 
              \Counter_Speed:CounterUDB:cmp_equal\ * 
              !\Counter_Speed:CounterUDB:prevCompare\
            + \Counter_Speed:CounterUDB:ctrl_cmod_2\ * 
              !\Counter_Speed:CounterUDB:cmp_less\ * 
              !\Counter_Speed:CounterUDB:prevCompare\
            + \Counter_Speed:CounterUDB:ctrl_cmod_1\ * 
              \Counter_Speed:CounterUDB:ctrl_cmod_0\ * 
              !\Counter_Speed:CounterUDB:cmp_less\ * 
              !\Counter_Speed:CounterUDB:cmp_equal\ * 
              !\Counter_Speed:CounterUDB:prevCompare\
        );
        Output = \Counter_Speed:CounterUDB:status_0\ (fanout=1)

    MacroCell: Name=\Counter_Speed:CounterUDB:status_2\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Counter_Speed:CounterUDB:per_equal\ * 
              !\Counter_Speed:CounterUDB:overflow_reg_i\
        );
        Output = \Counter_Speed:CounterUDB:status_2\ (fanout=1)

    MacroCell: Name=\Counter_Speed:CounterUDB:count_enable\, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_1511 * \Counter_Speed:CounterUDB:control_7\ * 
              !\Counter_Speed:CounterUDB:count_stored_i\
        );
        Output = \Counter_Speed:CounterUDB:count_enable\ (fanout=4)

    MacroCell: Name=\PWM_Speed:PWMUDB:status_2\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_Speed:PWMUDB:runmode_enable\ * \PWM_Speed:PWMUDB:tc_i\
        );
        Output = \PWM_Speed:PWMUDB:status_2\ (fanout=1)

    MacroCell: Name=__ONE__, Mode=(Combinatorial)
        Total # of inputs        : 0
        Total # of product terms : 0
            Clock Enable: True
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = __ONE__ (fanout=4)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:ch_addr_5\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_old_id_5\ (fanout=66)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:ch_addr_4\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_old_id_4\ (fanout=66)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:ch_addr_3\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_old_id_3\ (fanout=66)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:ch_addr_2\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_old_id_2\ (fanout=66)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:ch_addr_1\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_old_id_1\ (fanout=65)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:ch_addr_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_old_id_0\ (fanout=65)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)

    MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)

    MacroCell: Name=Net_688, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: PosEdge(\AD_konverter:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \AD_konverter:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\AD_konverter:bSAR_SEQ:nrq_reg\
        );
        Output = Net_688 (fanout=4)

    MacroCell: Name=\AD_konverter:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \AD_konverter:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_688
            + \AD_konverter:Net_3935\
        );
        Output = \AD_konverter:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)

    MacroCell: Name=\AD_konverter:bSAR_SEQ:nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: PosEdge(\AD_konverter:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \AD_konverter:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \AD_konverter:bSAR_SEQ:nrq_reg\ (fanout=1)

    MacroCell: Name=\AD_konverter:bSAR_SEQ:soc_in\, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: PosEdge(\AD_konverter:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              !\AD_konverter:bSAR_SEQ:soc_reg\ * Net_1417_local
        );
        Output = \AD_konverter:bSAR_SEQ:soc_in\ (fanout=1)

    MacroCell: Name=\AD_konverter:soc_out\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: PosEdge(\AD_konverter:bSAR_SEQ:enable\)
        Main Equation            : 2 pterms
        (
              !\AD_konverter:soc_out\ * \AD_konverter:Net_3830\ * 
              !\AD_konverter:bSAR_SEQ:load_period\ * 
              \AD_konverter:bSAR_SEQ:state_1\ * 
              !\AD_konverter:bSAR_SEQ:cnt_tc\
            + !\AD_konverter:soc_out\ * !\AD_konverter:bSAR_SEQ:load_period\ * 
              \AD_konverter:bSAR_SEQ:soc_in\ * 
              !\AD_konverter:bSAR_SEQ:state_1\
        );
        Output = \AD_konverter:soc_out\ (fanout=3)

    MacroCell: Name=\AD_konverter:bSAR_SEQ:soc_reg\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: PosEdge(\AD_konverter:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              Net_1417_local
        );
        Output = \AD_konverter:bSAR_SEQ:soc_reg\ (fanout=1)

    MacroCell: Name=\AD_konverter:bSAR_SEQ:state_1\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: PosEdge(\AD_konverter:bSAR_SEQ:enable\)
        Main Equation            : 2 pterms
        (
              !\AD_konverter:soc_out\ * !\AD_konverter:Net_3830\ * 
              !\AD_konverter:bSAR_SEQ:load_period\ * 
              \AD_konverter:bSAR_SEQ:state_1\
            + \AD_konverter:soc_out\ * !\AD_konverter:bSAR_SEQ:load_period\ * 
              !\AD_konverter:bSAR_SEQ:state_1\
        );
        Output = \AD_konverter:bSAR_SEQ:state_1\ (fanout=2)

    MacroCell: Name=\UART:BUART:txn\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              \UART:BUART:txn\ * \UART:BUART:tx_state_1\ * 
              !\UART:BUART:tx_bitclk\
            + \UART:BUART:txn\ * \UART:BUART:tx_state_2\
            + !\UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_shift_out\ * !\UART:BUART:tx_state_2\
            + !\UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_state_2\ * !\UART:BUART:tx_bitclk\
            + \UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_shift_out\ * !\UART:BUART:tx_state_2\ * 
              !\UART:BUART:tx_counter_dp\ * \UART:BUART:tx_bitclk\
        );
        Output = \UART:BUART:txn\ (fanout=2)

    MacroCell: Name=\UART:BUART:tx_state_1\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              \UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_2\ * 
              \UART:BUART:tx_counter_dp\ * \UART:BUART:tx_bitclk\
            + \UART:BUART:tx_state_0\ * !\UART:BUART:tx_state_2\ * 
              \UART:BUART:tx_bitclk\
        );
        Output = \UART:BUART:tx_state_1\ (fanout=8)

    MacroCell: Name=\UART:BUART:tx_state_0\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * !\UART:BUART:tx_fifo_empty\
            + !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_fifo_empty\ * !\UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_fifo_empty\ * 
              \UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_0\ * !\UART:BUART:tx_state_2\ * 
              \UART:BUART:tx_bitclk\
        );
        Output = \UART:BUART:tx_state_0\ (fanout=8)

    MacroCell: Name=\UART:BUART:tx_state_2\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_state_2\ * \UART:BUART:tx_bitclk\
            + \UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_2\ * 
              \UART:BUART:tx_counter_dp\ * \UART:BUART:tx_bitclk\
        );
        Output = \UART:BUART:tx_state_2\ (fanout=7)

    MacroCell: Name=\UART:BUART:tx_bitclk\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_state_2\
            + !\UART:BUART:tx_bitclk_enable_pre\
        );
        Output = \UART:BUART:tx_bitclk\ (fanout=4)

    MacroCell: Name=\UART:BUART:tx_ctrl_mark_last\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART:BUART:tx_ctrl_mark_last\ (fanout=8)

    MacroCell: Name=\UART:BUART:rx_state_0\, Mode=(T-Register)
        Total # of inputs        : 11
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !Net_1495 * !\UART:BUART:tx_ctrl_mark_last\ * 
              !\UART:BUART:rx_state_0\ * \UART:BUART:rx_bitclk_enable\ * 
              !\UART:BUART:rx_state_3\ * \UART:BUART:rx_state_2\ * 
              !\UART:BUART:pollcount_1\
            + !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * !\UART:BUART:rx_state_3\ * 
              \UART:BUART:rx_state_2\ * !\UART:BUART:pollcount_1\ * 
              !\UART:BUART:pollcount_0\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_5\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_4\
        );
        Output = \UART:BUART:rx_state_0\ (fanout=8)

    MacroCell: Name=\UART:BUART:rx_load_fifo\, Mode=(D-Register)
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * \UART:BUART:rx_state_3\ * 
              !\UART:BUART:rx_state_2\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_5\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_4\
        );
        Output = \UART:BUART:rx_load_fifo\ (fanout=2)

    MacroCell: Name=\UART:BUART:rx_state_3\, Mode=(T-Register)
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * \UART:BUART:rx_state_3\ * 
              \UART:BUART:rx_state_2\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_5\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_4\
        );
        Output = \UART:BUART:rx_state_3\ (fanout=7)

    MacroCell: Name=\UART:BUART:rx_state_2\, Mode=(T-Register)
        Total # of inputs        : 10
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !Net_1495 * !\UART:BUART:tx_ctrl_mark_last\ * 
              !\UART:BUART:rx_state_0\ * !\UART:BUART:rx_state_3\ * 
              !\UART:BUART:rx_state_2\ * \UART:BUART:rx_last\
            + !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * \UART:BUART:rx_state_3\
            + !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * \UART:BUART:rx_state_2\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_5\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_4\
        );
        Output = \UART:BUART:rx_state_2\ (fanout=7)

    MacroCell: Name=\UART:BUART:rx_bitclk_enable\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              !\UART:BUART:rx_count_0\
        );
        Output = \UART:BUART:rx_bitclk_enable\ (fanout=6)

    MacroCell: Name=\UART:BUART:rx_state_stop1_reg\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_state_3\ * \UART:BUART:rx_state_2\
        );
        Output = \UART:BUART:rx_state_stop1_reg\ (fanout=1)

    MacroCell: Name=\UART:BUART:pollcount_1\, Mode=(D-Register)
        Total # of inputs        : 5
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !Net_1495 * !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              \UART:BUART:pollcount_1\
            + Net_1495 * !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              !\UART:BUART:pollcount_1\ * \UART:BUART:pollcount_0\
            + !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              \UART:BUART:pollcount_1\ * !\UART:BUART:pollcount_0\
        );
        Output = \UART:BUART:pollcount_1\ (fanout=4)

    MacroCell: Name=\UART:BUART:pollcount_0\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !Net_1495 * !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              \UART:BUART:pollcount_0\
            + Net_1495 * !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              !\UART:BUART:pollcount_0\
        );
        Output = \UART:BUART:pollcount_0\ (fanout=5)

    MacroCell: Name=\UART:BUART:rx_status_3\, Mode=(D-Register)
        Total # of inputs        : 8
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !Net_1495 * !\UART:BUART:tx_ctrl_mark_last\ * 
              !\UART:BUART:rx_state_0\ * \UART:BUART:rx_bitclk_enable\ * 
              \UART:BUART:rx_state_3\ * \UART:BUART:rx_state_2\ * 
              !\UART:BUART:pollcount_1\
            + !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * \UART:BUART:rx_state_3\ * 
              \UART:BUART:rx_state_2\ * !\UART:BUART:pollcount_1\ * 
              !\UART:BUART:pollcount_0\
        );
        Output = \UART:BUART:rx_status_3\ (fanout=1)

    MacroCell: Name=\UART:BUART:rx_last\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_1495
        );
        Output = \UART:BUART:rx_last\ (fanout=1)

    MacroCell: Name=\PWM_Regulering:PWMUDB:runmode_enable\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_908) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_Regulering:PWMUDB:control_7\
        );
        Output = \PWM_Regulering:PWMUDB:runmode_enable\ (fanout=3)

    MacroCell: Name=\PWM_Regulering:PWMUDB:prevCompare1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_908) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_Regulering:PWMUDB:cmp1_less\
        );
        Output = \PWM_Regulering:PWMUDB:prevCompare1\ (fanout=1)

    MacroCell: Name=\PWM_Regulering:PWMUDB:status_0\, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_908) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\PWM_Regulering:PWMUDB:prevCompare1\ * 
              \PWM_Regulering:PWMUDB:cmp1_less\
        );
        Output = \PWM_Regulering:PWMUDB:status_0\ (fanout=1)

    MacroCell: Name=Net_1095, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_908) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_Regulering:PWMUDB:runmode_enable\ * 
              \PWM_Regulering:PWMUDB:cmp1_less\
        );
        Output = Net_1095 (fanout=1)

    MacroCell: Name=\Counter_Speed:CounterUDB:prevCapture\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_4) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_1630
        );
        Output = \Counter_Speed:CounterUDB:prevCapture\ (fanout=1)

    MacroCell: Name=\Counter_Speed:CounterUDB:overflow_reg_i\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_4) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Counter_Speed:CounterUDB:per_equal\
        );
        Output = \Counter_Speed:CounterUDB:overflow_reg_i\ (fanout=1)

    MacroCell: Name=\Counter_Speed:CounterUDB:prevCompare\, Mode=(D-Register)
        Total # of inputs        : 5
        Total # of product terms : 5
        List of special equations: 
            Clock  = (Net_4) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\Counter_Speed:CounterUDB:ctrl_cmod_2\ * 
              !\Counter_Speed:CounterUDB:ctrl_cmod_1\ * 
              \Counter_Speed:CounterUDB:ctrl_cmod_0\ * 
              \Counter_Speed:CounterUDB:cmp_less\
            + !\Counter_Speed:CounterUDB:ctrl_cmod_2\ * 
              \Counter_Speed:CounterUDB:ctrl_cmod_1\ * 
              !\Counter_Speed:CounterUDB:ctrl_cmod_0\ * 
              \Counter_Speed:CounterUDB:cmp_less\
            + !\Counter_Speed:CounterUDB:ctrl_cmod_2\ * 
              !\Counter_Speed:CounterUDB:ctrl_cmod_0\ * 
              \Counter_Speed:CounterUDB:cmp_equal\
            + \Counter_Speed:CounterUDB:ctrl_cmod_2\ * 
              !\Counter_Speed:CounterUDB:cmp_less\
            + \Counter_Speed:CounterUDB:ctrl_cmod_1\ * 
              \Counter_Speed:CounterUDB:ctrl_cmod_0\ * 
              !\Counter_Speed:CounterUDB:cmp_less\ * 
              !\Counter_Speed:CounterUDB:cmp_equal\
        );
        Output = \Counter_Speed:CounterUDB:prevCompare\ (fanout=1)

    MacroCell: Name=\Counter_Speed:CounterUDB:count_stored_i\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_4) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_1511
        );
        Output = \Counter_Speed:CounterUDB:count_stored_i\ (fanout=1)

    MacroCell: Name=\PWM_Speed:PWMUDB:runmode_enable\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_284) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_Speed:PWMUDB:control_7\
        );
        Output = \PWM_Speed:PWMUDB:runmode_enable\ (fanout=4)

    MacroCell: Name=\PWM_Speed:PWMUDB:prevCompare1\, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_284) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\PWM_Speed:PWMUDB:cmp1_eq\ * !\PWM_Speed:PWMUDB:cmp1_less\
        );
        Output = \PWM_Speed:PWMUDB:prevCompare1\ (fanout=1)

    MacroCell: Name=\PWM_Speed:PWMUDB:status_0\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (Net_284) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\PWM_Speed:PWMUDB:prevCompare1\ * \PWM_Speed:PWMUDB:cmp1_eq\
            + !\PWM_Speed:PWMUDB:prevCompare1\ * \PWM_Speed:PWMUDB:cmp1_less\
        );
        Output = \PWM_Speed:PWMUDB:status_0\ (fanout=1)

    MacroCell: Name=Net_1630, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (Net_284) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \PWM_Speed:PWMUDB:runmode_enable\ * \PWM_Speed:PWMUDB:cmp1_eq\
            + \PWM_Speed:PWMUDB:runmode_enable\ * 
              \PWM_Speed:PWMUDB:cmp1_less\
        );
        Output = Net_1630 (fanout=2)
    </CYPRESSTAG>
    <CYPRESSTAG name="Datapath listing">

    ------------------------------------------------------------
    Datapath listing
    ------------------------------------------------------------

    datapathcell: Name =\UART:BUART:sTX:TxShifter:u0\
        PORT MAP (
            clock => \UART:Net_9\ ,
            cs_addr_2 => \UART:BUART:tx_state_1\ ,
            cs_addr_1 => \UART:BUART:tx_state_0\ ,
            cs_addr_0 => \UART:BUART:tx_bitclk_enable_pre\ ,
            so_comb => \UART:BUART:tx_shift_out\ ,
            f0_bus_stat_comb => \UART:BUART:tx_fifo_notfull\ ,
            f0_blk_stat_comb => \UART:BUART:tx_fifo_empty\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\UART:BUART:sTX:sCLOCK:TxBitClkGen\
        PORT MAP (
            clock => \UART:Net_9\ ,
            cs_addr_0 => \UART:BUART:counter_load_not\ ,
            ce0_reg => \UART:BUART:tx_bitclk_enable_pre\ ,
            ce1_reg => \UART:BUART:tx_counter_dp\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100000111001000000100000000000101111100000000000000001000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\UART:BUART:sRX:RxShifter:u0\
        PORT MAP (
            clock => \UART:Net_9\ ,
            cs_addr_2 => \UART:BUART:tx_ctrl_mark_last\ ,
            cs_addr_1 => \UART:BUART:rx_state_0\ ,
            cs_addr_0 => \UART:BUART:rx_bitclk_enable\ ,
            route_si => \UART:BUART:rx_postpoll\ ,
            f0_load => \UART:BUART:rx_load_fifo\ ,
            f0_bus_stat_comb => \UART:BUART:rx_fifonotempty\ ,
            f0_blk_stat_comb => \UART:BUART:rx_fifofull\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\PWM_Regulering:PWMUDB:sP8:pwmdp:u0\
        PORT MAP (
            clock => Net_908 ,
            cs_addr_2 => \PWM_Regulering:PWMUDB:tc_i\ ,
            cs_addr_1 => \PWM_Regulering:PWMUDB:runmode_enable\ ,
            cl0_comb => \PWM_Regulering:PWMUDB:cmp1_less\ ,
            z0_comb => \PWM_Regulering:PWMUDB:tc_i\ ,
            f1_blk_stat_comb => \PWM_Regulering:PWMUDB:status_3\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\Counter_Speed:CounterUDB:sC32:counterdp:u0\
        PORT MAP (
            clock => Net_4 ,
            cs_addr_2 => __ONE__ ,
            cs_addr_1 => \Counter_Speed:CounterUDB:count_enable\ ,
            cs_addr_0 => \Counter_Speed:CounterUDB:hwCapture\ ,
            f0_load => \Counter_Speed:CounterUDB:hwCapture\ ,
            chain_out => \Counter_Speed:CounterUDB:sC32:counterdp:carry0\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000001000000001000000010000000000000010000000000000000100000010101000010100000010000001000000101010000101000011111111000000001111111111111111101000000000000000000001000000000000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
        Next in chain : \Counter_Speed:CounterUDB:sC32:counterdp:u1\

    datapathcell: Name =\Counter_Speed:CounterUDB:sC32:counterdp:u1\
        PORT MAP (
            clock => Net_4 ,
            cs_addr_2 => __ONE__ ,
            cs_addr_1 => \Counter_Speed:CounterUDB:count_enable\ ,
            cs_addr_0 => \Counter_Speed:CounterUDB:hwCapture\ ,
            f0_load => \Counter_Speed:CounterUDB:hwCapture\ ,
            chain_in => \Counter_Speed:CounterUDB:sC32:counterdp:carry0\ ,
            chain_out => \Counter_Speed:CounterUDB:sC32:counterdp:carry1\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000001000000001000000010000000000000010000000000000000100000010101000010100000010000001000000101010000101000011111111000000001111111111111111101011110000000000000001000001110000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
        Previous in chain : \Counter_Speed:CounterUDB:sC32:counterdp:u0\
        Next in chain : \Counter_Speed:CounterUDB:sC32:counterdp:u2\

    datapathcell: Name =\Counter_Speed:CounterUDB:sC32:counterdp:u2\
        PORT MAP (
            clock => Net_4 ,
            cs_addr_2 => __ONE__ ,
            cs_addr_1 => \Counter_Speed:CounterUDB:count_enable\ ,
            cs_addr_0 => \Counter_Speed:CounterUDB:hwCapture\ ,
            f0_load => \Counter_Speed:CounterUDB:hwCapture\ ,
            chain_in => \Counter_Speed:CounterUDB:sC32:counterdp:carry1\ ,
            chain_out => \Counter_Speed:CounterUDB:sC32:counterdp:carry2\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000001000000001000000010000000000000010000000000000000100000010101000010100000010000001000000101010000101000011111111000000001111111111111111101011110000000000000001000001110000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
        Previous in chain : \Counter_Speed:CounterUDB:sC32:counterdp:u1\
        Next in chain : \Counter_Speed:CounterUDB:sC32:counterdp:u3\

    datapathcell: Name =\Counter_Speed:CounterUDB:sC32:counterdp:u3\
        PORT MAP (
            clock => Net_4 ,
            cs_addr_2 => __ONE__ ,
            cs_addr_1 => \Counter_Speed:CounterUDB:count_enable\ ,
            cs_addr_0 => \Counter_Speed:CounterUDB:hwCapture\ ,
            f0_load => \Counter_Speed:CounterUDB:hwCapture\ ,
            ce0_comb => \Counter_Speed:CounterUDB:per_equal\ ,
            z0_comb => \Counter_Speed:CounterUDB:status_1\ ,
            ce1_comb => \Counter_Speed:CounterUDB:cmp_equal\ ,
            cl1_comb => \Counter_Speed:CounterUDB:cmp_less\ ,
            f0_bus_stat_comb => \Counter_Speed:CounterUDB:status_6\ ,
            f0_blk_stat_comb => \Counter_Speed:CounterUDB:status_5\ ,
            chain_in => \Counter_Speed:CounterUDB:sC32:counterdp:carry2\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000001000000001000000010000000000000010000000000000000100000010101000010100000010000001000000101010000101000011111111000000001111111111111111101011110000000000000001000001110000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
        Previous in chain : \Counter_Speed:CounterUDB:sC32:counterdp:u2\

    datapathcell: Name =\PWM_Speed:PWMUDB:sP16:pwmdp:u0\
        PORT MAP (
            clock => Net_284 ,
            cs_addr_2 => \PWM_Speed:PWMUDB:tc_i\ ,
            cs_addr_1 => \PWM_Speed:PWMUDB:runmode_enable\ ,
            chain_out => \PWM_Speed:PWMUDB:sP16:pwmdp:carry\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
        Next in chain : \PWM_Speed:PWMUDB:sP16:pwmdp:u1\

    datapathcell: Name =\PWM_Speed:PWMUDB:sP16:pwmdp:u1\
        PORT MAP (
            clock => Net_284 ,
            cs_addr_2 => \PWM_Speed:PWMUDB:tc_i\ ,
            cs_addr_1 => \PWM_Speed:PWMUDB:runmode_enable\ ,
            ce0_comb => \PWM_Speed:PWMUDB:cmp1_eq\ ,
            cl0_comb => \PWM_Speed:PWMUDB:cmp1_less\ ,
            z0_comb => \PWM_Speed:PWMUDB:tc_i\ ,
            f1_blk_stat_comb => \PWM_Speed:PWMUDB:status_3\ ,
            chain_in => \PWM_Speed:PWMUDB:sP16:pwmdp:carry\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101011110000000000000100000011110000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
        Previous in chain : \PWM_Speed:PWMUDB:sP16:pwmdp:u0\
    </CYPRESSTAG>
    <CYPRESSTAG name="Status register listing">

    ------------------------------------------------------------
    Status register listing
    ------------------------------------------------------------

    statuscell: Name =\AD_konverter:bSAR_SEQ:EOCSts\
        PORT MAP (
            clock => \AD_konverter:clock\ ,
            status_0 => Net_688 ,
            clk_en => \AD_konverter:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_force_order = 1
            cy_md_select = "00000001"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\AD_konverter:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="StatusI register listing">

    ------------------------------------------------------------
    StatusI register listing
    ------------------------------------------------------------

    statusicell: Name =\UART:BUART:sTX:TxSts\
        PORT MAP (
            clock => \UART:Net_9\ ,
            status_3 => \UART:BUART:tx_fifo_notfull\ ,
            status_2 => \UART:BUART:tx_status_2\ ,
            status_1 => \UART:BUART:tx_fifo_empty\ ,
            status_0 => \UART:BUART:tx_status_0\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0000001"
        }
        Clock Polarity: Active High
        Clock Enable: True

    statusicell: Name =\UART:BUART:sRX:RxSts\
        PORT MAP (
            clock => \UART:Net_9\ ,
            status_5 => \UART:BUART:rx_status_5\ ,
            status_4 => \UART:BUART:rx_status_4\ ,
            status_3 => \UART:BUART:rx_status_3\ ,
            interrupt => Net_641 );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "1011111"
        }
        Clock Polarity: Active High
        Clock Enable: True

    statusicell: Name =\PWM_Regulering:PWMUDB:genblk8:stsreg\
        PORT MAP (
            clock => Net_908 ,
            status_3 => \PWM_Regulering:PWMUDB:status_3\ ,
            status_2 => \PWM_Regulering:PWMUDB:status_2\ ,
            status_0 => \PWM_Regulering:PWMUDB:status_0\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0100111"
        }
        Clock Polarity: Active High
        Clock Enable: True

    statusicell: Name =\Counter_Speed:CounterUDB:sSTSReg:stsreg\
        PORT MAP (
            clock => Net_4 ,
            status_6 => \Counter_Speed:CounterUDB:status_6\ ,
            status_5 => \Counter_Speed:CounterUDB:status_5\ ,
            status_4 => \Counter_Speed:CounterUDB:hwCapture\ ,
            status_2 => \Counter_Speed:CounterUDB:status_2\ ,
            status_1 => \Counter_Speed:CounterUDB:status_1\ ,
            status_0 => \Counter_Speed:CounterUDB:status_0\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0011111"
        }
        Clock Polarity: Active High
        Clock Enable: True

    statusicell: Name =\PWM_Speed:PWMUDB:genblk8:stsreg\
        PORT MAP (
            clock => Net_284 ,
            status_3 => \PWM_Speed:PWMUDB:status_3\ ,
            status_2 => \PWM_Speed:PWMUDB:status_2\ ,
            status_0 => \PWM_Speed:PWMUDB:status_0\ ,
            interrupt => Net_554 );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0100111"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Sync listing">

    ------------------------------------------------------------
    Sync listing
    ------------------------------------------------------------

    synccell: Name =\AD_konverter:Sync:genblk1[0]:INST\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            in => \AD_konverter:nrq\ ,
            out => \AD_konverter:Net_3935\ );
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Control register listing">

    ------------------------------------------------------------
    Control register listing
    ------------------------------------------------------------

    controlcell: Name =\AD_konverter:bSAR_SEQ:CtrlReg\
        PORT MAP (
            clock => \AD_konverter:clock\ ,
            control_7 => \AD_konverter:bSAR_SEQ:control_7\ ,
            control_6 => \AD_konverter:bSAR_SEQ:control_6\ ,
            control_5 => \AD_konverter:bSAR_SEQ:control_5\ ,
            control_4 => \AD_konverter:bSAR_SEQ:control_4\ ,
            control_3 => \AD_konverter:bSAR_SEQ:control_3\ ,
            control_2 => \AD_konverter:bSAR_SEQ:control_2\ ,
            control_1 => \AD_konverter:bSAR_SEQ:load_period\ ,
            control_0 => \AD_konverter:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_ctrl_mode_0 = "00000111"
            cy_ctrl_mode_1 = "00000110"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True

    controlcell: Name =\PWM_Regulering:PWMUDB:genblk1:ctrlreg\
        PORT MAP (
            clock => Net_908 ,
            control_7 => \PWM_Regulering:PWMUDB:control_7\ ,
            control_6 => \PWM_Regulering:PWMUDB:control_6\ ,
            control_5 => \PWM_Regulering:PWMUDB:control_5\ ,
            control_4 => \PWM_Regulering:PWMUDB:control_4\ ,
            control_3 => \PWM_Regulering:PWMUDB:control_3\ ,
            control_2 => \PWM_Regulering:PWMUDB:control_2\ ,
            control_1 => \PWM_Regulering:PWMUDB:control_1\ ,
            control_0 => \PWM_Regulering:PWMUDB:control_0\ );
        Properties:
        {
            cy_ctrl_mode_0 = "11111111"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True

    controlcell: Name =\Counter_Speed:CounterUDB:sCTRLReg:ctrlreg\
        PORT MAP (
            clock => Net_4 ,
            control_7 => \Counter_Speed:CounterUDB:control_7\ ,
            control_6 => \Counter_Speed:CounterUDB:control_6\ ,
            control_5 => \Counter_Speed:CounterUDB:control_5\ ,
            control_4 => \Counter_Speed:CounterUDB:control_4\ ,
            control_3 => \Counter_Speed:CounterUDB:control_3\ ,
            control_2 => \Counter_Speed:CounterUDB:ctrl_cmod_2\ ,
            control_1 => \Counter_Speed:CounterUDB:ctrl_cmod_1\ ,
            control_0 => \Counter_Speed:CounterUDB:ctrl_cmod_0\ );
        Properties:
        {
            cy_ctrl_mode_0 = "11111111"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True

    controlcell: Name =\PWM_Speed:PWMUDB:genblk1:ctrlreg\
        PORT MAP (
            clock => Net_284 ,
            control_7 => \PWM_Speed:PWMUDB:control_7\ ,
            control_6 => \PWM_Speed:PWMUDB:control_6\ ,
            control_5 => \PWM_Speed:PWMUDB:control_5\ ,
            control_4 => \PWM_Speed:PWMUDB:control_4\ ,
            control_3 => \PWM_Speed:PWMUDB:control_3\ ,
            control_2 => \PWM_Speed:PWMUDB:control_2\ ,
            control_1 => \PWM_Speed:PWMUDB:control_1\ ,
            control_0 => \PWM_Speed:PWMUDB:control_0\ );
        Properties:
        {
            cy_ctrl_mode_0 = "11111111"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Count7 listing">

    ------------------------------------------------------------
    Count7 listing
    ------------------------------------------------------------

    count7cell: Name =\AD_konverter:bSAR_SEQ:ChannelCounter\
        PORT MAP (
            clock => \AD_konverter:clock\ ,
            load => \AD_konverter:bSAR_SEQ:load_period\ ,
            enable => \AD_konverter:bSAR_SEQ:cnt_enable\ ,
            count_6 => \AD_konverter:bSAR_SEQ:count_6\ ,
            count_5 => \AD_konverter:ch_addr_5\ ,
            count_4 => \AD_konverter:ch_addr_4\ ,
            count_3 => \AD_konverter:ch_addr_3\ ,
            count_2 => \AD_konverter:ch_addr_2\ ,
            count_1 => \AD_konverter:ch_addr_1\ ,
            count_0 => \AD_konverter:ch_addr_0\ ,
            tc => \AD_konverter:bSAR_SEQ:cnt_tc\ ,
            clk_en => \AD_konverter:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "0000011"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\AD_konverter:bSAR_SEQ:enable\)

    count7cell: Name =\UART:BUART:sRX:RxBitCounter\
        PORT MAP (
            clock => \UART:Net_9\ ,
            load => \UART:BUART:rx_counter_load\ ,
            count_6 => \UART:BUART:rx_count_6\ ,
            count_5 => \UART:BUART:rx_count_5\ ,
            count_4 => \UART:BUART:rx_count_4\ ,
            count_3 => \UART:BUART:rx_count_3\ ,
            count_2 => \UART:BUART:rx_count_2\ ,
            count_1 => \UART:BUART:rx_count_1\ ,
            count_0 => \UART:BUART:rx_count_0\ ,
            tc => \UART:BUART:rx_count7_tc\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "1110010"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="DRQ listing">

    ------------------------------------------------------------
    DRQ listing
    ------------------------------------------------------------

    drqcell: Name =\AD_konverter:TempBuf\
        PORT MAP (
            dmareq => \AD_konverter:Net_3830\ ,
            termin => zero ,
            termout => \AD_konverter:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }

    drqcell: Name =\AD_konverter:FinalBuf\
        PORT MAP (
            dmareq => \AD_konverter:Net_3698\ ,
            termin => zero ,
            termout => \AD_konverter:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Interrupt listing">

    ------------------------------------------------------------
    Interrupt listing
    ------------------------------------------------------------

    interrupt: Name =\AD_konverter:IRQ\
        PORT MAP (
            interrupt => Net_688 );
        Properties:
        {
            int_type = "10"
        }

    interrupt: Name =isr_1
        PORT MAP (
            interrupt => Net_688 );
        Properties:
        {
            int_type = "10"
        }

    interrupt: Name =isr_2
        PORT MAP (
            interrupt => Net_554 );
        Properties:
        {
            int_type = "10"
        }

    interrupt: Name =isr_5
        PORT MAP (
            interrupt => Net_641 );
        Properties:
        {
            int_type = "10"
        }

    interrupt: Name =isr_3
        PORT MAP (
            interrupt => Net_671_local );
        Properties:
        {
            int_type = "10"
        }

    interrupt: Name =isr_4
        PORT MAP (
            interrupt => Net_648_local );
        Properties:
        {
            int_type = "10"
        }
    </CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Technology mapping summary" expanded>

------------------------------------------------------------
Technology mapping summary
------------------------------------------------------------

Resource Type                 : Used : Free :  Max :  % Used
============================================================
Digital Clocks                :    8 :    0 :    8 : 100.00 %
Analog Clocks                 :    0 :    4 :    4 :  0.00 %
CapSense Buffers              :    0 :    2 :    2 :  0.00 %
Digital Filter Block          :    0 :    1 :    1 :  0.00 %
Interrupts                    :    6 :   26 :   32 : 18.75 %
IO                            :   11 :   61 :   72 : 15.28 %
Segment LCD                   :    0 :    1 :    1 :  0.00 %
CAN 2.0b                      :    0 :    1 :    1 :  0.00 %
I2C                           :    0 :    1 :    1 :  0.00 %
USB                           :    0 :    1 :    1 :  0.00 %
DMA Channels                  :    2 :   22 :   24 :  8.33 %
Timer                         :    0 :    4 :    4 :  0.00 %
UDB                           :      :      :      :        
  Macrocells                  :  123 :   69 :  192 : 64.06 %
  Unique P-terms              :  166 :  218 :  384 : 43.23 %
  Total P-terms               :  175 :      :      :        
  Datapath Cells              :   10 :   14 :   24 : 41.67 %
  Status Cells                :    9 :   15 :   24 : 37.50 %
    Status Registers          :    1 :      :      :        
    StatusI Registers         :    5 :      :      :        
    Sync Cells (x1)           :    1 :      :      :        
    Routed Count7 Load/Enable :    2 :      :      :        
  Control Cells               :    6 :   18 :   24 : 25.00 %
    Control Registers         :    4 :      :      :        
    Count7 Cells              :    2 :      :      :        
Opamp                         :    0 :    4 :    4 :  0.00 %
Comparator                    :    0 :    4 :    4 :  0.00 %
Delta-Sigma ADC               :    0 :    1 :    1 :  0.00 %
LPF                           :    0 :    2 :    2 :  0.00 %
SAR ADC                       :    1 :    1 :    2 : 50.00 %
Analog (SC/CT) Blocks         :    0 :    4 :    4 :  0.00 %
DAC                           :      :      :      :        
  VIDAC                       :    0 :    4 :    4 :  0.00 %
</CYPRESSTAG>
Technology Mapping: Elapsed time ==> 0s.143ms
Tech mapping phase: Elapsed time ==> 0s.221ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Placement">
Info: apr.M0002: Analog signal "Net_357" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_359" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_360" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_362" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_364" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_365" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_367" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_369" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_370" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_372" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_374" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_375" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_377" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_379" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_380" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_382" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_384" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_385" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_387" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_389" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_390" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_392" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_394" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_395" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_397" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_399" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_400" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_402" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_404" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_405" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_407" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_409" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_410" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_412" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_414" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_415" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_417" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_419" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_420" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_422" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_424" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_425" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_427" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_429" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_430" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_431" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_432" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_433" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_434" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_435" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_436" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_437" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_438" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_439" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_440" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_441" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_442" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_443" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_444" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_445" is connected to one terminal only. (App=cydsfit)
Initial Analog Placement Results:
IO_7@[IOP=(4)][IoId=(7)] : PWM_Out(0) (fixed)
IO_4@[IOP=(3)][IoId=(4)] : Pin_Current(0) (fixed)
IO_5@[IOP=(3)][IoId=(5)] : Pin_Load_Current(0) (fixed)
IO_0@[IOP=(3)][IoId=(0)] : Pin_Speed(0) (fixed)
IO_6@[IOP=(3)][IoId=(6)] : Pin_Torque(0) (fixed)
IO_3@[IOP=(3)][IoId=(3)] : Pin_Voltage(0) (fixed)
IO_1@[IOP=(0)][IoId=(1)] : Rx(0) (fixed)
IO_0@[IOP=(0)][IoId=(0)] : Tx(0) (fixed)
SAR[1]@[FFB(SAR,1)] : \AD_konverter:SAR:ADC_SAR\
Vref[13]@[FFB(Vref,13)] : \AD_konverter:SAR:vRef_Vdda_1\
Log: apr.M0058: The analog placement iterative improvement is 47% done. (App=cydsfit)
Analog Placement Results:
IO_7@[IOP=(4)][IoId=(7)] : PWM_Out(0) (fixed)
IO_4@[IOP=(3)][IoId=(4)] : Pin_Current(0) (fixed)
IO_5@[IOP=(3)][IoId=(5)] : Pin_Load_Current(0) (fixed)
IO_0@[IOP=(3)][IoId=(0)] : Pin_Speed(0) (fixed)
IO_6@[IOP=(3)][IoId=(6)] : Pin_Torque(0) (fixed)
IO_3@[IOP=(3)][IoId=(3)] : Pin_Voltage(0) (fixed)
IO_1@[IOP=(0)][IoId=(1)] : Rx(0) (fixed)
IO_0@[IOP=(0)][IoId=(0)] : Tx(0) (fixed)
SAR[1]@[FFB(SAR,1)] : \AD_konverter:SAR:ADC_SAR\
Vref[13]@[FFB(Vref,13)] : \AD_konverter:SAR:vRef_Vdda_1\

Analog Placement phase: Elapsed time ==> 4s.212ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Routing">
Analog Routing phase: Elapsed time ==> 0s.008ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Code Generation">
============ Analog Final Answer Routes ============
Dump of CyAnalogRoutingResultsDB
Map of net to items {
  Net: \AD_konverter:Net_2803\ {
    sar_1_vplus
  }
  Net: Net_848 {
    p3_3
  }
  Net: Net_847 {
    p3_4
  }
  Net: Net_479 {
    p3_6
  }
  Net: Net_846 {
    p3_5
  }
  Net: Net_357 {
  }
  Net: Net_359 {
  }
  Net: Net_360 {
  }
  Net: Net_362 {
  }
  Net: Net_364 {
  }
  Net: Net_365 {
  }
  Net: Net_367 {
  }
  Net: Net_369 {
  }
  Net: Net_370 {
  }
  Net: Net_372 {
  }
  Net: Net_374 {
  }
  Net: Net_375 {
  }
  Net: Net_377 {
  }
  Net: Net_379 {
  }
  Net: Net_380 {
  }
  Net: Net_382 {
  }
  Net: Net_384 {
  }
  Net: Net_385 {
  }
  Net: Net_387 {
  }
  Net: Net_389 {
  }
  Net: Net_390 {
  }
  Net: Net_392 {
  }
  Net: Net_394 {
  }
  Net: Net_395 {
  }
  Net: Net_397 {
  }
  Net: Net_399 {
  }
  Net: Net_400 {
  }
  Net: Net_402 {
  }
  Net: Net_404 {
  }
  Net: Net_405 {
  }
  Net: Net_407 {
  }
  Net: Net_409 {
  }
  Net: Net_410 {
  }
  Net: Net_412 {
  }
  Net: Net_414 {
  }
  Net: Net_415 {
  }
  Net: Net_417 {
  }
  Net: Net_419 {
  }
  Net: Net_420 {
  }
  Net: Net_422 {
  }
  Net: Net_424 {
  }
  Net: Net_425 {
  }
  Net: Net_427 {
  }
  Net: Net_429 {
  }
  Net: Net_430 {
  }
  Net: Net_431 {
  }
  Net: Net_432 {
  }
  Net: Net_433 {
  }
  Net: Net_434 {
  }
  Net: Net_435 {
  }
  Net: Net_436 {
  }
  Net: Net_437 {
  }
  Net: Net_438 {
  }
  Net: Net_439 {
  }
  Net: Net_440 {
  }
  Net: Net_441 {
  }
  Net: Net_442 {
  }
  Net: Net_443 {
  }
  Net: Net_444 {
  }
  Net: Net_445 {
  }
  Net: \AD_konverter:SAR:Net_126\ {
    sar_1_vrefhi
    sar_1_vminus_x_sar_1_vrefhi
    sar_1_vminus
  }
  Net: \AD_konverter:SAR:Net_209\ {
  }
  Net: \AD_konverter:SAR:Net_235\ {
    common_sar_vref_vdda/2
    common_sar_vref_vdda/2_x_sar_1_vref_vdda_vdda_2
    sar_1_vref_vdda_vdda_2
    sar_1_vref_x_sar_1_vref_vdda_vdda_2
    sar_1_vref
  }
  Net: AmuxNet::\AD_konverter:AMuxHw_2\ {
    sar_1_vplus
    agr5_x_sar_1_vplus
    agr5
    agr5_x_p3_5
    agr4_x_sar_1_vplus
    agr4
    agr4_x_p3_4
    agr6_x_sar_1_vplus
    agr6
    agr6_x_p3_6
    agr7_x_sar_1_vplus
    agr7
    agr7_x_p3_3
    p3_5
    p3_4
    p3_6
    p3_3
  }
}
Map of item to net {
  sar_1_vrefhi                                     -> \AD_konverter:SAR:Net_126\
  sar_1_vminus_x_sar_1_vrefhi                      -> \AD_konverter:SAR:Net_126\
  sar_1_vminus                                     -> \AD_konverter:SAR:Net_126\
  common_sar_vref_vdda/2                           -> \AD_konverter:SAR:Net_235\
  common_sar_vref_vdda/2_x_sar_1_vref_vdda_vdda_2  -> \AD_konverter:SAR:Net_235\
  sar_1_vref_vdda_vdda_2                           -> \AD_konverter:SAR:Net_235\
  sar_1_vref_x_sar_1_vref_vdda_vdda_2              -> \AD_konverter:SAR:Net_235\
  sar_1_vref                                       -> \AD_konverter:SAR:Net_235\
  sar_1_vplus                                      -> \AD_konverter:Net_2803\
  p3_3                                             -> Net_848
  p3_4                                             -> Net_847
  p3_6                                             -> Net_479
  p3_5                                             -> Net_846
  agr5_x_sar_1_vplus                               -> AmuxNet::\AD_konverter:AMuxHw_2\
  agr5                                             -> AmuxNet::\AD_konverter:AMuxHw_2\
  agr5_x_p3_5                                      -> AmuxNet::\AD_konverter:AMuxHw_2\
  agr4_x_sar_1_vplus                               -> AmuxNet::\AD_konverter:AMuxHw_2\
  agr4                                             -> AmuxNet::\AD_konverter:AMuxHw_2\
  agr4_x_p3_4                                      -> AmuxNet::\AD_konverter:AMuxHw_2\
  agr6_x_sar_1_vplus                               -> AmuxNet::\AD_konverter:AMuxHw_2\
  agr6                                             -> AmuxNet::\AD_konverter:AMuxHw_2\
  agr6_x_p3_6                                      -> AmuxNet::\AD_konverter:AMuxHw_2\
  agr7_x_sar_1_vplus                               -> AmuxNet::\AD_konverter:AMuxHw_2\
  agr7                                             -> AmuxNet::\AD_konverter:AMuxHw_2\
  agr7_x_p3_3                                      -> AmuxNet::\AD_konverter:AMuxHw_2\
}
Mux Info {
  Mux: \AD_konverter:AMuxHw_2\ {
     Mouth: \AD_konverter:Net_2803\
     Guts:  AmuxNet::\AD_konverter:AMuxHw_2\
     IsSingleSwitching: False
     IsStaticSwitching: True
     IsAtMostOneSwitch: True
    Arm: 0 {
      Net:   Net_848
      Outer: agr7_x_p3_3
      Inner: agr7_x_sar_1_vplus
      Path {
        p3_3
        agr7_x_p3_3
        agr7
        agr7_x_sar_1_vplus
        sar_1_vplus
      }
    }
    Arm: 1 {
      Net:   Net_847
      Outer: agr4_x_p3_4
      Inner: agr4_x_sar_1_vplus
      Path {
        p3_4
        agr4_x_p3_4
        agr4
        agr4_x_sar_1_vplus
        sar_1_vplus
      }
    }
    Arm: 2 {
      Net:   Net_479
      Outer: agr6_x_p3_6
      Inner: agr6_x_sar_1_vplus
      Path {
        p3_6
        agr6_x_p3_6
        agr6
        agr6_x_sar_1_vplus
        sar_1_vplus
      }
    }
    Arm: 3 {
      Net:   Net_846
      Outer: agr5_x_p3_5
      Inner: agr5_x_sar_1_vplus
      Path {
        p3_5
        agr5_x_p3_5
        agr5
        agr5_x_sar_1_vplus
        sar_1_vplus
      }
    }
    Arm: 4 {
      Net:   Net_357
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 5 {
      Net:   Net_359
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 6 {
      Net:   Net_360
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 7 {
      Net:   Net_362
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 8 {
      Net:   Net_364
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 9 {
      Net:   Net_365
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 10 {
      Net:   Net_367
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 11 {
      Net:   Net_369
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 12 {
      Net:   Net_370
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 13 {
      Net:   Net_372
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 14 {
      Net:   Net_374
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 15 {
      Net:   Net_375
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 16 {
      Net:   Net_377
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 17 {
      Net:   Net_379
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 18 {
      Net:   Net_380
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 19 {
      Net:   Net_382
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 20 {
      Net:   Net_384
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 21 {
      Net:   Net_385
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 22 {
      Net:   Net_387
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 23 {
      Net:   Net_389
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 24 {
      Net:   Net_390
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 25 {
      Net:   Net_392
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 26 {
      Net:   Net_394
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 27 {
      Net:   Net_395
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 28 {
      Net:   Net_397
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 29 {
      Net:   Net_399
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 30 {
      Net:   Net_400
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 31 {
      Net:   Net_402
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 32 {
      Net:   Net_404
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 33 {
      Net:   Net_405
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 34 {
      Net:   Net_407
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 35 {
      Net:   Net_409
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 36 {
      Net:   Net_410
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 37 {
      Net:   Net_412
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 38 {
      Net:   Net_414
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 39 {
      Net:   Net_415
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 40 {
      Net:   Net_417
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 41 {
      Net:   Net_419
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 42 {
      Net:   Net_420
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 43 {
      Net:   Net_422
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 44 {
      Net:   Net_424
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 45 {
      Net:   Net_425
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 46 {
      Net:   Net_427
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 47 {
      Net:   Net_429
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 48 {
      Net:   Net_430
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 49 {
      Net:   Net_431
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 50 {
      Net:   Net_432
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 51 {
      Net:   Net_433
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 52 {
      Net:   Net_434
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 53 {
      Net:   Net_435
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 54 {
      Net:   Net_436
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 55 {
      Net:   Net_437
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 56 {
      Net:   Net_438
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 57 {
      Net:   Net_439
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 58 {
      Net:   Net_440
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 59 {
      Net:   Net_441
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 60 {
      Net:   Net_442
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 61 {
      Net:   Net_443
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 62 {
      Net:   Net_444
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 63 {
      Net:   Net_445
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
  }
}
Dump of CyP35AnalogRoutingResultsDB
IsVddaHalfUsedForComp = False
IsVddaHalfUsedForSar0 = False
IsVddaHalfUsedForSar1 = True
Analog Code Generation phase: Elapsed time ==> 0s.413ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Placement">
<CYPRESSTAG name="Detailed placement messages">
I2076: Total run-time: 5.5 sec.

</CYPRESSTAG>
<CYPRESSTAG name="PLD Packing">
<CYPRESSTAG name="PLD Packing Summary" expanded>

------------------------------------------------------------
PLD Packing Summary
------------------------------------------------------------
            Resource Type : Used : Free :  Max :  % Used
    ====================================================
                     PLDs :   44 :    4 :   48 :  91.67%

<CYPRESSTAG name="PLD Statistics">

        PLD Resource Type :     Average/LAB
    =======================================
                   Inputs :            7.23
                   Pterms :            3.86
               Macrocells :            2.80
</CYPRESSTAG>
<CYPRESSTAG name="Packed PLD Contents">
Packed PLD Contents not displayed at this verbose level.</CYPRESSTAG>
</CYPRESSTAG>
PLD Packing: Elapsed time ==> 0s.003ms
</CYPRESSTAG>
<CYPRESSTAG name="Partitioning">
<CYPRESSTAG name="Initial Partitioning Summary">
Initial Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
<CYPRESSTAG name="Final Partitioning Summary">
Final Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
Partitioning: Elapsed time ==> 0s.104ms
</CYPRESSTAG>
<CYPRESSTAG name="Simulated Annealing">
Annealing: Elapsed time ==> 0s.001ms
<CYPRESSTAG name="Simulated Annealing Results">
The seed used for moves was 114161200.
Inital cost was 840, final cost is 840 (0.00% improvement).</CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Final Placement Summary">

------------------------------------------------------------
Final Placement Summary
------------------------------------------------------------

       Resource Type :      Count : Avg Inputs : Avg Outputs
    ========================================================
                 UDB :         22 :       9.59 :       5.59
<CYPRESSTAG name="Final Placement Details">
<CYPRESSTAG name="Component Details">

------------------------------------------------------------
Component Placement Details
------------------------------------------------------------
UDB [UDB=(0,0)] contents:
LAB@[UDB=(0,0)][LB=0] #macrocells=2, #inputs=9, #pterms=2
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\PWM_Speed:PWMUDB:status_2\, Mode=(Combinatorial) @ [UDB=(0,0)][LB=0][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_Speed:PWMUDB:runmode_enable\ * \PWM_Speed:PWMUDB:tc_i\
        );
        Output = \PWM_Speed:PWMUDB:status_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register) @ [UDB=(0,0)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,0)][LB=1] #macrocells=2, #inputs=7, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

statusicell: Name =\PWM_Speed:PWMUDB:genblk8:stsreg\
    PORT MAP (
        clock => Net_284 ,
        status_3 => \PWM_Speed:PWMUDB:status_3\ ,
        status_2 => \PWM_Speed:PWMUDB:status_2\ ,
        status_0 => \PWM_Speed:PWMUDB:status_0\ ,
        interrupt => Net_554 );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0100111"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,1)] contents:
LAB@[UDB=(0,1)][LB=0] #macrocells=2, #inputs=2, #pterms=2
{
    [McSlotId=0]: (empty)
    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\Counter_Speed:CounterUDB:hwCapture\, Mode=(Combinatorial) @ [UDB=(0,1)][LB=0][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\Counter_Speed:CounterUDB:prevCapture\ * Net_1630
        );
        Output = \Counter_Speed:CounterUDB:hwCapture\ (fanout=9)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\Counter_Speed:CounterUDB:prevCapture\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_4) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_1630
        );
        Output = \Counter_Speed:CounterUDB:prevCapture\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,1)][LB=1] #macrocells=3, #inputs=4, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=Net_1630, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (Net_284) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \PWM_Speed:PWMUDB:runmode_enable\ * \PWM_Speed:PWMUDB:cmp1_eq\
            + \PWM_Speed:PWMUDB:runmode_enable\ * 
              \PWM_Speed:PWMUDB:cmp1_less\
        );
        Output = Net_1630 (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\PWM_Speed:PWMUDB:prevCompare1\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_284) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\PWM_Speed:PWMUDB:cmp1_eq\ * !\PWM_Speed:PWMUDB:cmp1_less\
        );
        Output = \PWM_Speed:PWMUDB:prevCompare1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\PWM_Speed:PWMUDB:status_0\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=2]
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (Net_284) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\PWM_Speed:PWMUDB:prevCompare1\ * \PWM_Speed:PWMUDB:cmp1_eq\
            + !\PWM_Speed:PWMUDB:prevCompare1\ * \PWM_Speed:PWMUDB:cmp1_less\
        );
        Output = \PWM_Speed:PWMUDB:status_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

datapathcell: Name =\PWM_Speed:PWMUDB:sP16:pwmdp:u1\
    PORT MAP (
        clock => Net_284 ,
        cs_addr_2 => \PWM_Speed:PWMUDB:tc_i\ ,
        cs_addr_1 => \PWM_Speed:PWMUDB:runmode_enable\ ,
        ce0_comb => \PWM_Speed:PWMUDB:cmp1_eq\ ,
        cl0_comb => \PWM_Speed:PWMUDB:cmp1_less\ ,
        z0_comb => \PWM_Speed:PWMUDB:tc_i\ ,
        f1_blk_stat_comb => \PWM_Speed:PWMUDB:status_3\ ,
        chain_in => \PWM_Speed:PWMUDB:sP16:pwmdp:carry\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101011110000000000000100000011110000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True
    Previous in chain : \PWM_Speed:PWMUDB:sP16:pwmdp:u0\

UDB [UDB=(0,2)] contents:
LAB@[UDB=(0,2)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,2)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\Counter_Speed:CounterUDB:sC32:counterdp:u0\
    PORT MAP (
        clock => Net_4 ,
        cs_addr_2 => __ONE__ ,
        cs_addr_1 => \Counter_Speed:CounterUDB:count_enable\ ,
        cs_addr_0 => \Counter_Speed:CounterUDB:hwCapture\ ,
        f0_load => \Counter_Speed:CounterUDB:hwCapture\ ,
        chain_out => \Counter_Speed:CounterUDB:sC32:counterdp:carry0\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000001000000001000000010000000000000010000000000000000100000010101000010100000010000001000000101010000101000011111111000000001111111111111111101000000000000000000001000000000000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True
    Next in chain : \Counter_Speed:CounterUDB:sC32:counterdp:u1\

UDB [UDB=(0,3)] contents:
LAB@[UDB=(0,3)][LB=0] #macrocells=3, #inputs=12, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART:BUART:tx_status_0\, Mode=(Combinatorial) @ [UDB=(0,3)][LB=0][MC=3]
        Total # of inputs        : 5
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_fifo_empty\ * 
              \UART:BUART:tx_state_2\
        );
        Output = \UART:BUART:tx_status_0\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,3)][LB=1] #macrocells=2, #inputs=11, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\UART:BUART:counter_load_not\, Mode=(Combinatorial) @ [UDB=(0,3)][LB=1][MC=0]
        Total # of inputs        : 4
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\
            + !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_state_2\
        );
        Output = \UART:BUART:counter_load_not\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

datapathcell: Name =\Counter_Speed:CounterUDB:sC32:counterdp:u1\
    PORT MAP (
        clock => Net_4 ,
        cs_addr_2 => __ONE__ ,
        cs_addr_1 => \Counter_Speed:CounterUDB:count_enable\ ,
        cs_addr_0 => \Counter_Speed:CounterUDB:hwCapture\ ,
        f0_load => \Counter_Speed:CounterUDB:hwCapture\ ,
        chain_in => \Counter_Speed:CounterUDB:sC32:counterdp:carry0\ ,
        chain_out => \Counter_Speed:CounterUDB:sC32:counterdp:carry1\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000001000000001000000010000000000000010000000000000000100000010101000010100000010000001000000101010000101000011111111000000001111111111111111101011110000000000000001000001110000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True
    Previous in chain : \Counter_Speed:CounterUDB:sC32:counterdp:u0\
    Next in chain : \Counter_Speed:CounterUDB:sC32:counterdp:u2\

UDB [UDB=(0,4)] contents:
LAB@[UDB=(0,4)][LB=0] #macrocells=3, #inputs=8, #pterms=7
{
    [McSlotId=0]:     MacroCell: Name=\UART:BUART:tx_state_0\, Mode=(T-Register) @ [UDB=(0,4)][LB=0][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * !\UART:BUART:tx_fifo_empty\
            + !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_fifo_empty\ * !\UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_fifo_empty\ * 
              \UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_0\ * !\UART:BUART:tx_state_2\ * 
              \UART:BUART:tx_bitclk\
        );
        Output = \UART:BUART:tx_state_0\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART:BUART:tx_state_1\, Mode=(T-Register) @ [UDB=(0,4)][LB=0][MC=1]
        Total # of inputs        : 6
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              \UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_2\ * 
              \UART:BUART:tx_counter_dp\ * \UART:BUART:tx_bitclk\
            + \UART:BUART:tx_state_0\ * !\UART:BUART:tx_state_2\ * 
              \UART:BUART:tx_bitclk\
        );
        Output = \UART:BUART:tx_state_1\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=Net_1494, Mode=(Combinatorial) @ [UDB=(0,4)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:txn\
        );
        Output = Net_1494 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(0,4)][LB=1] #macrocells=1, #inputs=6, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\UART:BUART:tx_state_2\, Mode=(T-Register) @ [UDB=(0,4)][LB=1][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_state_2\ * \UART:BUART:tx_bitclk\
            + \UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_2\ * 
              \UART:BUART:tx_counter_dp\ * \UART:BUART:tx_bitclk\
        );
        Output = \UART:BUART:tx_state_2\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

datapathcell: Name =\UART:BUART:sTX:sCLOCK:TxBitClkGen\
    PORT MAP (
        clock => \UART:Net_9\ ,
        cs_addr_0 => \UART:BUART:counter_load_not\ ,
        ce0_reg => \UART:BUART:tx_bitclk_enable_pre\ ,
        ce1_reg => \UART:BUART:tx_counter_dp\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100000111001000000100000000000101111100000000000000001000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,5)] contents:
LAB@[UDB=(0,5)][LB=0] #macrocells=2, #inputs=8, #pterms=2
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register) @ [UDB=(0,5)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\UART:BUART:tx_status_2\, Mode=(Combinatorial) @ [UDB=(0,5)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:tx_fifo_notfull\
        );
        Output = \UART:BUART:tx_status_2\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,5)][LB=1] #macrocells=2, #inputs=8, #pterms=7
{
    [McSlotId=0]:     MacroCell: Name=\UART:BUART:txn\, Mode=(D-Register) @ [UDB=(0,5)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              \UART:BUART:txn\ * \UART:BUART:tx_state_1\ * 
              !\UART:BUART:tx_bitclk\
            + \UART:BUART:txn\ * \UART:BUART:tx_state_2\
            + !\UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_shift_out\ * !\UART:BUART:tx_state_2\
            + !\UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_state_2\ * !\UART:BUART:tx_bitclk\
            + \UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_shift_out\ * !\UART:BUART:tx_state_2\ * 
              !\UART:BUART:tx_counter_dp\ * \UART:BUART:tx_bitclk\
        );
        Output = \UART:BUART:txn\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART:BUART:tx_bitclk\, Mode=(D-Register) @ [UDB=(0,5)][LB=1][MC=1]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_state_2\
            + !\UART:BUART:tx_bitclk_enable_pre\
        );
        Output = \UART:BUART:tx_bitclk\ (fanout=4)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

datapathcell: Name =\UART:BUART:sTX:TxShifter:u0\
    PORT MAP (
        clock => \UART:Net_9\ ,
        cs_addr_2 => \UART:BUART:tx_state_1\ ,
        cs_addr_1 => \UART:BUART:tx_state_0\ ,
        cs_addr_0 => \UART:BUART:tx_bitclk_enable_pre\ ,
        so_comb => \UART:BUART:tx_shift_out\ ,
        f0_bus_stat_comb => \UART:BUART:tx_fifo_notfull\ ,
        f0_blk_stat_comb => \UART:BUART:tx_fifo_empty\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

statusicell: Name =\UART:BUART:sTX:TxSts\
    PORT MAP (
        clock => \UART:Net_9\ ,
        status_3 => \UART:BUART:tx_fifo_notfull\ ,
        status_2 => \UART:BUART:tx_status_2\ ,
        status_1 => \UART:BUART:tx_fifo_empty\ ,
        status_0 => \UART:BUART:tx_status_0\ );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0000001"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,0)] contents:
LAB@[UDB=(1,0)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,0)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)
        Properties               : 
        {
        }
}

statusicell: Name =\Counter_Speed:CounterUDB:sSTSReg:stsreg\
    PORT MAP (
        clock => Net_4 ,
        status_6 => \Counter_Speed:CounterUDB:status_6\ ,
        status_5 => \Counter_Speed:CounterUDB:status_5\ ,
        status_4 => \Counter_Speed:CounterUDB:hwCapture\ ,
        status_2 => \Counter_Speed:CounterUDB:status_2\ ,
        status_1 => \Counter_Speed:CounterUDB:status_1\ ,
        status_0 => \Counter_Speed:CounterUDB:status_0\ );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0011111"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,1)] contents:
LAB@[UDB=(1,1)][LB=0] #macrocells=2, #inputs=8, #pterms=6
{
    [McSlotId=0]:     MacroCell: Name=\Counter_Speed:CounterUDB:prevCompare\, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=0]
        Total # of inputs        : 5
        Total # of product terms : 5
        List of special equations: 
            Clock  = (Net_4) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\Counter_Speed:CounterUDB:ctrl_cmod_2\ * 
              !\Counter_Speed:CounterUDB:ctrl_cmod_1\ * 
              \Counter_Speed:CounterUDB:ctrl_cmod_0\ * 
              \Counter_Speed:CounterUDB:cmp_less\
            + !\Counter_Speed:CounterUDB:ctrl_cmod_2\ * 
              \Counter_Speed:CounterUDB:ctrl_cmod_1\ * 
              !\Counter_Speed:CounterUDB:ctrl_cmod_0\ * 
              \Counter_Speed:CounterUDB:cmp_less\
            + !\Counter_Speed:CounterUDB:ctrl_cmod_2\ * 
              !\Counter_Speed:CounterUDB:ctrl_cmod_0\ * 
              \Counter_Speed:CounterUDB:cmp_equal\
            + \Counter_Speed:CounterUDB:ctrl_cmod_2\ * 
              !\Counter_Speed:CounterUDB:cmp_less\
            + \Counter_Speed:CounterUDB:ctrl_cmod_1\ * 
              \Counter_Speed:CounterUDB:ctrl_cmod_0\ * 
              !\Counter_Speed:CounterUDB:cmp_less\ * 
              !\Counter_Speed:CounterUDB:cmp_equal\
        );
        Output = \Counter_Speed:CounterUDB:prevCompare\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\Counter_Speed:CounterUDB:count_enable\, Mode=(Combinatorial) @ [UDB=(1,1)][LB=0][MC=3]
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_1511 * \Counter_Speed:CounterUDB:control_7\ * 
              !\Counter_Speed:CounterUDB:count_stored_i\
        );
        Output = \Counter_Speed:CounterUDB:count_enable\ (fanout=4)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,1)][LB=1] #macrocells=2, #inputs=7, #pterms=6
{
    [McSlotId=0]: (empty)
    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\Counter_Speed:CounterUDB:status_0\, Mode=(Combinatorial) @ [UDB=(1,1)][LB=1][MC=2]
        Total # of inputs        : 6
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\Counter_Speed:CounterUDB:ctrl_cmod_2\ * 
              !\Counter_Speed:CounterUDB:ctrl_cmod_1\ * 
              \Counter_Speed:CounterUDB:ctrl_cmod_0\ * 
              \Counter_Speed:CounterUDB:cmp_less\ * 
              !\Counter_Speed:CounterUDB:prevCompare\
            + !\Counter_Speed:CounterUDB:ctrl_cmod_2\ * 
              \Counter_Speed:CounterUDB:ctrl_cmod_1\ * 
              !\Counter_Speed:CounterUDB:ctrl_cmod_0\ * 
              \Counter_Speed:CounterUDB:cmp_less\ * 
              !\Counter_Speed:CounterUDB:prevCompare\
            + !\Counter_Speed:CounterUDB:ctrl_cmod_2\ * 
              !\Counter_Speed:CounterUDB:ctrl_cmod_0\ * 
              \Counter_Speed:CounterUDB:cmp_equal\ * 
              !\Counter_Speed:CounterUDB:prevCompare\
            + \Counter_Speed:CounterUDB:ctrl_cmod_2\ * 
              !\Counter_Speed:CounterUDB:cmp_less\ * 
              !\Counter_Speed:CounterUDB:prevCompare\
            + \Counter_Speed:CounterUDB:ctrl_cmod_1\ * 
              \Counter_Speed:CounterUDB:ctrl_cmod_0\ * 
              !\Counter_Speed:CounterUDB:cmp_less\ * 
              !\Counter_Speed:CounterUDB:cmp_equal\ * 
              !\Counter_Speed:CounterUDB:prevCompare\
        );
        Output = \Counter_Speed:CounterUDB:status_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\Counter_Speed:CounterUDB:count_stored_i\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_4) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_1511
        );
        Output = \Counter_Speed:CounterUDB:count_stored_i\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\PWM_Speed:PWMUDB:sP16:pwmdp:u0\
    PORT MAP (
        clock => Net_284 ,
        cs_addr_2 => \PWM_Speed:PWMUDB:tc_i\ ,
        cs_addr_1 => \PWM_Speed:PWMUDB:runmode_enable\ ,
        chain_out => \PWM_Speed:PWMUDB:sP16:pwmdp:carry\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True
    Next in chain : \PWM_Speed:PWMUDB:sP16:pwmdp:u1\

controlcell: Name =\Counter_Speed:CounterUDB:sCTRLReg:ctrlreg\
    PORT MAP (
        clock => Net_4 ,
        control_7 => \Counter_Speed:CounterUDB:control_7\ ,
        control_6 => \Counter_Speed:CounterUDB:control_6\ ,
        control_5 => \Counter_Speed:CounterUDB:control_5\ ,
        control_4 => \Counter_Speed:CounterUDB:control_4\ ,
        control_3 => \Counter_Speed:CounterUDB:control_3\ ,
        control_2 => \Counter_Speed:CounterUDB:ctrl_cmod_2\ ,
        control_1 => \Counter_Speed:CounterUDB:ctrl_cmod_1\ ,
        control_0 => \Counter_Speed:CounterUDB:ctrl_cmod_0\ );
    Properties:
    {
        cy_ctrl_mode_0 = "11111111"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,2)] contents:
LAB@[UDB=(1,2)][LB=0] #macrocells=3, #inputs=9, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\PWM_Regulering:PWMUDB:status_2\, Mode=(Combinatorial) @ [UDB=(1,2)][LB=0][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_Regulering:PWMUDB:runmode_enable\ * 
              \PWM_Regulering:PWMUDB:tc_i\
        );
        Output = \PWM_Regulering:PWMUDB:status_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,2)][LB=1] #macrocells=4, #inputs=4, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\PWM_Regulering:PWMUDB:runmode_enable\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_908) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_Regulering:PWMUDB:control_7\
        );
        Output = \PWM_Regulering:PWMUDB:runmode_enable\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=Net_1095, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_908) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_Regulering:PWMUDB:runmode_enable\ * 
              \PWM_Regulering:PWMUDB:cmp1_less\
        );
        Output = Net_1095 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\PWM_Regulering:PWMUDB:prevCompare1\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_908) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_Regulering:PWMUDB:cmp1_less\
        );
        Output = \PWM_Regulering:PWMUDB:prevCompare1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\PWM_Regulering:PWMUDB:status_0\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=3]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_908) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\PWM_Regulering:PWMUDB:prevCompare1\ * 
              \PWM_Regulering:PWMUDB:cmp1_less\
        );
        Output = \PWM_Regulering:PWMUDB:status_0\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\PWM_Regulering:PWMUDB:sP8:pwmdp:u0\
    PORT MAP (
        clock => Net_908 ,
        cs_addr_2 => \PWM_Regulering:PWMUDB:tc_i\ ,
        cs_addr_1 => \PWM_Regulering:PWMUDB:runmode_enable\ ,
        cl0_comb => \PWM_Regulering:PWMUDB:cmp1_less\ ,
        z0_comb => \PWM_Regulering:PWMUDB:tc_i\ ,
        f1_blk_stat_comb => \PWM_Regulering:PWMUDB:status_3\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

statusicell: Name =\PWM_Regulering:PWMUDB:genblk8:stsreg\
    PORT MAP (
        clock => Net_908 ,
        status_3 => \PWM_Regulering:PWMUDB:status_3\ ,
        status_2 => \PWM_Regulering:PWMUDB:status_2\ ,
        status_0 => \PWM_Regulering:PWMUDB:status_0\ );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0100111"
    }
    Clock Polarity: Active High
    Clock Enable: True

controlcell: Name =\PWM_Regulering:PWMUDB:genblk1:ctrlreg\
    PORT MAP (
        clock => Net_908 ,
        control_7 => \PWM_Regulering:PWMUDB:control_7\ ,
        control_6 => \PWM_Regulering:PWMUDB:control_6\ ,
        control_5 => \PWM_Regulering:PWMUDB:control_5\ ,
        control_4 => \PWM_Regulering:PWMUDB:control_4\ ,
        control_3 => \PWM_Regulering:PWMUDB:control_3\ ,
        control_2 => \PWM_Regulering:PWMUDB:control_2\ ,
        control_1 => \PWM_Regulering:PWMUDB:control_1\ ,
        control_0 => \PWM_Regulering:PWMUDB:control_0\ );
    Properties:
    {
        cy_ctrl_mode_0 = "11111111"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,3)] contents:
LAB@[UDB=(1,3)][LB=0] #macrocells=3, #inputs=9, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register) @ [UDB=(1,3)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register) @ [UDB=(1,3)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\Counter_Speed:CounterUDB:status_2\, Mode=(Combinatorial) @ [UDB=(1,3)][LB=0][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Counter_Speed:CounterUDB:per_equal\ * 
              !\Counter_Speed:CounterUDB:overflow_reg_i\
        );
        Output = \Counter_Speed:CounterUDB:status_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(1,3)][LB=1] #macrocells=1, #inputs=1, #pterms=1
{
    [McSlotId=0]:     MacroCell: Name=\Counter_Speed:CounterUDB:overflow_reg_i\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_4) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Counter_Speed:CounterUDB:per_equal\
        );
        Output = \Counter_Speed:CounterUDB:overflow_reg_i\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

datapathcell: Name =\Counter_Speed:CounterUDB:sC32:counterdp:u2\
    PORT MAP (
        clock => Net_4 ,
        cs_addr_2 => __ONE__ ,
        cs_addr_1 => \Counter_Speed:CounterUDB:count_enable\ ,
        cs_addr_0 => \Counter_Speed:CounterUDB:hwCapture\ ,
        f0_load => \Counter_Speed:CounterUDB:hwCapture\ ,
        chain_in => \Counter_Speed:CounterUDB:sC32:counterdp:carry1\ ,
        chain_out => \Counter_Speed:CounterUDB:sC32:counterdp:carry2\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000001000000001000000010000000000000010000000000000000100000010101000010100000010000001000000101010000101000011111111000000001111111111111111101011110000000000000001000001110000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True
    Previous in chain : \Counter_Speed:CounterUDB:sC32:counterdp:u1\
    Next in chain : \Counter_Speed:CounterUDB:sC32:counterdp:u3\

UDB [UDB=(1,4)] contents:
LAB@[UDB=(1,4)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,4)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register) @ [UDB=(1,4)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register) @ [UDB=(1,4)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register) @ [UDB=(1,4)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\Counter_Speed:CounterUDB:sC32:counterdp:u3\
    PORT MAP (
        clock => Net_4 ,
        cs_addr_2 => __ONE__ ,
        cs_addr_1 => \Counter_Speed:CounterUDB:count_enable\ ,
        cs_addr_0 => \Counter_Speed:CounterUDB:hwCapture\ ,
        f0_load => \Counter_Speed:CounterUDB:hwCapture\ ,
        ce0_comb => \Counter_Speed:CounterUDB:per_equal\ ,
        z0_comb => \Counter_Speed:CounterUDB:status_1\ ,
        ce1_comb => \Counter_Speed:CounterUDB:cmp_equal\ ,
        cl1_comb => \Counter_Speed:CounterUDB:cmp_less\ ,
        f0_bus_stat_comb => \Counter_Speed:CounterUDB:status_6\ ,
        f0_blk_stat_comb => \Counter_Speed:CounterUDB:status_5\ ,
        chain_in => \Counter_Speed:CounterUDB:sC32:counterdp:carry2\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000001000000001000000010000000000000010000000000000000100000010101000010100000010000001000000101010000101000011111111000000001111111111111111101011110000000000000001000001110000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True
    Previous in chain : \Counter_Speed:CounterUDB:sC32:counterdp:u2\

synccell: Name =\AD_konverter:Sync:genblk1[0]:INST\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        in => \AD_konverter:nrq\ ,
        out => \AD_konverter:Net_3935\ );
    Properties:
    {
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,5)] contents:
LAB@[UDB=(1,5)][LB=0] #macrocells=2, #inputs=7, #pterms=2
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register) @ [UDB=(1,5)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register) @ [UDB=(1,5)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(1,5)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register) @ [UDB=(1,5)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register) @ [UDB=(1,5)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register) @ [UDB=(1,5)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register) @ [UDB=(1,5)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(2,0)] contents:
LAB@[UDB=(2,0)][LB=0] #macrocells=1, #inputs=7, #pterms=1
{
    [McSlotId=0]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(2,0)][LB=1] #macrocells=4, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:ch_addr_2\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_old_id_2\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(2,1)] contents:
LAB@[UDB=(2,1)][LB=0] #macrocells=4, #inputs=12, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:ch_addr_4\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_old_id_4\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART:BUART:rx_status_4\, Mode=(Combinatorial) @ [UDB=(2,1)][LB=0][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART:BUART:rx_load_fifo\ * \UART:BUART:rx_fifofull\
        );
        Output = \UART:BUART:rx_status_4\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART:BUART:rx_status_5\, Mode=(Combinatorial) @ [UDB=(2,1)][LB=0][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART:BUART:rx_fifonotempty\ * \UART:BUART:rx_state_stop1_reg\
        );
        Output = \UART:BUART:rx_status_5\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,1)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)
        Properties               : 
        {
        }
}

statusicell: Name =\UART:BUART:sRX:RxSts\
    PORT MAP (
        clock => \UART:Net_9\ ,
        status_5 => \UART:BUART:rx_status_5\ ,
        status_4 => \UART:BUART:rx_status_4\ ,
        status_3 => \UART:BUART:rx_status_3\ ,
        interrupt => Net_641 );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "1011111"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,2)] is empty.
UDB [UDB=(2,3)] contents:
LAB@[UDB=(2,3)][LB=0] #macrocells=4, #inputs=11, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\UART:BUART:rx_state_0\, Mode=(T-Register) @ [UDB=(2,3)][LB=0][MC=0]
        Total # of inputs        : 11
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !Net_1495 * !\UART:BUART:tx_ctrl_mark_last\ * 
              !\UART:BUART:rx_state_0\ * \UART:BUART:rx_bitclk_enable\ * 
              !\UART:BUART:rx_state_3\ * \UART:BUART:rx_state_2\ * 
              !\UART:BUART:pollcount_1\
            + !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * !\UART:BUART:rx_state_3\ * 
              \UART:BUART:rx_state_2\ * !\UART:BUART:pollcount_1\ * 
              !\UART:BUART:pollcount_0\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_5\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_4\
        );
        Output = \UART:BUART:rx_state_0\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART:BUART:rx_counter_load\, Mode=(Combinatorial) @ [UDB=(2,3)][LB=0][MC=1]
        Total # of inputs        : 4
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\
        );
        Output = \UART:BUART:rx_counter_load\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART:BUART:rx_load_fifo\, Mode=(D-Register) @ [UDB=(2,3)][LB=0][MC=2]
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * \UART:BUART:rx_state_3\ * 
              !\UART:BUART:rx_state_2\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_5\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_4\
        );
        Output = \UART:BUART:rx_load_fifo\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART:BUART:rx_status_3\, Mode=(D-Register) @ [UDB=(2,3)][LB=0][MC=3]
        Total # of inputs        : 8
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !Net_1495 * !\UART:BUART:tx_ctrl_mark_last\ * 
              !\UART:BUART:rx_state_0\ * \UART:BUART:rx_bitclk_enable\ * 
              \UART:BUART:rx_state_3\ * \UART:BUART:rx_state_2\ * 
              !\UART:BUART:pollcount_1\
            + !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * \UART:BUART:rx_state_3\ * 
              \UART:BUART:rx_state_2\ * !\UART:BUART:pollcount_1\ * 
              !\UART:BUART:pollcount_0\
        );
        Output = \UART:BUART:rx_status_3\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,3)][LB=1] #macrocells=4, #inputs=10, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\UART:BUART:rx_state_2\, Mode=(T-Register) @ [UDB=(2,3)][LB=1][MC=0]
        Total # of inputs        : 10
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !Net_1495 * !\UART:BUART:tx_ctrl_mark_last\ * 
              !\UART:BUART:rx_state_0\ * !\UART:BUART:rx_state_3\ * 
              !\UART:BUART:rx_state_2\ * \UART:BUART:rx_last\
            + !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * \UART:BUART:rx_state_3\
            + !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * \UART:BUART:rx_state_2\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_5\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_4\
        );
        Output = \UART:BUART:rx_state_2\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART:BUART:rx_state_stop1_reg\, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=1]
        Total # of inputs        : 4
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_state_3\ * \UART:BUART:rx_state_2\
        );
        Output = \UART:BUART:rx_state_stop1_reg\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART:BUART:rx_last\, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_1495
        );
        Output = \UART:BUART:rx_last\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART:BUART:rx_state_3\, Mode=(T-Register) @ [UDB=(2,3)][LB=1][MC=3]
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * \UART:BUART:rx_state_3\ * 
              \UART:BUART:rx_state_2\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_5\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_4\
        );
        Output = \UART:BUART:rx_state_3\ (fanout=7)
        Properties               : 
        {
        }
}

count7cell: Name =\UART:BUART:sRX:RxBitCounter\
    PORT MAP (
        clock => \UART:Net_9\ ,
        load => \UART:BUART:rx_counter_load\ ,
        count_6 => \UART:BUART:rx_count_6\ ,
        count_5 => \UART:BUART:rx_count_5\ ,
        count_4 => \UART:BUART:rx_count_4\ ,
        count_3 => \UART:BUART:rx_count_3\ ,
        count_2 => \UART:BUART:rx_count_2\ ,
        count_1 => \UART:BUART:rx_count_1\ ,
        count_0 => \UART:BUART:rx_count_0\ ,
        tc => \UART:BUART:rx_count7_tc\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "1110010"
        cy_route_en = 1
        cy_route_ld = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,4)] contents:
LAB@[UDB=(2,4)][LB=0] #macrocells=4, #inputs=10, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:ch_addr_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_old_id_0\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\AD_konverter:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial) @ [UDB=(2,4)][LB=0][MC=3]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_352 * !\AD_konverter:bSAR_SEQ:load_period\
        );
        Output = \AD_konverter:bSAR_SEQ:cnt_enable\ (fanout=2)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,4)][LB=1] #macrocells=4, #inputs=6, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\UART:BUART:rx_bitclk_enable\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              !\UART:BUART:rx_count_0\
        );
        Output = \UART:BUART:rx_bitclk_enable\ (fanout=6)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART:BUART:pollcount_0\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=1]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !Net_1495 * !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              \UART:BUART:pollcount_0\
            + Net_1495 * !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              !\UART:BUART:pollcount_0\
        );
        Output = \UART:BUART:pollcount_0\ (fanout=5)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART:BUART:pollcount_1\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=2]
        Total # of inputs        : 5
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !Net_1495 * !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              \UART:BUART:pollcount_1\
            + Net_1495 * !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              !\UART:BUART:pollcount_1\ * \UART:BUART:pollcount_0\
            + !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              \UART:BUART:pollcount_1\ * !\UART:BUART:pollcount_0\
        );
        Output = \UART:BUART:pollcount_1\ (fanout=4)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART:BUART:rx_postpoll\, Mode=(Combinatorial) @ [UDB=(2,4)][LB=1][MC=3]
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              Net_1495 * \UART:BUART:pollcount_0\
            + \UART:BUART:pollcount_1\
        );
        Output = \UART:BUART:rx_postpoll\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\UART:BUART:sRX:RxShifter:u0\
    PORT MAP (
        clock => \UART:Net_9\ ,
        cs_addr_2 => \UART:BUART:tx_ctrl_mark_last\ ,
        cs_addr_1 => \UART:BUART:rx_state_0\ ,
        cs_addr_0 => \UART:BUART:rx_bitclk_enable\ ,
        route_si => \UART:BUART:rx_postpoll\ ,
        f0_load => \UART:BUART:rx_load_fifo\ ,
        f0_bus_stat_comb => \UART:BUART:rx_fifonotempty\ ,
        f0_blk_stat_comb => \UART:BUART:rx_fifofull\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

count7cell: Name =\AD_konverter:bSAR_SEQ:ChannelCounter\
    PORT MAP (
        clock => \AD_konverter:clock\ ,
        load => \AD_konverter:bSAR_SEQ:load_period\ ,
        enable => \AD_konverter:bSAR_SEQ:cnt_enable\ ,
        count_6 => \AD_konverter:bSAR_SEQ:count_6\ ,
        count_5 => \AD_konverter:ch_addr_5\ ,
        count_4 => \AD_konverter:ch_addr_4\ ,
        count_3 => \AD_konverter:ch_addr_3\ ,
        count_2 => \AD_konverter:ch_addr_2\ ,
        count_1 => \AD_konverter:ch_addr_1\ ,
        count_0 => \AD_konverter:ch_addr_0\ ,
        tc => \AD_konverter:bSAR_SEQ:cnt_tc\ ,
        clk_en => \AD_konverter:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "0000011"
        cy_route_en = 1
        cy_route_ld = 1
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\AD_konverter:bSAR_SEQ:enable\)

UDB [UDB=(2,5)] contents:
LAB@[UDB=(2,5)][LB=0] #macrocells=2, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial) @ [UDB=(2,5)][LB=0][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:ch_addr_5\
            + \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:ch_addr_4\
            + \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:ch_addr_3\
            + \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:ch_addr_2\
            + !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:ch_addr_1\
            + \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:ch_addr_1\
            + !\AD_konverter:AMuxHw_2_Decoder_old_id_0\ * 
              \AD_konverter:ch_addr_0\
            + \AD_konverter:AMuxHw_2_Decoder_old_id_0\ * 
              !\AD_konverter:ch_addr_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_is_active_split\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART:BUART:tx_ctrl_mark_last\, Mode=(T-Register) @ [UDB=(2,5)][LB=0][MC=1]
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART:BUART:tx_ctrl_mark_last\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(2,5)][LB=1] #macrocells=4, #inputs=10, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:ch_addr_1\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_old_id_1\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:ch_addr_5\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_old_id_5\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial) @ [UDB=(2,5)][LB=1][MC=2]
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:ch_addr_5\
            + !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:ch_addr_4\
            + !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:ch_addr_3\
            + !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:ch_addr_2\
            + \AD_konverter:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    [McSlotId=3]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:ch_addr_3\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_old_id_3\ (fanout=66)
        Properties               : 
        {
        }
}

controlcell: Name =\AD_konverter:bSAR_SEQ:CtrlReg\
    PORT MAP (
        clock => \AD_konverter:clock\ ,
        control_7 => \AD_konverter:bSAR_SEQ:control_7\ ,
        control_6 => \AD_konverter:bSAR_SEQ:control_6\ ,
        control_5 => \AD_konverter:bSAR_SEQ:control_5\ ,
        control_4 => \AD_konverter:bSAR_SEQ:control_4\ ,
        control_3 => \AD_konverter:bSAR_SEQ:control_3\ ,
        control_2 => \AD_konverter:bSAR_SEQ:control_2\ ,
        control_1 => \AD_konverter:bSAR_SEQ:load_period\ ,
        control_0 => \AD_konverter:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_ctrl_mode_0 = "00000111"
        cy_ctrl_mode_1 = "00000110"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(3,0)] contents:
LAB@[UDB=(3,0)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,0)][LB=1] #macrocells=3, #inputs=7, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=__ONE__, Mode=(Combinatorial) @ [UDB=(3,0)][LB=1][MC=0]
        Total # of inputs        : 0
        Total # of product terms : 0
            Clock Enable: True
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = __ONE__ (fanout=4)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,1)] contents:
LAB@[UDB=(3,1)][LB=0] #macrocells=2, #inputs=7, #pterms=2
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,1)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,2)] is empty.
UDB [UDB=(3,3)] contents:
LAB@[UDB=(3,3)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,3)][LB=1] #macrocells=1, #inputs=1, #pterms=1
{
    [McSlotId=0]:     MacroCell: Name=\PWM_Speed:PWMUDB:runmode_enable\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_284) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_Speed:PWMUDB:control_7\
        );
        Output = \PWM_Speed:PWMUDB:runmode_enable\ (fanout=4)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

controlcell: Name =\PWM_Speed:PWMUDB:genblk1:ctrlreg\
    PORT MAP (
        clock => Net_284 ,
        control_7 => \PWM_Speed:PWMUDB:control_7\ ,
        control_6 => \PWM_Speed:PWMUDB:control_6\ ,
        control_5 => \PWM_Speed:PWMUDB:control_5\ ,
        control_4 => \PWM_Speed:PWMUDB:control_4\ ,
        control_3 => \PWM_Speed:PWMUDB:control_3\ ,
        control_2 => \PWM_Speed:PWMUDB:control_2\ ,
        control_1 => \PWM_Speed:PWMUDB:control_1\ ,
        control_0 => \PWM_Speed:PWMUDB:control_0\ );
    Properties:
    {
        cy_ctrl_mode_0 = "11111111"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(3,4)] contents:
LAB@[UDB=(3,4)][LB=0] #macrocells=1, #inputs=3, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=\AD_konverter:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \AD_konverter:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_688
            + \AD_konverter:Net_3935\
        );
        Output = \AD_konverter:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(3,4)][LB=1] #macrocells=2, #inputs=2, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=\AD_konverter:bSAR_SEQ:nrq_reg\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: PosEdge(\AD_konverter:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \AD_konverter:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \AD_konverter:bSAR_SEQ:nrq_reg\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=Net_688, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: PosEdge(\AD_konverter:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \AD_konverter:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\AD_konverter:bSAR_SEQ:nrq_reg\
        );
        Output = Net_688 (fanout=4)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

statuscell: Name =\AD_konverter:bSAR_SEQ:EOCSts\
    PORT MAP (
        clock => \AD_konverter:clock\ ,
        status_0 => Net_688 ,
        clk_en => \AD_konverter:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_force_order = 1
        cy_md_select = "00000001"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\AD_konverter:bSAR_SEQ:enable\)

UDB [UDB=(3,5)] contents:
LAB@[UDB=(3,5)][LB=0] #macrocells=4, #inputs=8, #pterms=6
{
    [McSlotId=0]:     MacroCell: Name=\AD_konverter:soc_out\, Mode=(D-Register) @ [UDB=(3,5)][LB=0][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: PosEdge(\AD_konverter:bSAR_SEQ:enable\)
        Main Equation            : 2 pterms
        (
              !\AD_konverter:soc_out\ * \AD_konverter:Net_3830\ * 
              !\AD_konverter:bSAR_SEQ:load_period\ * 
              \AD_konverter:bSAR_SEQ:state_1\ * 
              !\AD_konverter:bSAR_SEQ:cnt_tc\
            + !\AD_konverter:soc_out\ * !\AD_konverter:bSAR_SEQ:load_period\ * 
              \AD_konverter:bSAR_SEQ:soc_in\ * 
              !\AD_konverter:bSAR_SEQ:state_1\
        );
        Output = \AD_konverter:soc_out\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\AD_konverter:bSAR_SEQ:state_1\, Mode=(D-Register) @ [UDB=(3,5)][LB=0][MC=1]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: PosEdge(\AD_konverter:bSAR_SEQ:enable\)
        Main Equation            : 2 pterms
        (
              !\AD_konverter:soc_out\ * !\AD_konverter:Net_3830\ * 
              !\AD_konverter:bSAR_SEQ:load_period\ * 
              \AD_konverter:bSAR_SEQ:state_1\
            + \AD_konverter:soc_out\ * !\AD_konverter:bSAR_SEQ:load_period\ * 
              !\AD_konverter:bSAR_SEQ:state_1\
        );
        Output = \AD_konverter:bSAR_SEQ:state_1\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\AD_konverter:bSAR_SEQ:soc_in\, Mode=(D-Register) @ [UDB=(3,5)][LB=0][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: PosEdge(\AD_konverter:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              !\AD_konverter:bSAR_SEQ:soc_reg\ * Net_1417_local
        );
        Output = \AD_konverter:bSAR_SEQ:soc_in\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\AD_konverter:bSAR_SEQ:soc_reg\, Mode=(D-Register) @ [UDB=(3,5)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: PosEdge(\AD_konverter:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              Net_1417_local
        );
        Output = \AD_konverter:bSAR_SEQ:soc_reg\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,5)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register) @ [UDB=(3,5)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register) @ [UDB=(3,5)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\AD_konverter:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register) @ [UDB=(3,5)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AD_konverter:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AD_konverter:AMuxHw_2_Decoder_is_active\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_5\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_4\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_3\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_2\ * 
              \AD_konverter:AMuxHw_2_Decoder_old_id_1\ * 
              !\AD_konverter:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AD_konverter:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)
        Properties               : 
        {
        }
}

Intr container @ [IntrContainer=(0)]: 
  Intr@ [IntrContainer=(0)][IntrId=(0)] 
    interrupt: Name =\AD_konverter:IRQ\
        PORT MAP (
            interrupt => Net_688 );
        Properties:
        {
            int_type = "10"
        }
  Intr@ [IntrContainer=(0)][IntrId=(1)] 
    interrupt: Name =isr_1
        PORT MAP (
            interrupt => Net_688 );
        Properties:
        {
            int_type = "10"
        }
  Intr@ [IntrContainer=(0)][IntrId=(2)] 
    interrupt: Name =isr_2
        PORT MAP (
            interrupt => Net_554 );
        Properties:
        {
            int_type = "10"
        }
  Intr@ [IntrContainer=(0)][IntrId=(3)] 
    interrupt: Name =isr_3
        PORT MAP (
            interrupt => Net_671_local );
        Properties:
        {
            int_type = "10"
        }
  Intr@ [IntrContainer=(0)][IntrId=(4)] 
    interrupt: Name =isr_4
        PORT MAP (
            interrupt => Net_648_local );
        Properties:
        {
            int_type = "10"
        }
  Intr@ [IntrContainer=(0)][IntrId=(5)] 
    interrupt: Name =isr_5
        PORT MAP (
            interrupt => Net_641 );
        Properties:
        {
            int_type = "10"
        }
Drq container @ [DrqContainer=(0)]: 
  Dma@ [DrqContainer=(0)][DrqId=(0)] 
    drqcell: Name =\AD_konverter:FinalBuf\
        PORT MAP (
            dmareq => \AD_konverter:Net_3698\ ,
            termin => zero ,
            termout => \AD_konverter:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
  Dma@ [DrqContainer=(0)][DrqId=(1)] 
    drqcell: Name =\AD_konverter:TempBuf\
        PORT MAP (
            dmareq => \AD_konverter:Net_3830\ ,
            termin => zero ,
            termout => \AD_konverter:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
Port 0 contains the following IO cells:
[IoId=0]: 
Pin : Name = Tx(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => Tx(0)__PA ,
        input => Net_1494 ,
        pad => Tx(0)_PAD );
    Properties:
    {
    }

[IoId=1]: 
Pin : Name = Rx(0)
    Attributes:
        In Group/Port: True
        In Sync Option: SYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_DIGITAL
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: True
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Rx(0)__PA ,
        fb => Net_1495 ,
        pad => Rx(0)_PAD );
    Properties:
    {
    }

Port 1 is empty
Port 2 is empty
Port 3 contains the following IO cells:
[IoId=0]: 
Pin : Name = Pin_Speed(0)
    Attributes:
        In Group/Port: True
        In Sync Option: SYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_DIGITAL
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: True
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Pin_Speed(0)__PA ,
        fb => Net_1511 ,
        pad => Pin_Speed(0)_PAD );
    Properties:
    {
    }

[IoId=3]: 
Pin : Name = Pin_Voltage(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Pin_Voltage(0)__PA ,
        analog_term => Net_848 ,
        pad => Pin_Voltage(0)_PAD ,
        input => \AD_konverter:AMuxHw_2_Decoder_one_hot_0\ );
    Properties:
    {
    }

[IoId=4]: 
Pin : Name = Pin_Current(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Pin_Current(0)__PA ,
        analog_term => Net_847 ,
        pad => Pin_Current(0)_PAD ,
        input => \AD_konverter:AMuxHw_2_Decoder_one_hot_1\ );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = Pin_Load_Current(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Pin_Load_Current(0)__PA ,
        analog_term => Net_846 ,
        pad => Pin_Load_Current(0)_PAD ,
        input => \AD_konverter:AMuxHw_2_Decoder_one_hot_3\ );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = Pin_Torque(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Pin_Torque(0)__PA ,
        analog_term => Net_479 ,
        pad => Pin_Torque(0)_PAD ,
        input => \AD_konverter:AMuxHw_2_Decoder_one_hot_2\ );
    Properties:
    {
    }

Port 4 contains the following IO cells:
[IoId=7]: 
Pin : Name = PWM_Out(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => PWM_Out(0)__PA ,
        input => Net_1095 ,
        pad => PWM_Out(0)_PAD );
    Properties:
    {
    }

Port 5 is empty
Port 6 is empty
Port 12 is empty
Port 15 is empty
CAN 2.0b group 0: empty
Cache group 0: empty
CapSense group 0: empty
Clock group 0: 
    Clock Block @ F(Clock,0): 
    clockblockcell: Name =ClockBlock
        PORT MAP (
            imo => ClockBlock_IMO ,
            pllout => ClockBlock_PLL_OUT ,
            ilo => ClockBlock_ILO ,
            clk_100k => ClockBlock_100k ,
            clk_1k => ClockBlock_1k ,
            clk_32k => ClockBlock_32k ,
            xtal => ClockBlock_XTAL ,
            clk_32k_xtal => ClockBlock_XTAL_32KHZ ,
            clk_sync => ClockBlock_MASTER_CLK ,
            clk_bus_glb => ClockBlock_BUS_CLK ,
            clk_bus => ClockBlock_BUS_CLK_local ,
            dclk_glb_0 => Net_4 ,
            dclk_0 => Net_4_local ,
            dclk_glb_1 => Net_908 ,
            dclk_1 => Net_908_local ,
            dclk_glb_2 => \AD_konverter:clock\ ,
            dclk_2 => \AD_konverter:clock_local\ ,
            dclk_glb_3 => \UART:Net_9\ ,
            dclk_3 => \UART:Net_9_local\ ,
            dclk_glb_4 => Net_284 ,
            dclk_4 => Net_284_local ,
            dclk_glb_5 => Net_1417 ,
            dclk_5 => Net_1417_local ,
            dclk_glb_6 => Net_648 ,
            dclk_6 => Net_648_local ,
            dclk_glb_7 => Net_671 ,
            dclk_7 => Net_671_local );
        Properties:
        {
        }
Comparator group 0: empty
Digital Filter Block group 0: empty
Delta-Sigma ADC group 0: empty
Decimator group 0: empty
EMIF group 0: empty
I2C group 0: empty
Segment LCD group 0: empty
LVD group 0: empty
PM group 0: empty
Analog (SC/CT) Blocks group 0: empty
SPC group 0: empty
Timer group 0: empty
USB group 0: empty
VIDAC group 0: empty
Opamp group 0: empty
CapSense Buffers group 0: empty
Vref group 0: 
    Vref Block @ F(Vref,13): 
    vrefcell: Name =\AD_konverter:SAR:vRef_Vdda_1\
        PORT MAP (
            vout => \AD_konverter:SAR:Net_235\ );
        Properties:
        {
            autoenable = 1
            guid = "4720866E-BC14-478d-B8A0-3E44F38CADAC"
            ignoresleep = 0
            name = "Vdda/2"
        }
LPF group 0: empty
SAR ADC group 0: 
    SAR Block @ F(SAR,1): 
    sarcell: Name =\AD_konverter:SAR:ADC_SAR\
        PORT MAP (
            vplus => \AD_konverter:Net_2803\ ,
            vminus => \AD_konverter:SAR:Net_126\ ,
            ext_pin => \AD_konverter:SAR:Net_209\ ,
            vrefhi_out => \AD_konverter:SAR:Net_126\ ,
            vref => \AD_konverter:SAR:Net_235\ ,
            clk_udb => \AD_konverter:clock_local\ ,
            sof_udb => \AD_konverter:soc_out\ ,
            irq => \AD_konverter:SAR:Net_252\ ,
            next => Net_352 ,
            data_out_udb_11 => \AD_konverter:SAR:Net_207_11\ ,
            data_out_udb_10 => \AD_konverter:SAR:Net_207_10\ ,
            data_out_udb_9 => \AD_konverter:SAR:Net_207_9\ ,
            data_out_udb_8 => \AD_konverter:SAR:Net_207_8\ ,
            data_out_udb_7 => \AD_konverter:SAR:Net_207_7\ ,
            data_out_udb_6 => \AD_konverter:SAR:Net_207_6\ ,
            data_out_udb_5 => \AD_konverter:SAR:Net_207_5\ ,
            data_out_udb_4 => \AD_konverter:SAR:Net_207_4\ ,
            data_out_udb_3 => \AD_konverter:SAR:Net_207_3\ ,
            data_out_udb_2 => \AD_konverter:SAR:Net_207_2\ ,
            data_out_udb_1 => \AD_konverter:SAR:Net_207_1\ ,
            data_out_udb_0 => \AD_konverter:SAR:Net_207_0\ ,
            eof_udb => \AD_konverter:Net_3830\ );
        Properties:
        {
            cy_registers = ""
        }

Blocks not positioned by the digital component placer:
    Amux Block @ <No Location>: 
    amuxcell: Name =\AD_konverter:AMuxHw_2\
        PORT MAP (
            muxin_63 => Net_445 ,
            muxin_62 => Net_444 ,
            muxin_61 => Net_443 ,
            muxin_60 => Net_442 ,
            muxin_59 => Net_441 ,
            muxin_58 => Net_440 ,
            muxin_57 => Net_439 ,
            muxin_56 => Net_438 ,
            muxin_55 => Net_437 ,
            muxin_54 => Net_436 ,
            muxin_53 => Net_435 ,
            muxin_52 => Net_434 ,
            muxin_51 => Net_433 ,
            muxin_50 => Net_432 ,
            muxin_49 => Net_431 ,
            muxin_48 => Net_430 ,
            muxin_47 => Net_429 ,
            muxin_46 => Net_427 ,
            muxin_45 => Net_425 ,
            muxin_44 => Net_424 ,
            muxin_43 => Net_422 ,
            muxin_42 => Net_420 ,
            muxin_41 => Net_419 ,
            muxin_40 => Net_417 ,
            muxin_39 => Net_415 ,
            muxin_38 => Net_414 ,
            muxin_37 => Net_412 ,
            muxin_36 => Net_410 ,
            muxin_35 => Net_409 ,
            muxin_34 => Net_407 ,
            muxin_33 => Net_405 ,
            muxin_32 => Net_404 ,
            muxin_31 => Net_402 ,
            muxin_30 => Net_400 ,
            muxin_29 => Net_399 ,
            muxin_28 => Net_397 ,
            muxin_27 => Net_395 ,
            muxin_26 => Net_394 ,
            muxin_25 => Net_392 ,
            muxin_24 => Net_390 ,
            muxin_23 => Net_389 ,
            muxin_22 => Net_387 ,
            muxin_21 => Net_385 ,
            muxin_20 => Net_384 ,
            muxin_19 => Net_382 ,
            muxin_18 => Net_380 ,
            muxin_17 => Net_379 ,
            muxin_16 => Net_377 ,
            muxin_15 => Net_375 ,
            muxin_14 => Net_374 ,
            muxin_13 => Net_372 ,
            muxin_12 => Net_370 ,
            muxin_11 => Net_369 ,
            muxin_10 => Net_367 ,
            muxin_9 => Net_365 ,
            muxin_8 => Net_364 ,
            muxin_7 => Net_362 ,
            muxin_6 => Net_360 ,
            muxin_5 => Net_359 ,
            muxin_4 => Net_357 ,
            muxin_3 => Net_846 ,
            muxin_2 => Net_479 ,
            muxin_1 => Net_847 ,
            muxin_0 => Net_848 ,
            hw_ctrl_en_63 => \AD_konverter:AMuxHw_2_Decoder_one_hot_63\ ,
            hw_ctrl_en_62 => \AD_konverter:AMuxHw_2_Decoder_one_hot_62\ ,
            hw_ctrl_en_61 => \AD_konverter:AMuxHw_2_Decoder_one_hot_61\ ,
            hw_ctrl_en_60 => \AD_konverter:AMuxHw_2_Decoder_one_hot_60\ ,
            hw_ctrl_en_59 => \AD_konverter:AMuxHw_2_Decoder_one_hot_59\ ,
            hw_ctrl_en_58 => \AD_konverter:AMuxHw_2_Decoder_one_hot_58\ ,
            hw_ctrl_en_57 => \AD_konverter:AMuxHw_2_Decoder_one_hot_57\ ,
            hw_ctrl_en_56 => \AD_konverter:AMuxHw_2_Decoder_one_hot_56\ ,
            hw_ctrl_en_55 => \AD_konverter:AMuxHw_2_Decoder_one_hot_55\ ,
            hw_ctrl_en_54 => \AD_konverter:AMuxHw_2_Decoder_one_hot_54\ ,
            hw_ctrl_en_53 => \AD_konverter:AMuxHw_2_Decoder_one_hot_53\ ,
            hw_ctrl_en_52 => \AD_konverter:AMuxHw_2_Decoder_one_hot_52\ ,
            hw_ctrl_en_51 => \AD_konverter:AMuxHw_2_Decoder_one_hot_51\ ,
            hw_ctrl_en_50 => \AD_konverter:AMuxHw_2_Decoder_one_hot_50\ ,
            hw_ctrl_en_49 => \AD_konverter:AMuxHw_2_Decoder_one_hot_49\ ,
            hw_ctrl_en_48 => \AD_konverter:AMuxHw_2_Decoder_one_hot_48\ ,
            hw_ctrl_en_47 => \AD_konverter:AMuxHw_2_Decoder_one_hot_47\ ,
            hw_ctrl_en_46 => \AD_konverter:AMuxHw_2_Decoder_one_hot_46\ ,
            hw_ctrl_en_45 => \AD_konverter:AMuxHw_2_Decoder_one_hot_45\ ,
            hw_ctrl_en_44 => \AD_konverter:AMuxHw_2_Decoder_one_hot_44\ ,
            hw_ctrl_en_43 => \AD_konverter:AMuxHw_2_Decoder_one_hot_43\ ,
            hw_ctrl_en_42 => \AD_konverter:AMuxHw_2_Decoder_one_hot_42\ ,
            hw_ctrl_en_41 => \AD_konverter:AMuxHw_2_Decoder_one_hot_41\ ,
            hw_ctrl_en_40 => \AD_konverter:AMuxHw_2_Decoder_one_hot_40\ ,
            hw_ctrl_en_39 => \AD_konverter:AMuxHw_2_Decoder_one_hot_39\ ,
            hw_ctrl_en_38 => \AD_konverter:AMuxHw_2_Decoder_one_hot_38\ ,
            hw_ctrl_en_37 => \AD_konverter:AMuxHw_2_Decoder_one_hot_37\ ,
            hw_ctrl_en_36 => \AD_konverter:AMuxHw_2_Decoder_one_hot_36\ ,
            hw_ctrl_en_35 => \AD_konverter:AMuxHw_2_Decoder_one_hot_35\ ,
            hw_ctrl_en_34 => \AD_konverter:AMuxHw_2_Decoder_one_hot_34\ ,
            hw_ctrl_en_33 => \AD_konverter:AMuxHw_2_Decoder_one_hot_33\ ,
            hw_ctrl_en_32 => \AD_konverter:AMuxHw_2_Decoder_one_hot_32\ ,
            hw_ctrl_en_31 => \AD_konverter:AMuxHw_2_Decoder_one_hot_31\ ,
            hw_ctrl_en_30 => \AD_konverter:AMuxHw_2_Decoder_one_hot_30\ ,
            hw_ctrl_en_29 => \AD_konverter:AMuxHw_2_Decoder_one_hot_29\ ,
            hw_ctrl_en_28 => \AD_konverter:AMuxHw_2_Decoder_one_hot_28\ ,
            hw_ctrl_en_27 => \AD_konverter:AMuxHw_2_Decoder_one_hot_27\ ,
            hw_ctrl_en_26 => \AD_konverter:AMuxHw_2_Decoder_one_hot_26\ ,
            hw_ctrl_en_25 => \AD_konverter:AMuxHw_2_Decoder_one_hot_25\ ,
            hw_ctrl_en_24 => \AD_konverter:AMuxHw_2_Decoder_one_hot_24\ ,
            hw_ctrl_en_23 => \AD_konverter:AMuxHw_2_Decoder_one_hot_23\ ,
            hw_ctrl_en_22 => \AD_konverter:AMuxHw_2_Decoder_one_hot_22\ ,
            hw_ctrl_en_21 => \AD_konverter:AMuxHw_2_Decoder_one_hot_21\ ,
            hw_ctrl_en_20 => \AD_konverter:AMuxHw_2_Decoder_one_hot_20\ ,
            hw_ctrl_en_19 => \AD_konverter:AMuxHw_2_Decoder_one_hot_19\ ,
            hw_ctrl_en_18 => \AD_konverter:AMuxHw_2_Decoder_one_hot_18\ ,
            hw_ctrl_en_17 => \AD_konverter:AMuxHw_2_Decoder_one_hot_17\ ,
            hw_ctrl_en_16 => \AD_konverter:AMuxHw_2_Decoder_one_hot_16\ ,
            hw_ctrl_en_15 => \AD_konverter:AMuxHw_2_Decoder_one_hot_15\ ,
            hw_ctrl_en_14 => \AD_konverter:AMuxHw_2_Decoder_one_hot_14\ ,
            hw_ctrl_en_13 => \AD_konverter:AMuxHw_2_Decoder_one_hot_13\ ,
            hw_ctrl_en_12 => \AD_konverter:AMuxHw_2_Decoder_one_hot_12\ ,
            hw_ctrl_en_11 => \AD_konverter:AMuxHw_2_Decoder_one_hot_11\ ,
            hw_ctrl_en_10 => \AD_konverter:AMuxHw_2_Decoder_one_hot_10\ ,
            hw_ctrl_en_9 => \AD_konverter:AMuxHw_2_Decoder_one_hot_9\ ,
            hw_ctrl_en_8 => \AD_konverter:AMuxHw_2_Decoder_one_hot_8\ ,
            hw_ctrl_en_7 => \AD_konverter:AMuxHw_2_Decoder_one_hot_7\ ,
            hw_ctrl_en_6 => \AD_konverter:AMuxHw_2_Decoder_one_hot_6\ ,
            hw_ctrl_en_5 => \AD_konverter:AMuxHw_2_Decoder_one_hot_5\ ,
            hw_ctrl_en_4 => \AD_konverter:AMuxHw_2_Decoder_one_hot_4\ ,
            vout => \AD_konverter:Net_2803\ );
        Properties:
        {
            api_type = 2
            connect_mode = 1
            cy_registers = ""
            hw_control = 1
            init_mux_sel = "0000000000000000000000000000000000000000000000000000000000000000"
            muxin_width = 64
            one_active = 1
        }
</CYPRESSTAG>
<CYPRESSTAG name="Port Configuration Details">

------------------------------------------------------------
Port Configuration report
------------------------------------------------------------
     |     |       | Interrupt |                  |                     | 
Port | Pin | Fixed |      Type |       Drive Mode |                Name | Connections
-----+-----+-------+-----------+------------------+---------------------+---------------------------------------------------------------
   0 |   0 |     * |      NONE |         CMOS_OUT |               Tx(0) | In(Net_1494)
     |   1 |     * |      NONE |     HI_Z_DIGITAL |               Rx(0) | FB(Net_1495)
-----+-----+-------+-----------+------------------+---------------------+---------------------------------------------------------------
   3 |   0 |     * |      NONE |     HI_Z_DIGITAL |        Pin_Speed(0) | FB(Net_1511)
     |   3 |     * |      NONE |      HI_Z_ANALOG |      Pin_Voltage(0) | In(\AD_konverter:AMuxHw_2_Decoder_one_hot_0\), Analog(Net_848)
     |   4 |     * |      NONE |      HI_Z_ANALOG |      Pin_Current(0) | In(\AD_konverter:AMuxHw_2_Decoder_one_hot_1\), Analog(Net_847)
     |   5 |     * |      NONE |      HI_Z_ANALOG | Pin_Load_Current(0) | In(\AD_konverter:AMuxHw_2_Decoder_one_hot_3\), Analog(Net_846)
     |   6 |     * |      NONE |      HI_Z_ANALOG |       Pin_Torque(0) | In(\AD_konverter:AMuxHw_2_Decoder_one_hot_2\), Analog(Net_479)
-----+-----+-------+-----------+------------------+---------------------+---------------------------------------------------------------
   4 |   7 |     * |      NONE |         CMOS_OUT |          PWM_Out(0) | In(Net_1095)
----------------------------------------------------------------------------------------------------------------------------------------
</CYPRESSTAG>
</CYPRESSTAG>
</CYPRESSTAG>
Digital component placer commit/Report: Elapsed time ==> 0s.005ms
Digital Placement phase: Elapsed time ==> 6s.187ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Routing">
Routing successful.
Digital Routing phase: Elapsed time ==> 5s.407ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream and API generation">
Bitstream and API generation phase: Elapsed time ==> 0s.278ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream verification">
Bitstream verification phase: Elapsed time ==> 0s.047ms
</CYPRESSTAG>
<CYPRESSTAG name="Static timing analysis">
Warning: sta.M0021: sample_timing.html: Warning-1350: Asynchronous path(s) exist from "Sample_Clock(routed)" to "AD_konverter_IntClock". See the timing report for details. (File=C:\Users\Ibrahim\Documents\Desktop\sample_v9\sample.cydsn\sample_timing.html)
Timing report is in sample_timing.html.
Static timing analysis phase: Elapsed time ==> 0s.803ms
</CYPRESSTAG>
<CYPRESSTAG name="Data reporting">
Data reporting phase: Elapsed time ==> 0s.000ms
</CYPRESSTAG>
<CYPRESSTAG name="Database update...">
Design database save phase: Elapsed time ==> 0s.257ms
</CYPRESSTAG>
cydsfit: Elapsed time ==> 17s.893ms
</CYPRESSTAG>
Fitter phase: Elapsed time ==> 17s.941ms
API generation phase: Elapsed time ==> 2s.695ms
Dependency generation phase: Elapsed time ==> 0s.018ms
Cleanup phase: Elapsed time ==> 0s.001ms
